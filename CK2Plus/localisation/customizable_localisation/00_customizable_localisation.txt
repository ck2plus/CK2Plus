# AVAILABLE CUSTOM LOCALISATION KEYS
# When adding new custom loc keys, add them to the appropriate category (or add a new one) and describe them. Name the strings "String_X" where x is its content
# To not display anything, you can use 'localisation_key = ""'
# To have the first valid text be used, rather than a random valid text, use "use_first_valid = yes"

# RELATIONSHIPS
# GetRootRelation
# GetPrevRelation
# GetEventTarget1Relation
# GetEventTarget2Relation
# GetEventTarget3Relation
# GetEventTarget4Relation
# GetConcubineConsort
# GetSpouse
# GetRootRelation_Wife
# GetRootRelation_Husband
# GetPrevRelation_Wife
# GetPrevRelation_Husband
# GetEventTarget1Relation_Wife
# GetEventTarget1Relation_Husband
# GetEventTarget2Relation_Wife
# GetEventTarget2Relation_Husband
# GetEventTarget3Relation_Wife
# GetEventTarget3Relation_Husband
# GetEventTarget4Relation_Wife
# GetEventTarget4Relation_Husband
# GetParent
# GetGrandParent
# GetChild
# GetGrandChild
# GetSibling
# GetConcubineConsort
# GetRival
# GetFriend
# GetLover
# GetAuntUncle
# GetNibling
# GetCousin
# GetSiblingInLaw
# GetParentInLaw
# GetKin
# GetLiege
# GetVassal
# GetCourtier
# GetRival
# GetFriend
# GetLover
# GetSisterBrother			Not necessarily related
# GetSeductressSeducer
# GetManWomanPreference		Gets man/woman depending on character's sexual preferences
# GetMenWomenPreference		gets men/women depending on character's sexual preferences
# GetRootRomanticWorry 		Stand-alone sentence for someone about to take initiative, like "What if this ruins our friendship?"
# GetRomanticObstacle 		More passive. Piece it into a sentence (lacks punctuation), for someone deciding whether to reciprocate or not, like "I am used to being alone".

# EDUCATION
# GetEducationSubject
# GetEducationRole
# GetEducationTool
# GetEducationalTopicPlural

# CHARACTER JOBS/TITLES
# GetActressActor
# GetAscetic
# GetQueenKing
# GetPrincessPrince
# GetBrideGroom
# GetMasterMistressCap
# GetEmpressEmperor
# GetEmpressEmperorCap

# CHARACTER "DESCRIPTIONS"
# GetVice
# GetFaceDescription
# GetAdultCompliment
# GetChildCompliment
# GetAdultInsult
# GetChildInsult
# GetEventTarget1Compliment
# GetEventTarget1ComplimentNoun
# GetEventTarget1ComplimentAdjective
# GetEventTarget1Insult
# GetEventTarget1InsultNoun
# GetEventTarget1InsultAdjective
# GetAdultComplimentAdjective
# GetAdultComplimentNoun
# GetAdultInsultAdjective
# GetAdultInsultNoun
# GetChildComplimentAdjective
# GetChildComplimentNoun
# GetChildInsultAdjective
# GetChildInsultNoun
# GetEducationComplimentAdjective
# GetEducationComplimentAdjectiveCap
# GetDisease
# GetWesternZodiacSign		Gets the western astrological zodiac sign of character (based on birth date)
# GetCharacterLook 			Simple use, describing a character's immediate countenance/appearance
# GetAgeAdjective 			"The [GetAgeAdjective] [From.GetManWoman]" would read "the old man", for instance

# SOCIETIES
# GetDWReasonToJoin
# GetDWDevil
# GetDWDarkMagic
# GetDWDemon
# GetDWDemons
# GetDWMagician
# GetDWExpression
# GetMission
# GetMOGod
# GetMOSaint
# GetMOBuilding
# GetMOCode
# GetMOGreeting
# GetMOFarewell
# GetSRGreeting
# GetSRFarewell
# GetSRTrinketSymbol
# GetHermesThriceBlessed
# GetCollaboratorHermeticsRank
# GetHermeticDebateSubject
# GetSillyDebateSubject
# GetGrandMasterTitle
# GetAssassinsDrugsTooltip
# GetOmenModifierName
# GetOmenResultReaction
# GetSeductionAstrologyPostScript
# GetSelectedIngredient_1
# GetSelectedIngredient_2
# GetSelectedIngredient_1_property
# GetDemonHuntersEventTitle
# GetFriendEnjoyableQuirk
# GetLoverEnjoyableQuirk
# CHINESE FLAVOR
# GetChineseConvoTopic
# GetNegativeChineseConvoTopic
# GetRootMatchingPersonalityStreak
# GetMediumDisabilityDesc
# GetImpressionOfTribute
# GetNegativeImpressionOfEunuch
# GetDecentImpressionOfEunuch
# GetPositiveImpressionOfEunuch
# GetNegativeImpressionOfConcubine
# GetDecentImpressionOfConcubine
# GetPositiveImpressionOfConcubine
# GetChinaIsolationPastime
# GetChinaPreviousStatusEnd
# GetRandomChineseRegion
# GetRandomChineseFaction
# GetRandomChineseFocus
# GetMonth
# GetChineseProfession
# GetChineseCharacterRole
# GetRegionalBigAnimal

# RELIGION
# GetHouseOfWorship 			Gets name for house of worship of character's religion (character)
# GetReligiousRite 				Gets name for a common religious rite (character)
# GetReligionWarrior
# GetReligionWarriorPlural
# GetReligiousPerson
# GetTrueReligionGroupPersons
# GetTrueReligionAdjective
# GetTrueReligionAdherent
# GetTrueReligionScriptureName
# GetTrueReligionPerson
# GetArtifactSource				Gets name for bodypart artifact's source (saint, holy man, hero)
# GetArtifactSourceCap
# GetReligionAdherent

# PLACES
# GetCapitalHolding				Gets an appropriate noun describing a character's capital holding (character)
# GetHolding 					Gets an appropriate noun to describe a holding (holding)
# GetChamberOpening 			Gets door/tent opening for capital holding (character)
# GetChamber 					Gets chamber/tent for capital holding (character)
# GetReligionTempleName
# GetGroundDesc					Requires a province scope. Gets "snow" (if winter), otherwise "mud" or "dirt".
# GetTerrain 					Requires a province scope. Gets "forest","hills" etc)
# GetInOn 						Requires a province scope. Supplements GetTerrain.
# GetThroughOver				Requires a province scope. Supplements GetTerrain. "We must travel [through] the [mountains]!"

# WEATHER, TIME
# GetWeatherAdjective 			Checks Capital scope
# GetLocalWeatherAdjective		Requires a province scope
# GetTemperature				Checks Capital scope
# GetLocalTemperature 			Requires a province scope
# GetSeason #WIP

# CHINA
# GetLongChineseEmperorName
# GetMediumChineseEmperorName
# GetShortChineseEmperorName
# GetCouncillorLetterGreeting
# GetRulerLetterGreeting
# GetGovernorLetterGreeting
# GetChineseLetterBlessing
# GetChineseComplimentAdjective
# GetChineseOffmapTributaryPrestigeCost
# GetChineseForceOpenDemand
# GetChineseForceOpenDemandChina

# MISC
# GetMatterOfImportance
# GetRandomMythologicalCreature Fetches the name of a cool mythological creature/beast, e.g. as Fenris, or simpler versions like Dragon
# GetDogName  					Fetches the name of your pet hunting dog, if you have the appropriate flag. Fallback is "Sweet-pea". :p
# GetHuntingQuarry
# GetHuntingQuarryCap

### RELATIONSHIPS ###

# The relationship THIS has to ROOT
defined_text = {
	name = GetRootRelation
	use_first_valid = yes

	# War enemies and concubine/consort have highest priority
	text = {
		localisation_key = GetRelation_enemy
		trigger = { war_with = ROOT }
	}

	text = {
		localisation_key = GetConcubineConsortKey
		trigger = { is_consort = ROOT }
	}

	# Then spouses
	text = {
		localisation_key = GetSpouseRootKey
		trigger = { is_married = ROOT }
	}

	# Then some close relatives
	text = {
		localisation_key = GetParentKey
		trigger = { is_parent_of = ROOT }
	}

	text = {
		localisation_key = GetGrandParentKey
		trigger = { is_grandparent_of = ROOT }
	}

	text = {
		localisation_key = GetChildKey
		trigger = { is_child_of = ROOT }
	}

	text = {
		localisation_key = GetGrandChildKey
		trigger = { is_grandchild_of = ROOT }
	}

	text = {
		localisation_key = GetSiblingKey
		trigger = { sibling = ROOT }
	}

	# Followed by Rivals, Friends and Lovers
	text = {
		localisation_key = GetRivalKey
		trigger = { is_rival = ROOT }
	}

	text = {
		localisation_key = GetFriendKey
		trigger = { is_friend = ROOT }
	}

	text = {
		localisation_key = GetLoverKey
		trigger = { is_lover = ROOT }
	}

	# Then the other close relatives and other family ties
	text = {
		localisation_key = GetNiblingKey
		trigger = { is_nibling_of = ROOT }
	}

	text = {
		localisation_key = GetAuntUncleKey
		trigger = { is_aunt_uncle_of = ROOT }
	}

	text = {
		localisation_key = GetCousinKey
		trigger = { is_cousin_of = ROOT }
	}

	text = {
		localisation_key = GetSiblingInLawKey
		trigger = { sibling_in_law_of_root_trigger = yes }
	}

	text = {
		localisation_key = GetParentInLawKey
		trigger = { relative_in_law_of_root_trigger = yes }
	}

	text = {
		localisation_key = GetKinKey

		trigger = {
			dynasty = ROOT
			is_lowborn = no
		}
	}

	# And then some generic relations
	text = {
		localisation_key = GetLiegeKey
		trigger = { is_liege_of = ROOT }
	}

	text = {
		localisation_key = GetVassalKey

		trigger = {
			vassal_of = ROOT
			is_ruler = yes
		}
	}

	text = {
		localisation_key = GetCourtierKey

		trigger = {
			vassal_of = ROOT
			is_ruler = no
		}
	}

	text = {
		localisation_key = GetRelation_fellow_member

		trigger = {
			same_society_as = ROOT
		}
	}

	text = {
		localisation_key = GetRelation_sway_target

		trigger = {
			ROOT = {
				persistent_event_target:sway_target = {
					character = PREVPREV
				}
			}
		}
	}

	text = {
		localisation_key = GetRelation_antagonist

		trigger = {
			OR = {
				ROOT = {
					persistent_event_target:antagonize_target = {
						character = PREVPREV
					}
				}

				persistent_event_target:antagonize_target = {
					character = ROOT
				}
			}
		}
	}

	fallback_text = {
		localisation_key = String_root_relation_fallback
	}
}

# The relationship THIS has to PREV, not for event localisation, but useful elsewhere, such as tooltips and logging
defined_text = {
	name = GetPrevRelation
	use_first_valid = yes

	# War enemies and concubine/consort have highest priority
	text = {
		localisation_key = GetRelation_enemy
		trigger = { war_with = PREV }
	}

	text = {
		localisation_key = GetConcubineConsortKey
		trigger = { is_consort = PREV }
	}

	# Then spouses
	text = {
		localisation_key = GetSpouseKey
		trigger = { is_married = PREV }
	}

	# Then some close relatives
	text = {
		localisation_key = GetParentKey
		trigger = { is_parent_of = PREV }
	}

	text = {
		localisation_key = GetGrandParentKey
		trigger = { is_grandparent_of = PREV }
	}

	text = {
		localisation_key = GetChildKey
		trigger = { is_child_of = PREV }
	}

	text = {
		localisation_key = GetGrandChildKey
		trigger = { is_grandchild_of = PREV }
	}

	text = {
		localisation_key = GetSiblingKey
		trigger = { sibling = PREV }
	}

	# Followed by Rivals, Friends and Lovers
	text = {
		localisation_key = GetRivalKey
		trigger = { is_rival = PREV }
	}

	text = {
		localisation_key = GetFriendKey
		trigger = { is_friend = PREV }
	}

	text = {
		localisation_key = GetLoverKey
		trigger = { is_lover = PREV }
	}

	# Then the other close relatives and other family ties
	text = {
		localisation_key = GetNiblingKey
		trigger = { is_nibling_of = PREV }
	}

	text = {
		localisation_key = GetAuntUncleKey
		trigger = { is_aunt_uncle_of = PREV }
	}

	text = {
		localisation_key = GetCousinKey
		trigger = { is_cousin_of = PREV }
	}

	text = {
		localisation_key = GetSiblingInLawKey
		trigger = { sibling_in_law_of_prev_trigger = yes }
	}

	text = {
		localisation_key = GetParentInLawKey
		trigger = { relative_in_law_of_prev_trigger = yes }
	}

	text = {
		localisation_key = GetKinKey

		trigger = {
			dynasty = PREV
			is_lowborn = no
		}
	}

	# And then some generic relations
	text = {
		localisation_key = GetLiegeKey
		trigger = { is_liege_of = PREV }
	}

	text = {
		localisation_key = GetVassalKey

		trigger = {
			vassal_of = PREV
			is_ruler = yes
		}
	}

	text = {
		localisation_key = GetCourtierKey

		trigger = {
			vassal_of = PREV
			is_ruler = no
		}
	}

	text = {
		localisation_key = GetRelation_fellow_member
		trigger = { same_society_as = PREV }
	}

	text = {
		localisation_key = GetRelation_sway_target

		trigger = {
			PREV = {
				persistent_event_target:sway_target = {
					character = PREVPREV
				}
			}
		}
	}

	text = {
		localisation_key = GetRelation_antagonist

		trigger = {
			OR = {
				PREV = {
					persistent_event_target:antagonize_target = {
						character = PREVPREV
					}
				}

				persistent_event_target:antagonize_target = {
					character = PREV
				}
			}
		}
	}

	fallback_text = {
		localisation_key = String_root_relation_fallback
	}
}

# The relationship THIS has to event_target_1 [target_courtier.GetEventTarget1Relation]
defined_text = {
	name = GetEventTarget1Relation
	use_first_valid = yes

	# War enemies and concubine/consort have highest priority
	text = {
		localisation_key = GetRelation_enemy
		trigger = { war_with = event_target:event_target_1 }
	}

	text = {
		localisation_key = GetConcubineConsortKey
		trigger = { is_consort = event_target:event_target_1 }
	}

	# Then spouses
	text = {
		localisation_key = GetSpouseEventTarget1Key
		trigger = { is_married = event_target:event_target_1 }
	}

	# Then some close relatives
	text = {
		localisation_key = GetParentKey
		trigger = { is_parent_of = event_target:event_target_1 }
	}

	text = {
		localisation_key = GetGrandParentKey
		trigger = { is_grandparent_of = event_target:event_target_1 }
	}

	text = {
		localisation_key = GetChildKey
		trigger = { is_child_of = event_target:event_target_1 }
	}

	text = {
		localisation_key = GetGrandChildKey
		trigger = { is_grandchild_of = event_target:event_target_1 }
	}

	text = {
		localisation_key = GetSiblingKey
		trigger = { sibling = event_target:event_target_1 }
	}

	# Followed by Rivals, Friends and Lovers
	text = {
		localisation_key = GetRivalKey
		trigger = { is_rival = event_target:event_target_1 }
	}

	text = {
		localisation_key = GetFriendKey
		trigger = { is_friend = event_target:event_target_1 }
	}

	text = {
		localisation_key = GetLoverKey
		trigger = { is_lover = event_target:event_target_1 }
	}

	# Then the other close relatives and other family ties
	text = {
		localisation_key = GetNiblingKey
		trigger = { is_nibling_of = event_target:event_target_1 }
	}

	text = {
		localisation_key = GetAuntUncleKey
		trigger = { is_aunt_uncle_of = event_target:event_target_1 }
	}

	text = {
		localisation_key = GetCousinKey
		trigger = { is_cousin_of = event_target:event_target_1 }
	}

	text = {
		localisation_key = GetSiblingInLawKey
		trigger = { sibling_in_law_of_event_target_1_trigger = yes }
	}

	text = {
		localisation_key = GetParentInLawKey
		trigger = { relative_in_law_of_event_target_1_trigger = yes }
	}

	text = {
		localisation_key = GetKinKey

		trigger = {
			dynasty = event_target:event_target_1
			is_lowborn = no
		}
	}

	# And then some generic relations
	text = {
		localisation_key = GetLiegeKey
		trigger = { is_liege_of = event_target:event_target_1 }
	}

	text = {
		localisation_key = GetVassalKey

		trigger = {
			vassal_of = event_target:event_target_1
			is_ruler = yes
		}
	}

	text = {
		localisation_key = GetCourtierKey

		trigger = {
			vassal_of = event_target:event_target_1
			is_ruler = no
		}
	}

	text = {
		localisation_key = GetRelation_fellow_member
		trigger = { same_society_as = event_target:event_target_1 }
	}

	text = {
		localisation_key = GetRelation_sway_target

		trigger = {
			event_target:event_target_1 = {
				persistent_event_target:sway_target = {
					character = PREVPREV
				}
			}
		}
	}

	text = {
		localisation_key = GetRelation_antagonist

		trigger = {
			OR = {
				event_target:event_target_1 = {
					persistent_event_target:antagonize_target = {
						character = PREVPREV
					}
				}

				persistent_event_target:antagonize_target = {
					character = event_target:event_target_1
				}
			}
		}
	}

	fallback_text = {
		localisation_key = String_root_relation_fallback
	}
}

# The relationship THIS has to event_target_2
defined_text = {
	name = GetEventTarget2Relation
	use_first_valid = yes

	# War enemies and concubine/consort have highest priority
	text = {
		localisation_key = GetRelation_enemy
		trigger = { war_with = event_target:event_target_2 }
	}

	text = {
		localisation_key = GetConcubineConsortKey
		trigger = { is_consort = event_target:event_target_2 }
	}

	# Then spouses
	text = {
		localisation_key = GetSpouseEventTarget2Key
		trigger = { is_married = event_target:event_target_2 }
	}

	# Then some close relatives
	text = {
		localisation_key = GetParentKey
		trigger = { is_parent_of = event_target:event_target_2 }
	}

	text = {
		localisation_key = GetGrandParentKey
		trigger = { is_grandparent_of = event_target:event_target_2 }
	}

	text = {
		localisation_key = GetChildKey
		trigger = { is_child_of = event_target:event_target_2 }
	}

	text = {
		localisation_key = GetGrandChildKey
		trigger = { is_grandchild_of = event_target:event_target_2 }
	}

	text = {
		localisation_key = GetSiblingKey
		trigger = { sibling = event_target:event_target_2 }
	}

	# Followed by Rivals, Friends and Lovers
	text = {
		localisation_key = GetRivalKey
		trigger = { is_rival = event_target:event_target_2 }
	}

	text = {
		localisation_key = GetFriendKey
		trigger = { is_friend = event_target:event_target_2 }
	}

	text = {
		localisation_key = GetLoverKey
		trigger = { is_lover = event_target:event_target_2 }
	}

	# Then the other close relatives and other family ties
	text = {
		localisation_key = GetNiblingKey
		trigger = { is_nibling_of = event_target:event_target_2 }
	}

	text = {
		localisation_key = GetAuntUncleKey
		trigger = { is_aunt_uncle_of = event_target:event_target_2 }
	}

	text = {
		localisation_key = GetCousinKey
		trigger = { is_cousin_of = event_target:event_target_2 }
	}

	text = {
		localisation_key = GetSiblingInLawKey
		trigger = { sibling_in_law_of_event_target_2_trigger = yes }
	}

	text = {
		localisation_key = GetParentInLawKey
		trigger = { relative_in_law_of_event_target_2_trigger = yes }
	}

	text = {
		localisation_key = GetKinKey

		trigger = {
			dynasty = event_target:event_target_2
			is_lowborn = no
		}
	}

	# And then some generic relations
	text = {
		localisation_key = GetLiegeKey
		trigger = { is_liege_of = event_target:event_target_2 }
	}

	text = {
		localisation_key = GetVassalKey

		trigger = {
			vassal_of = event_target:event_target_2
			is_ruler = yes
		}
	}

	text = {
		localisation_key = GetCourtierKey

		trigger = {
			vassal_of = event_target:event_target_2
			is_ruler = no
		}
	}

	text = {
		localisation_key = GetRelation_fellow_member
		trigger = { same_society_as = event_target:event_target_2 }
	}

	text = {
		localisation_key = GetRelation_sway_target

		trigger = {
			event_target:event_target_2 = {
				persistent_event_target:sway_target = {
					character = PREVPREV
				}
			}
		}
	}

	text = {
		localisation_key = GetRelation_antagonist

		trigger = {
			OR = {
				event_target:event_target_2 = {
					persistent_event_target:antagonize_target = {
						character = PREVPREV
					}
				}

				persistent_event_target:antagonize_target = {
					character = event_target:event_target_2
				}
			}
		}
	}

	fallback_text = {
		localisation_key = String_root_relation_fallback
	}
}

# The relationship THIS has to event_target_3
defined_text = {
	name = GetEventTarget3Relation
	use_first_valid = yes

	# War enemies and concubine/consort have highest priority
	text = {
		localisation_key = GetRelation_enemy
		trigger = { war_with = event_target:event_target_3 }
	}

	text = {
		localisation_key = GetConcubineConsortKey
		trigger = { is_consort = event_target:event_target_3 }
	}

	# Then spouses
	text = {
		localisation_key = GetSpouseEventTarget3Key
		trigger = { is_married = event_target:event_target_3 }
	}

	# Then some close relatives
	text = {
		localisation_key = GetParentKey
		trigger = { is_parent_of = event_target:event_target_3 }
	}

	text = {
		localisation_key = GetGrandParentKey
		trigger = { is_grandparent_of = event_target:event_target_3 }
	}

	text = {
		localisation_key = GetChildKey
		trigger = { is_child_of = event_target:event_target_3 }
	}

	text = {
		localisation_key = GetGrandChildKey
		trigger = { is_grandchild_of = event_target:event_target_3 }
	}

	text = {
		localisation_key = GetSiblingKey
		trigger = { sibling = event_target:event_target_3 }
	}

	# Followed by Rivals, Friends and Lovers
	text = {
		localisation_key = GetRivalKey
		trigger = { is_rival = event_target:event_target_3 }
	}

	text = {
		localisation_key = GetFriendKey
		trigger = { is_friend = event_target:event_target_3 }
	}

	text = {
		localisation_key = GetLoverKey
		trigger = { is_lover = event_target:event_target_3 }
	}

	# Then the other close relatives and other family ties
	text = {
		localisation_key = GetNiblingKey
		trigger = { is_nibling_of = event_target:event_target_3 }
	}

	text = {
		localisation_key = GetAuntUncleKey
		trigger = { is_aunt_uncle_of = event_target:event_target_3 }
	}

	text = {
		localisation_key = GetCousinKey
		trigger = { is_cousin_of = event_target:event_target_3 }
	}

	text = {
		localisation_key = GetSiblingInLawKey
		trigger = { sibling_in_law_of_event_target_3_trigger = yes }
	}

	text = {
		localisation_key = GetParentInLawKey
		trigger = { relative_in_law_of_event_target_3_trigger = yes }
	}

	text = {
		localisation_key = GetKinKey

		trigger = {
			dynasty = event_target:event_target_3
			is_lowborn = no
		}
	}

	# And then some generic relations
	text = {
		localisation_key = GetLiegeKey
		trigger = { is_liege_of = event_target:event_target_3 }
	}

	text = {
		localisation_key = GetVassalKey

		trigger = {
			vassal_of = event_target:event_target_3
			is_ruler = yes
		}
	}

	text = {
		localisation_key = GetCourtierKey

		trigger = {
			vassal_of = event_target:event_target_3
			is_ruler = no
		}
	}

	text = {
		localisation_key = GetRelation_fellow_member
		trigger = { same_society_as = event_target:event_target_3 }
	}

	text = {
		localisation_key = GetRelation_sway_target

		trigger = {
			event_target:event_target_3 = {
				persistent_event_target:sway_target = {
					character = PREVPREV
				}
			}
		}
	}

	text = {
		localisation_key = GetRelation_antagonist

		trigger = {
			OR = {
				event_target:event_target_3 = {
					persistent_event_target:antagonize_target = {
						character = PREVPREV
					}
				}

				persistent_event_target:antagonize_target = {
					character = event_target:event_target_3
				}
			}
		}
	}

	fallback_text = {
		localisation_key = String_root_relation_fallback
	}
}

# The relationship THIS has to event_target_4
defined_text = {
	name = GetEventTarget4Relation
	use_first_valid = yes

	# War enemies and concubine/consort have highest priority
	text = {
		localisation_key = GetRelation_enemy
		trigger = { war_with = event_target:event_target_4 }
	}

	text = {
		localisation_key = GetConcubineConsortKey
		trigger = { is_consort = event_target:event_target_4 }
	}

	# Then spouses
	text = {
		localisation_key = GetSpouseEventTarget4Key
		trigger = { is_married = event_target:event_target_4 }
	}

	# Then some close relatives
	text = {
		localisation_key = GetParentKey
		trigger = { is_parent_of = event_target:event_target_4 }
	}

	text = {
		localisation_key = GetGrandParentKey
		trigger = { is_grandparent_of = event_target:event_target_4 }
	}

	text = {
		localisation_key = GetChildKey
		trigger = { is_child_of = event_target:event_target_4 }
	}

	text = {
		localisation_key = GetGrandChildKey
		trigger = { is_grandchild_of = event_target:event_target_4 }
	}

	text = {
		localisation_key = GetSiblingKey
		trigger = { sibling = event_target:event_target_4 }
	}

	# Followed by Rivals, Friends and Lovers
	text = {
		localisation_key = GetRivalKey
		trigger = { is_rival = event_target:event_target_4 }
	}

	text = {
		localisation_key = GetFriendKey
		trigger = { is_friend = event_target:event_target_4 }
	}

	text = {
		localisation_key = GetLoverKey
		trigger = { is_lover = event_target:event_target_4 }
	}

	# Then the other close relatives and other family ties
	text = {
		localisation_key = GetNiblingKey
		trigger = { is_nibling_of = event_target:event_target_4 }
	}

	text = {
		localisation_key = GetAuntUncleKey
		trigger = { is_aunt_uncle_of = event_target:event_target_4 }
	}

	text = {
		localisation_key = GetCousinKey
		trigger = { is_cousin_of = event_target:event_target_4 }
	}

	text = {
		localisation_key = GetSiblingInLawKey
		trigger = { sibling_in_law_of_event_target_4_trigger = yes }
	}

	text = {
		localisation_key = GetParentInLawKey
		trigger = { relative_in_law_of_event_target_4_trigger = yes }
	}

	text = {
		localisation_key = GetKinKey

		trigger = {
			dynasty = event_target:event_target_4
			is_lowborn = no
		}
	}

	# And then some generic relations
	text = {
		localisation_key = GetLiegeKey
		trigger = { is_liege_of = event_target:event_target_4 }
	}

	text = {
		localisation_key = GetVassalKey

		trigger = {
			vassal_of = event_target:event_target_4
			is_ruler = yes
		}
	}

	text = {
		localisation_key = GetCourtierKey

		trigger = {
			vassal_of = event_target:event_target_4
			is_ruler = no
		}
	}

	text = {
		localisation_key = GetRelation_fellow_member
		trigger = { same_society_as = event_target:event_target_4 }
	}

	text = {
		localisation_key = GetRelation_sway_target

		trigger = {
			event_target:event_target_4 = {
				persistent_event_target:sway_target = {
					character = PREVPREV
				}
			}
		}
	}

	text = {
		localisation_key = GetRelation_antagonist

		trigger = {
			OR = {
				event_target:event_target_4 = {
					persistent_event_target:antagonize_target = {
						character = PREVPREV
					}
				}

				persistent_event_target:antagonize_target = {
					character = event_target:event_target_4
				}
			}
		}
	}

	fallback_text = {
		localisation_key = String_root_relation_fallback
	}
}

defined_text = {
	name = GetConcubineConsort
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_Concubine
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_Consort
	}
}

defined_text = {
	name = GetSpouseRoot
	use_first_valid = yes

	text = {
		localisation_key = GetSpouse_ParentKey
		trigger = { is_parent_of = ROOT }
	}
	text = {
		localisation_key = GetSpouse_SiblingKey
		trigger = { sibling = ROOT }
	}
	text = {
		localisation_key = GetSpouse_ChildKey
		trigger = { is_child_of = ROOT }
	}
	text = {
		localisation_key = GetSpouseKey
	}
}

defined_text = {
	name = GetSpouseEventTarget1
	use_first_valid = yes

	text = {
		localisation_key = GetSpouse_ParentKey
		trigger = { is_parent_of = event_target:event_target_1 }
	}
	text = {
		localisation_key = GetSpouse_SiblingKey
		trigger = { sibling = event_target:event_target_1 }
	}
	text = {
		localisation_key = GetSpouse_ChildKey
		trigger = { is_child_of = event_target:event_target_1 }
	}
	text = {
		localisation_key = GetSpouseKey
	}
}

defined_text = {
	name = GetSpouseEventTarget2
	use_first_valid = yes

	text = {
		localisation_key = GetSpouse_ParentKey
		trigger = { is_parent_of = event_target:event_target_2 }
	}
	text = {
		localisation_key = GetSpouse_SiblingKey
		trigger = { sibling = event_target:event_target_2 }
	}
	text = {
		localisation_key = GetSpouse_ChildKey
		trigger = { is_child_of = event_target:event_target_2 }
	}
	text = {
		localisation_key = GetSpouseKey
	}
}

defined_text = {
	name = GetSpouseEventTarget3
	use_first_valid = yes

	text = {
		localisation_key = GetSpouse_ParentKey
		trigger = { is_parent_of = event_target:event_target_3 }
	}
	text = {
		localisation_key = GetSpouse_SiblingKey
		trigger = { sibling = event_target:event_target_3 }
	}
	text = {
		localisation_key = GetSpouse_ChildKey
		trigger = { is_child_of = event_target:event_target_3 }
	}
	text = {
		localisation_key = GetSpouseKey
	}
}

defined_text = {
	name = GetSpouseEventTarget4
	use_first_valid = yes

	text = {
		localisation_key = GetSpouse_ParentKey
		trigger = { is_parent_of = event_target:event_target_4 }
	}
	text = {
		localisation_key = GetSpouse_SiblingKey
		trigger = { sibling = event_target:event_target_4 }
	}
	text = {
		localisation_key = GetSpouse_ChildKey
		trigger = { is_child_of = event_target:event_target_4 }
	}
	text = {
		localisation_key = GetSpouseKey
	}
}

defined_text = {
	name = GetSpouseParent
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_MotherWife
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_FatherHusband
	}
}

defined_text = {
	name = GetSpouseSibling
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_SisterWife
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_BrotherHusband
	}
}

defined_text = {
	name = GetSpouseChild
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_DaughterWife
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_SonHusband
	}
}

defined_text = {
	name = GetSpouse
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_Wife
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_Husband
	}
}

defined_text = {
	name = GetParent
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_Mother
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_Father
	}
}

defined_text = {
	name = GetGrandParent
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_Grandmother
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_Grandfather
	}
}

defined_text = {
	name = GetChild
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_Daughter
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_Son
	}
}

defined_text = {
	name = GetGrandChild
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_Granddaughter
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_Grandson
	}
}

defined_text = {
	name = GetSibling
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_Sister
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_Brother
	}
}

defined_text = {
	name = GetAuntUncle
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_Aunt
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_Uncle
	}
}

defined_text = {
	name = GetNibling
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_Niece
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_Nephew
	}
}

defined_text = {
	name = GetCousin
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_Cousin_Female
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_Cousin_Male
	}
}

defined_text = {
	name = GetSiblingInLaw
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_SisterInLaw
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_BrotherInLaw
	}
}

defined_text = {
	name = GetParentInLaw
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_MotherInLaw
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_FatherInLaw
	}
}

defined_text = {
	name = GetKin
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_Kinswoman
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_Kinsman
	}
}

defined_text = {
	name = GetLiege
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_Liege_Female
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_Liege_Male
	}
}

defined_text = {
	name = GetVassal
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_Vassal_Female
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_Vassal_Male
	}
}

defined_text = {
	name = GetCourtier
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_Courtier_Female
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_Courtier_Male
	}
}

defined_text = {
	name = GetRival
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_Rival_Female
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_Rival_Male
	}
}

defined_text = {
	name = GetFriend
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_Friend_Female
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_Friend_Male
	}
}

defined_text = {
	name = GetLover
	use_first_valid = yes

	text = {
		localisation_key = GetRelation_Lover_Female
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = GetRelation_Lover_Male
	}
}

### Sister or Brother (not necessarily related)
defined_text = {
	name = GetSisterBrother
	use_first_valid = yes

	text = {
		localisation_key = String_sister
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = String_brother
	}
}

defined_text = {
	name = GetSisterBrotherCap
	use_first_valid = yes

	text = {
		localisation_key = String_Sister
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = String_Brother
	}
}

defined_text = {
	name = GetDaughterSon
	use_first_valid = yes

	text = {
		localisation_key = String_daughter
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = String_son
	}
}

### Seductress or Seducer
defined_text = {
	name = GetSeductressSeducer
	use_first_valid = yes

	text = {
		localisation_key = String_seductress
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = String_seducer
	}
}

### Seductress or Seducer
defined_text = {
	name = GetSeductressSeducerCap
	use_first_valid = yes

	text = {
		localisation_key = String_Seductress
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = String_Seducer
	}
}

### Madwoman or Madman
defined_text = {
	name = GetMadwomanMadman
	use_first_valid = yes

	text = {
		localisation_key = String_madwoman
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = String_madman
	}
}

### Madwoman or Madman CAP
defined_text = {
	name = GetMadwomanMadmanCap
	use_first_valid = yes

	text = {
		localisation_key = String_Madwoman
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = String_Madman
	}
}

defined_text = {
	name = GetManWomanPreference
	use_first_valid = yes

	text = {
		localisation_key = String_man
		trigger = { prefers_men_trigger = yes }
	}
	text = {
		localisation_key = String_woman
	}
}

defined_text = {
	name = GetMenWomenPreference
	use_first_valid = yes

	text = {
		localisation_key = String_men
		trigger = { prefers_men_trigger = yes }
	}
	text = {
		localisation_key = String_women
	}
}


###EDUCATION###
defined_text = {
	name = GetEducationSubject
	use_first_valid = yes

	text = {
		localisation_key = GetEducationSubject_Warfare
		trigger = { has_education_martial_trigger = yes }
	}
	text = {
		localisation_key = GetEducationSubject_Diplomacy
		trigger = { has_education_diplomacy_trigger = yes }
	}
	text = {
		localisation_key = GetEducationSubject_Stewardship
		trigger = { has_education_stewardship_trigger = yes }
	}
	text = {
		localisation_key = GetEducationSubject_Intrigue
		trigger = { has_education_intrigue_trigger = yes }
	}
	text = {
		localisation_key = GetEducationSubject_Theology
		trigger = { has_education_learning_trigger = yes }
	}
}

defined_text = {
	name = GetEducationRole
	use_first_valid = yes

	text = {
		localisation_key = GetEducationRole_Strategist
		trigger = { has_education_martial_trigger = yes }
	}
	text = {
		localisation_key = GetEducationRole_Diplomat
		trigger = { has_education_diplomacy_trigger = yes }
	}
	text = {
		localisation_key = GetEducationRole_Steward
		trigger = { has_education_stewardship_trigger = yes }
	}
	text = {
		localisation_key = GetEducationRole_Schemer
		trigger = { has_education_intrigue_trigger = yes }
	}
	text = {
		localisation_key = GetEducationRole_Theologian
		trigger = { has_education_learning_trigger = yes }
	}
}

defined_text = {
	name = GetEducationTool
	use_first_valid = yes

	text = {
		localisation_key = String_war_table
		trigger = { has_education_martial_trigger = yes }
	}
	text = {
		localisation_key = String_correspondence
		trigger = { has_education_diplomacy_trigger = yes }
	}
	text = {
		localisation_key = String_ledgers
		trigger = { has_education_stewardship_trigger = yes }
	}
	text = {
		localisation_key = String_maps
		trigger = { has_education_intrigue_trigger = yes }
	}
	text = {
		localisation_key = String_scrolls
		trigger = { has_education_learning_trigger = yes }
	}
}

defined_text = {
	name = GetEducationActivity
	use_first_valid = yes

	text = {
		localisation_key = String_leaning_over_war_table
		trigger = { has_education_martial_trigger = yes }
	}
	text = {
		localisation_key = String_sifting_through_correspondence
		trigger = { has_education_diplomacy_trigger = yes }
	}
	text = {
		localisation_key = String_poring_over_ledgers
		trigger = { has_education_stewardship_trigger = yes }
	}
	text = {
		localisation_key = String_contemplating_maps
		trigger = { has_education_intrigue_trigger = yes }
	}
	text = {
		localisation_key = String_organizing_scrolls
		trigger = { has_education_learning_trigger = yes }
	}
}


defined_text = {
	name = GetEducationalTopicPlural

	text = {
		localisation_key = String_strategies
		trigger = { has_education_martial_trigger = yes }
	}
	text = {
		localisation_key = String_troop_compositions
		trigger = { has_education_martial_trigger = yes }
	}
	text = {
		localisation_key = String_diplomats
		trigger = { has_education_diplomacy_trigger = yes }
	}
	text = {
		localisation_key = String_alliances
		trigger = { has_education_diplomacy_trigger = yes }
	}
	text = {
		localisation_key = String_phrasings
		trigger = { has_education_diplomacy_trigger = yes }
	}
	text = {
		localisation_key = String_trade_routes
		trigger = { has_education_stewardship_trigger = yes }
	}
	text = {
		localisation_key = String_investment_opportunities
		trigger = { has_education_stewardship_trigger = yes }
	}
	text = {
		localisation_key = String_building_plans
		trigger = { has_education_stewardship_trigger = yes }
	}
	text = {
		localisation_key = String_tax_levels
		trigger = { has_education_stewardship_trigger = yes }
	}
	text = {
		localisation_key = String_poisons
		trigger = { has_education_intrigue_trigger = yes }
	}
	text = {
		localisation_key = String_spies
		trigger = { has_education_intrigue_trigger = yes }
	}
	text = {
		localisation_key = String_travel_routes
		trigger = { has_education_intrigue_trigger = yes }
	}
	text = {
		localisation_key = String_potential_accomplices
		trigger = { has_education_intrigue_trigger = yes }
	}
	text = {
		localisation_key = String_GetPriestName_plural
		trigger = { has_education_learning_trigger = yes }
	}
	text = {
		localisation_key = String_translations
		trigger = { has_education_learning_trigger = yes }
	}
	text = {
		localisation_key = String_doctrines
		trigger = { has_education_learning_trigger = yes }
	}
	text = {
		localisation_key = String_passages_from_GetScriptureName
		trigger = { has_education_learning_trigger = yes }
	}
}

###CHARACTER JOBS###
defined_text = {
	name = GetActressActor
	use_first_valid = yes

	text = {
		trigger = { is_female = no }
		localisation_key = ACTOR
	}
	text = {
		localisation_key = ACTRESS
	}
}

defined_text = {
	name = GetAscetic
	use_first_valid = yes

	text = {
		trigger = { trait = monk }
		localisation_key = String_monk
	}
	text = {
		trigger = { trait = nun }
		localisation_key = String_nun
	}
	text = {
		trigger = { trait = muni }
		localisation_key = String_muni
	}
	text = {
		trigger = { trait = aryika }
		localisation_key = String_aryika
	}
	text = {
		trigger = { trait = bhikkhu }
		localisation_key = String_bhikkhu
	}
	text = {
		trigger = { trait = bhikkhuni }
		localisation_key = String_bhikkhuni
	}
	text = {
		trigger = { trait = sanyasi }
		localisation_key = String_sanyasi
	}
	text = {
		trigger = { trait = sanyasini }
		localisation_key = String_sanyasini
	}
	fallback_text = {
		localisation_key = String_ascetic
	}
}

defined_text = {
	name = GetQueenKing
	use_first_valid = yes

	text = {
		trigger = { is_female = yes }
		localisation_key = String_Queen
	}
	text = {
		localisation_key = String_King
	}
}

defined_text = {
	name = GetPrincessPrince
	use_first_valid = yes

	text = {
		trigger = { is_female = yes }
		localisation_key = String_Princess
	}
	text = {
		localisation_key = String_Prince
	}
}

defined_text = {
	name = GetBrideGroom
	use_first_valid = yes

	text = {
		trigger = { is_female = yes }
		localisation_key = String_bride
	}
	text = {
		localisation_key = String_groom
	}
}

defined_text = {
	name = GetMasterMistressCap
	use_first_valid = yes

	text = {
		trigger = { is_female = yes }
		localisation_key = String_Mistress
	}
	text = {
		localisation_key = String_Master
	}
}

defined_text = {
	name = GetEmpressEmperor
	use_first_valid = yes

	text = {
		localisation_key = String_empress
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = String_emperor
	}
}

defined_text = {
	name = GetEmpressEmperorCap
	use_first_valid = yes

	text = {
		localisation_key = String_Empress
		trigger = { is_female = yes }
	}
	text = {
		localisation_key = String_Emperor
	}
}

### CHARACTER DESCRIPTIONS ###
defined_text = {
	name = GetVice

	text = {
		trigger = { trait = lustful  }
		localisation_key = String_Vice_lustful
	}
	text = {
		trigger = { trait = gluttonous }
		localisation_key = String_Vice_gluttonous
	}
	text = {
		trigger = { trait = greedy }
		localisation_key = String_Vice_greedy
	}
	text = {
		trigger = { trait = slothful }
		localisation_key = String_Vice_slothful
	}
	text = {
		trigger = { trait = wroth }
		localisation_key = String_Vice_wroth
	}
	text = {
		trigger = { trait = envious }
		localisation_key = String_Vice_envious
	}
	text = {
		trigger = { trait = proud }
		localisation_key = String_Vice_proud
	}
}

defined_text = {
	name = GetFaceDescription

	text = {
		trigger = {
			trait = attractive
			is_female = yes
			NOT = { trait = horse }
		}
		localisation_key = String_beautiful
	}
	text = {
		trigger = {
			trait = attractive
			is_female = no
			NOT = { trait = horse }
		}
		localisation_key = String_handsome
	}
	text = {
		trigger = { trait = ugly }
		localisation_key = String_hideous
	}
	text = {
		trigger = { trait = scarred }
		localisation_key = String_scarred
	}
	text = {
		trigger = { is_ill = yes }
		localisation_key = String_sickly
	}
	text = {
		trigger = {
			OR = {
				trait = disfigured
				trait = blinded
				trait = one_eyed
				trait = leper
			}
		}
		localisation_key = String_disfigured
	}
	text = {
		trigger = { trait = harelip }
		localisation_key = String_harelipped
	}
	text = {
		trigger = {
			is_strong_trigger = yes
			NOT = { trait = horse }
		}
		localisation_key = String_strong_jawed
	}
	text = {
		trigger = { is_weak_trigger = yes }
		localisation_key = String_thin
	}
	text = {
		trigger = {
			OR = {
				trait = lunatic
				trait = possessed
				trait = rabies
			}
		}
		localisation_key = String_crazed
	}
	text = {
		trigger = {
			interesting_face_trigger = no
			graphical_culture = norsegfx
		}
		localisation_key = String_ruddy
	}
	text = {
		trigger = {
			interesting_face_trigger = no
			OR = {
				graphical_culture = occitangfx
				graphical_culture = italiangfx
				graphical_culture = southerngfx
				graphical_culture = byzantinegfx
				graphical_culture = byzantinegfx
				graphical_culture = easternslavicgfx
				graphical_culture = byzantinegfx
				graphical_culture = turkishgfx
				graphical_culture = cumangfx
				graphical_culture = mongolgfx
				graphical_culture = persiangfx
			}
		}
		localisation_key = String_tanned
	}
	text = {
		trigger = {
			interesting_face_trigger = no
			OR = {
				graphical_culture = arabicgfx
				graphical_culture = andalusiangfx
				graphical_culture = muslimgfx
				graphical_culture = mesoamericangfx
			}
		}
		localisation_key = String_bronzed
	}
	text = {
		trigger = {
			interesting_face_trigger = no
			OR = {
				graphical_culture = africangfx
				graphical_culture = westafricangfx
			}
		}
		localisation_key = String_dark_skinned
	}
	text = {
		trigger = {
			interesting_face_trigger = no
			OR = {
				graphical_culture = indiangfx
				graphical_culture = southindiangfx
			}
		}
		localisation_key = String_copper_skinned
	}
	text = {
		trigger = { trait = horse }
		localisation_key = String_long
	}
	text = {
		weight_multiplier = { factor = 100 }
		trigger = {
			NOR = {
				interesting_face_trigger = yes
				graphical_culture = occitangfx
				graphical_culture = italiangfx
				graphical_culture = southerngfx
				graphical_culture = byzantinegfx
				graphical_culture = byzantinegfx
				graphical_culture = easternslavicgfx
				graphical_culture = byzantinegfx
				graphical_culture = turkishgfx
				graphical_culture = cumangfx
				graphical_culture = mongolgfx
				graphical_culture = persiangfx
				graphical_culture = arabicgfx
				graphical_culture = andalusiangfx
				graphical_culture = muslimgfx
				graphical_culture = mesoamericangfx
				graphical_culture = africangfx
				graphical_culture = westafricangfx
				graphical_culture = indiangfx
				graphical_culture = southindiangfx
			}
		}
		localisation_key = String_pale
	}
	fallback_text = {
		localisation_key = String_face_description_fallback
	}
}

# Compliments are used after the complimentee's scope: [some_scope.GetEventTarget1Compliment(Noun/Adjective]
# Use EventTargetXCompliment if the complimenter may be a child or an adult, otherwise, directly use the Adult/Child versions
# Insults always require the insulter event target, for trait checks
# GetComplimentNoun - compliments with only a noun
# GetInsult - insults with a noun and an adjective, switches order for French and Spanish
defined_text = {
	name = GetAdultCompliment

	text = {
		localisation_key = GetAdultComplimentKey
	}
}

defined_text = {
	name = GetChildCompliment

	text = {
		localisation_key = GetChildComplimentKey
	}
}

defined_text = {
	name = GetEventTarget1Compliment
	use_first_valid = yes

	text = {
		trigger = {
			event_target:event_target_1_complimenter = {
				is_adult = yes
			}
		}
		localisation_key = GetAdultComplimentKey
	}
	text = {
		localisation_key = GetChildComplimentKey
	}
}

defined_text = {
	name = GetEventTarget1ComplimentNoun
	use_first_valid = yes

	text = {
		trigger = {
			event_target:event_target_1_complimenter = {
				is_adult = yes
			}
		}
		localisation_key = GetAdultComplimentNounKey
	}
	text = {
		localisation_key = GetChildComplimentNounKey
	}
}

defined_text = {
	name = GetEventTarget1ComplimentAdjective
	use_first_valid = yes

	text = {
		trigger = {
			event_target:event_target_1_complimenter = {
				is_adult = yes
			}
		}
		localisation_key = GetAdultComplimentAdjectiveKey
	}
	text = {
		localisation_key = GetChildComplimentAdjectiveKey
	}
}

defined_text = {
	name = GetEventTarget1Insult
	use_first_valid = yes

	text = {
		trigger = {
			event_target:event_target_1_insulter = {
				is_adult = yes
			}
		}
		localisation_key = GetAdultInsultKey
	}
	text = {
		localisation_key = GetChildInsultKey
	}
}

defined_text = {
	name = GetEventTarget1InsultNoun
	use_first_valid = yes

	text = {
		trigger = {
			event_target:event_target_1_insulter = {
				is_adult = yes
			}
		}
		localisation_key = GetAdultInsultNounKey
	}
	text = {
		localisation_key = GetChildInsultNounKey
	}
}

defined_text = {
	name = GetEventTarget1InsultAdjective
	use_first_valid = yes

	text = {
		trigger = {
			event_target:event_target_1_insulter = {
				is_adult = yes
			}
		}
		localisation_key = GetAdultInsultAdjectiveKey
	}
	text = {
		localisation_key = GetChildInsultAdjectiveKey
	}
}

defined_text = {
	name = GetAdultComplimentAdjective

	text = {
		trigger = {
			trait = adventurer
		}
		localisation_key = COMPL_AUDACIOUS
	}
	text = {
		trigger = {
			trait = fat
		}
		localisation_key = COMPL_MAGNIFICENT
	}
	text = {
		trigger = {
			trait = malnourished
		}
		localisation_key = COMPL_FRUGAL
	}
	text = {
		trigger = {
			trait = affectionate
		}
		localisation_key = COMPL_SWEET
	}
	text = {
		trigger = {
			OR = {
				trait = intricate_webweaver
				trait = elusive_shadow
				trait = brooding
			}
		}
		localisation_key = COMPL_CLEVER
	}
	text = {
		trigger = {
			OR = {
				trait = charismatic_negotiator
				trait = grey_eminence
			}
		}
		localisation_key = COMPL_ELOQUENT
	}
	text = {
		trigger = {
			OR = {
				trait = fortune_builder
				trait = midas_touched
			}
		}
		localisation_key = COMPL_THRIFTY
	}
	text = {
		trigger = {
			OR = {
				trait = proud
				trait = haughty
			}
		}
		localisation_key = COMPL_PROUD
	}
	text = {
		trigger = {
			trait = playful
		}
		localisation_key = COMPL_LOVELY
	}
	text = {
		trigger = {
			OR = {
				trait = charitable
				trait = timid
			}
		}
		localisation_key = COMPL_GOOD
	}
	text = {
		trigger = {
			OR = {
				trait = viking
				trait = ravager
				trait = sea_king
				trait = sea_queen
				trait = shieldmaiden
			}
		}
		localisation_key = COMPL_VIKING_adj
	}
	text = {
		trigger = {
			OR = {
				trait = strong
				trait = brawny
				trait = giant
			}

			is_female = no
		}
		localisation_key = COMPL_STRONG
	}
	text = {
		trigger = {
			OR = {
				trait = zealous

				# Crusader traits
				trait = crusader
				trait = crusader_king
				trait = crusader_queen
				trait = mujahid
				trait = ares_own
				trait = eagle_knight
				trait = gondi_shahansha
				trait = kailash_guardian
				trait = nyames_shield
				trait = peruns_chosen
				trait = hound_of_dievas
				trait = kanai
				trait = sun_warrior
				trait = skylord
				trait = ukkos_hammer
				trait = valhalla_bound

				# Other traits
				trait = bloodthirsty_gods_1
				trait = bloodthirsty_gods_2
				trait = bloodthirsty_gods_3
			}
		}
		localisation_key = COMPL_RIGHTEOUS
	}
	text = {
		trigger = {
			trait = celibate
		}
		localisation_key = COMPL_VIRTUOUS
	}
	text = {
		trigger = {
			OR = {
				trait = scholarly_theologian
				trait = mastermind_theologian
				trait = scholar
				trait = mystic
				trait = theologian
				trait = physician
			}
		}
		localisation_key = COMPL_LEARNED
	}
	text = {
		trigger = {
			trait = master_seducer
			is_female = no
		}
		localisation_key = COMPL_CHARMING
	}
	text = {
		trigger = {
			trait = master_seductress
			is_female = yes
		}
		localisation_key = COMPL_RAVISHING
	}
	text = {
		trigger = {
			OR = {
				trait = groomed
				trait = attractive
			}

			is_female = no
		}
		localisation_key = COMPL_HANDSOME
	}
	text = {
		trigger = {
			OR = {
				trait = groomed
				trait = attractive
			}

			is_female = no
		}
		localisation_key = COMPL_FAIR
	}
	text = {
		trigger = {
			trait = genius
		}
		localisation_key = COMPL_BRILLIANT
	}
	text = {
		trigger = {
			trait = lustful
		}
		localisation_key = COMPL_VIVACIOUS
	}
	text = {
		trigger = {
			trait = chaste
		}
		localisation_key = COMPL_CHASTE
	}
	text = {
		trigger = {
			trait = diligent
		}
		localisation_key = COMPL_DILIGENT
	}
	text = {
		trigger = {
			trait = humble
		}
		localisation_key = COMPL_HUMBLE
	}
	text = {
		trigger = {
			trait = kind
			is_female = no
		}
		localisation_key = COMPL_KINDLY
	}
	text = {
		trigger = {
			trait = kind
			is_female = yes
		}
		localisation_key = COMPL_KINDHEARTED
	}
	text = {
		trigger = {
			trait = temperate
			is_female = no
		}
		localisation_key = COMPL_LEVELHEADED
	}
	text = {
		trigger = {
			trait = temperate
			is_female = yes
		}
		localisation_key = COMPL_PLEASANT
	}
	text = {
		trigger = {
			trait = arbitrary
			is_female = no
		}
		localisation_key = COMPL_RAFFISH
	}
	text = {
		trigger = {
			trait = arbitrary
			is_female = yes
		}
		localisation_key = COMPL_IMPISH
	}
	text = {
		trigger = {
			trait = brave
		}
		localisation_key = COMPL_BRAVE
	}
	text = {
		trigger = {
			trait = cynical
		}
		localisation_key = COMPL_WRY
	}
	text = {
		trigger = {
			OR = {
				trait = erudite
				trait = faqih
			}
		}
		localisation_key = COMPL_WISE
	}
	text = {
		trigger = {
			trait = gregarious
			is_female = no
		}
		localisation_key = COMPL_AFFABLE
	}
	text = {
		trigger = {
			trait = gregarious
			is_female = yes
		}
		localisation_key = COMPL_FETCHING
	}
	text = {
		trigger = {
			trait = honest
			is_female = no
		}
		localisation_key = COMPL_SINCERE
	}
	text = {
		trigger = {
			trait = honest
			is_female = yes
		}
		localisation_key = COMPL_FORTHRIGHT
	}
	text = {
		trigger = {
			trait = just
		}
		localisation_key = COMPL_JUST
	}
	text = {
		trigger = {
			trait = shy
			is_female = yes
		}
		localisation_key = COMPL_DEMURE
	}
	text = {
		trigger = {
			trait = born_in_the_purple
		}
		localisation_key = COMPL_PURPLE_BORN
	}
}

defined_text = {
	name = GetAdultComplimentNoun

	text = {
		trigger = {
			trait = augustus
		}
		localisation_key = COMPL_AUGUSTUS
	}
	text = {
		trigger = {
			trait = adventurer
		}
		localisation_key = COMPL_CONQUEROR
	}
	text = {
		trigger = {
			trait = faqih
		}
		localisation_key = COMPL_FAQIH
	}
	text = {
		trigger = {
			trait = hafiz
		}
		localisation_key = COMPL_HAFIZ
	}
	text = {
		trigger = {
			OR = {
				trait = monk
				trait = muni
				trait = sanyasi
			}
		}
		localisation_key = COMPL_MONK
	}
	text = {
		trigger = {
			OR = {
				trait = nun
				trait = sanyasini
			}
		}
		localisation_key = COMPL_NUN
	}
	text = {
		trigger = {
			trait = saoshyant
		}
		localisation_key = COMPL_SAOSHYANT
	}
	text = {
		trigger = {
			OR = {
				trait = scholar
				trait = erudite
				trait = theologian
			}
		}
		localisation_key = COMPL_SCHOLAR
	}
	text = {
		trigger = {
			trait = poet
		}
		localisation_key = COMPL_POET
	}
	text = {
		trigger = {
			trait = hajjaj
		}
		localisation_key = COMPL_HAJJAJ
	}
	text = {
		trigger = {
			OR = {
				trait = pilgrim
				trait = indian_pilgrim
			}
		}
		localisation_key = COMPL_PILGRIM
	}
	text = {
		trigger = {
			trait = arbitrary
			is_female = no
		}
		localisation_key = COMPL_ROGUE
	}
	text = {
		trigger = {
			trait = arbitrary
			is_female = yes
		}
		localisation_key = COMPL_DEVIL
	}
	text = {
		trigger = {
			trait = gregarious
		}
		localisation_key = COMPL_WIT
	}
	text = {
		trigger = {
			OR = {
				trait = groomed
				trait = attractive
			}

			is_female = no
		}
		localisation_key = COMPL_CHARMER
	}
	text = {
		trigger = {
			OR = {
				trait = groomed
				trait = attractive
			}

			is_female = yes
		}
		localisation_key = COMPL_BEAUTY
	}
	text = {
		trigger = {
			trait = architect
		}
		localisation_key = COMPL_ARCHITECT
	}
	text = {
		trigger = {
			trait = duelist
			is_female = no
		}
		localisation_key = COMPL_BLADEMASTER
	}
	text = {
		trigger = {
			trait = duelist
			is_female = yes
		}
		localisation_key = COMPL_CHAMPION
	}
	text = {
		trigger = {
			trait = hunter
			is_female = no
		}
		localisation_key = COMPL_HUNTMASTER
	}
	text = {
		trigger = {
			trait = mystic
		}
		localisation_key = COMPL_MYSTIC
	}
	text = {
		trigger = {
			trait = master_seducer
			is_female = no
		}
		localisation_key = COMPL_SEDUCER
	}
	text = {
		trigger = {
			trait = master_seductress
			is_female = yes
		}
		localisation_key = COMPL_ENCHANTRESS
	}
	text = {
		trigger = {
			trait = holy_warrior
		}
		localisation_key = COMPL_HOLY_WARRIOR
	}
	text = {
		trigger = {
			trait = genius
		}
		localisation_key = COMPL_GENIUS
	}
	text = {
		trigger = {
			trait = sayyid
			is_female = no
		}
		localisation_key = COMPL_SAYYID
	}
	text = {
		trigger = {
			trait = sayyid
			is_female = yes
		}
		localisation_key = COMPL_SAYYIDA
	}
	text = {
		trigger = {
			trait = mirza
		}
		localisation_key = COMPL_MIRZA
	}
	text = {
		trigger = {
			trait = mujahid
		}
		localisation_key = COMPL_MUJAHID
	}
	text = {
		trigger = {
			OR = {
				trait = crusader
				trait = crusader_king
				trait = crusader_queen
			}
		}
		localisation_key = COMPL_CRUSADER
	}
	text = {
		trigger = {
			trait = kailash_guardian
		}
		localisation_key = COMPL_KAILASH_GUARDIAN
	}
	text = {
		trigger = {
			trait = valhalla_bound
			is_female = no
		}
		localisation_key = COMPL_VALHALLA_BOUND_MALE
	}
	text = {
		trigger = {
			trait = valhalla_bound
			is_female = yes
		}
		localisation_key = COMPL_VALHALLA_BOUND_FEMALE
	}
	text = {
		trigger = {
			trait = berserker
		}
		localisation_key = COMPL_BERSERKER
	}
	text = {
		trigger = {
			OR = {
				trait = viking
				trait = ravager
				trait = sea_king
				trait = sea_queen
			}

			is_female = no
		}
		localisation_key = COMPL_VIKING
	}
	text = {
		trigger = {
			OR = {
				trait = viking
				trait = ravager
				trait = sea_king
				trait = sea_queen
				trait = shieldmaiden
			}
			is_female = yes
		}
		localisation_key = COMPL_VALKYRIE
	}
}

defined_text = {
	name = GetAdultInsultAdjective

	text = {
		trigger = {
			OR = {
				trait = amateurish_plotter
				trait = flamboyant_schemer
				trait = intricate_webweaver
				trait = elusive_shadow
				trait = master_schemer
				trait = socializer
			}
			event_target:event_target_1_insulter = {
				NOR = {
					trait = amateurish_plotter
					trait = flamboyant_schemer
					trait = intricate_webweaver
					trait = elusive_shadow
					trait = master_schemer
					trait = socializer
				}
			}
		}
		localisation_key = INSULT_SCHEMING
	}
	text = {
		trigger = {
			OR = {
				trait = naive_appeaser
				trait = underhanded_rogue
				trait = charismatic_negotiator
				trait = grey_eminence
			}
			event_target:event_target_1_insulter = {
				NOR = {
					trait = naive_appeaser
					trait = underhanded_rogue
					trait = charismatic_negotiator
					trait = grey_eminence
				}
			}
		}
		localisation_key = INSULT_TWOFACED
	}
	text = {
		trigger = {
			OR = {
				trait = indulgent_wastrel
				trait = thrifty_clerk
				trait = charismatic_negotiator
				trait = grey_eminence
			}
			event_target:event_target_1_insulter = {
				NOR = {
					trait = indulgent_wastrel
					trait = thrifty_clerk
					trait = charismatic_negotiator
					trait = grey_eminence
				}
			}
		}
		localisation_key = INSULT_MISERLY
	}
	text = {
		trigger = {
			OR = {
				trait = detached_priest
				trait = dutiful_cleric
				trait = scholarly_theologian
				trait = mastermind_theologian
			}
			event_target:event_target_1_insulter = {
				NOR = {
					trait = detached_priest
					trait = dutiful_cleric
					trait = scholarly_theologian
					trait = mastermind_theologian
				}
			}
		}
		localisation_key = INSULT_DRIVELING
	}
	text = {
		trigger = {
			OR = {
				trait = amateurish_plotter
				trait = naive_appeaser
				trait = indulgent_wastrel
				trait = detached_priest
			}
			event_target:event_target_1_insulter = {
				NOR = {
					trait = amateurish_plotter
					trait = naive_appeaser
					trait = indulgent_wastrel
					trait = detached_priest
				}
			}
		}
		localisation_key = INSULT_STUPID
	}
	text = {
		trigger = {
			trait = depressed

			event_target:event_target_1_insulter = {
				NOT = { trait = depressed }
			}
		}
		localisation_key = INSULT_LUGUBRIOUS
	}
	text = {
		trigger = {
			trait = lunatic
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = lunatic }
			}
		}
		localisation_key = INSULT_DEMENTED
	}
	text = {
		trigger = {
			trigger_if = {
				limit = { is_female = yes }

				OR = {
					trait = lunatic
					trait = berserker
				}
			}
			trigger_else = {
				trait = berserker
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = lunatic
					trait = berserker
				}
			}
		}
		localisation_key = INSULT_CRAZED
	}
	text = {
		trigger = {
			trait = possessed

			event_target:event_target_1_insulter = {
				NOT = { trait = possessed }
			}
		}
		localisation_key = INSULT_DEMONIC
	}
	text = {
		trigger = {
			trait = infirm

			event_target:event_target_1_insulter = {
				NOT = { trait = infirm }
			}
		}
		localisation_key = INSULT_SENILE
	}
	text = {
		trigger = {
			trait = drunkard

			event_target:event_target_1_insulter = {
				NOT = { trait = drunkard }
			}
		}
		localisation_key = INSULT_BESOTTED
	}
	text = {
		trigger = {
			trait = eunuch
			is_female = no

			event_target:event_target_1_insulter = {
				trigger_if = {
					limit = { is_female = no }
					NOT = { trait = eunuch }
				}
			}
		}
		localisation_key = INSULT_UNMANNED
	}
	text = {
		trigger = {
			OR = {
				trait = blinded
				trait = one_eyed
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = blinded
					trait = one_eyed
				}
			}
		}
		localisation_key = INSULT_BLIND
	}
	text = {
		trigger = {
			OR = {
				trait = incapable
				trait = one_handed
				trait = severely_injured
				trait = sick_incapable

				trait = fussy
				trait = indolent
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = incapable
					trait = one_handed
					trait = severely_injured
					trait = sick_incapable

					trait = fussy
					trait = indolent
				}
			}
		}
		localisation_key = INSULT_USELESS
	}
	text = {
		trigger = {
			OR = {
				trait = lovers_pox
				trait = aztec_disease
				trait = smallpox
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = lovers_pox
					trait = aztec_disease
					trait = smallpox
				}
			}
		}
		localisation_key = INSULT_POX_RIDDEN
	}
	text = {
		trigger = {
			OR = {
				trait = one_legged
				trait = clubfooted
				trait = gout
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = one_legged
					trait = clubfooted
					trait = gout
				}
			}
		}
		localisation_key = INSULT_LIMPING
	}
	text = {
		trigger = {
			OR = {
				trait = maimed
				trait = mangled
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = maimed
					trait = mangled
				}
			}
		}
		localisation_key = INSULT_MAIMED
	}
	text = {
		trigger = {
			trait = disfigured

			event_target:event_target_1_insulter = {
				NOT = { trait = disfigured }
			}
		}
		localisation_key = INSULT_HEINOUS
	}
	text = {
		trigger = {
			trait = dwarf

			event_target:event_target_1_insulter = {
				NOT = { trait = dwarf }
			}
		}
		localisation_key = INSULT_LITTLE
	}
	text = {
		trigger = {
			OR = {
				trait = giant
				trait = inbred
			}

			is_female = no

			event_target:event_target_1_insulter = {
				NOR = {
					trait = giant
					trait = inbred
				}
			}
		}
		localisation_key = INSULT_MONSTROUS
	}
	text = {
		trigger = {
			trigger_if = {
				limit = { is_female = yes }

				OR = {
					trait = ugly
					trait = giant
					trait = inbred
				}

				event_target:event_target_1_insulter = {
					NOR = {
						trait = ugly
						trait = giant
						trait = inbred
					}
				}
			}
			trigger_else = {
				trait = ugly

				event_target:event_target_1_insulter = {
					NOT = { trait = ugly }
				}
			}
		}
		localisation_key = INSULT_HIDEOUS
	}
	text = {
		trigger = {
			trait = harelip

			event_target:event_target_1_insulter = {
				NOT = { trait = harelip }
			}
	}
		localisation_key = INSULT_CLEFT_LIPPED
	}
	text = {
		trigger = {
			trait = hunchback

			event_target:event_target_1_insulter = {
				NOT = { trait = hunchback }
			}
		}
		localisation_key = INSULT_CROOKED
	}
	text = {
		trigger = {
			trait = imbecile

			event_target:event_target_1_insulter = {
				NOT = { trait = imbecile }
			}
		}
		localisation_key = INSULT_IDIOT
	}
	text = {
		trigger = {
			trait = lefthanded

			event_target:event_target_1_insulter = {
				NOT = { trait = lefthanded }
			}
		}
		localisation_key = INSULT_LEFTHANDED
	}
	text = {
		trigger = {
			trait = lisp

			event_target:event_target_1_insulter = {
				NOT = { trait = lisp }
			}
		}
		localisation_key = INSULT_FALTERING
	}
	text = {
		trigger = {
			OR = {
				trait = slow
				trait = dull
			}

			is_female = no

			event_target:event_target_1_insulter = {
				NOR = {
					trait = slow
					trait = dull
				}
			}
		}
		localisation_key = INSULT_DIM
	}
	text = {
		trigger = {
			OR = {
				trait = slow
				trait = dull
			}

			is_female = yes

			event_target:event_target_1_insulter = {
				NOR = {
					trait = slow
					trait = dull
				}
			}
		}
		localisation_key = INSULT_VACUOUS
	}
	text = {
		trigger = {
			trait = stutter

			event_target:event_target_1_insulter = {
				NOT = { trait = stutter }
			}
		}
		localisation_key = INSULT_STUTTERING
	}
	text = {
		trigger = {
			OR = {
				trait = freckles
				trait = freckles_2
				trait = freckles_3
				trait = freckles_4
				trait = freckles_5
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = freckles
					trait = freckles_2
					trait = freckles_3
					trait = freckles_4
					trait = freckles_5
				}
			}
		}
		localisation_key = INSULT_CURSED
	}
	text = {
		trigger = {
			trait = bastard
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = bastard }
			}
		}
		localisation_key = INSULT_BASEBORN
	}
	text = {
		trigger = {
			trait = decadent

			event_target:event_target_1_insulter = {
				uses_decadence = yes
				NOT = { trait = decadent }
			}
		}
		localisation_key = INSULT_DECADENT
	}
	text = {
		trigger = {
			excommunicated_for = event_target:event_target_1_insulter

			event_target:event_target_1_insultee = {
				NOT = { excommunicated_for = event_target:event_target_1_insulter }
			}
		}
		localisation_key = INSULT_GODLESS
	}
	text = {
		trigger = {
			trait = homosexual
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = homosexual }
			}
		}
		localisation_key = INSULT_EFFEMINATE
	}
	text = {
		trigger = {
			trait = homosexual
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = homosexual }
			}
		}
		localisation_key = INSULT_SAPPHIC
	}
	text = {
		trigger = {
			OR = {
				trait = zealous

				# Crusader traits
				trait = crusader
				trait = crusader_king
				trait = crusader_queen
				trait = mujahid
				trait = ares_own
				trait = eagle_knight
				trait = gondi_shahansha
				trait = kailash_guardian
				trait = nyames_shield
				trait = peruns_chosen
				trait = hound_of_dievas
				trait = kanai
				trait = sun_warrior
				trait = skylord
				trait = ukkos_hammer
				trait = valhalla_bound

				# Other traits
				trait = bloodthirsty_gods_1
				trait = bloodthirsty_gods_2
				trait = bloodthirsty_gods_3
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = zealous

					# Crusader traits
					trait = crusader
					trait = crusader_king
					trait = crusader_queen
					trait = mujahid
					trait = ares_own
					trait = eagle_knight
					trait = gondi_shahansha
					trait = kailash_guardian
					trait = nyames_shield
					trait = peruns_chosen
					trait = hound_of_dievas
					trait = kanai
					trait = sun_warrior
					trait = skylord
					trait = ukkos_hammer
					trait = valhalla_bound

					# Other traits
					trait = bloodthirsty_gods_1
					trait = bloodthirsty_gods_2
					trait = bloodthirsty_gods_3
				}
			}
		}
		localisation_key = INSULT_NARROWMINDED
	}
	text = {
		trigger = {
			OR = {
				# Diseases
				trait = ill
				trait = infection
				trait = pneumonic
				trait = flu
				trait = scurvy

				# Symptoms
				trait = abdominal_pain
				trait = chest_pain
				trait = cough
				trait = cramps
				trait = diarrhea
				trait = fatigue
				trait = fever
				trait = headache
				trait = malaise
				trait = rash
				trait = vomiting

				# Epidemics
				trait = dancing_plague
				trait = measles
				trait = consumption
				trait = slow_fever
			}

			event_target:event_target_1_insulter = {
				NOR = {
					# Diseases
					trait = ill
					trait = infection
					trait = pneumonic
					trait = flu
					trait = scurvy

					# Symptoms
					trait = abdominal_pain
					trait = chest_pain
					trait = cough
					trait = cramps
					trait = diarrhea
					trait = fatigue
					trait = fever
					trait = headache
					trait = malaise
					trait = rash
					trait = vomiting

					# Epidemics
					trait = dancing_plague
					trait = measles
					trait = consumption
					trait = slow_fever
				}
			}
		}
		localisation_key = INSULT_SICKLY
	}
	text = {
		trigger = {
			trait = cancer

			event_target:event_target_1_insulter = {
				NOT = { trait = cancer }
			}
		}
		localisation_key = INSULT_WITHERING
	}
	text = {
		trigger = {
			OR = {
				trait = dysentery
				trait = food_poisoning
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = dysentery
					trait = food_poisoning
				}
			}
		}
		localisation_key = INSULT_PUTRID
	}
	text = {
		trigger = {
			trait = great_pox

			event_target:event_target_1_insulter = {
				NOT = { trait = great_pox }
			}
		}
		localisation_key = INSULT_SYPHILITIC
	}
	text = {
		trigger = {
			NOR = {
				trait = leper
			}

			event_target:event_target_1_insulter = {
				NOT = { trait = leper }
			}
		}
		localisation_key = INSULT_UNCLEAN
	}
	text = {
		trigger = {
			trait = rabies

			event_target:event_target_1_insulter = {
				NOT = { trait = rabies }
			}
		}
		localisation_key = INSULT_RABID
	}
	text = {
		trigger = {
			trait = bubonic_plague

			event_target:event_target_1_insulter = {
				NOT = { trait = bubonic_plague }
			}
		}
		localisation_key = INSULT_DECAYING
	}
	text = {
		trigger = {
			trait = camp_fever

			event_target:event_target_1_insulter = {
				NOT = { trait = camp_fever }
			}
		}
		localisation_key = INSULT_SMELLY
	}
	text = {
		trigger = {
			trait = affectionate

			event_target:event_target_1_insulter = {
				NOT = { trait = affectionate }
			}
		}
		localisation_key = INSULT_CLINGY
	}
	text = {
		trigger = {
			OR = {
				trait = brooding
				trait = timid
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = brooding
					trait = timid
				}
			}
		}
		localisation_key = INSULT_CREEPY
	}
	text = {
		trigger = {
			trait = haughty

			event_target:event_target_1_insulter = {
				NOT = { trait = haughty }
			}
		}
		localisation_key = INSULT_ARROGANT
	}
	text = {
		trigger = {
			trait = rowdy

			event_target:event_target_1_insulter = {
				NOT = { trait = rowdy }
			}
		}
		localisation_key = INSULT_WILD
	}
	text = {
		trigger = {
			OR = {
				trait = willful
				trait = stubborn
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = willful
					trait = stubborn
				}
			}
		}
		localisation_key = INSULT_PIGHEADED
	}
	text = {
		trigger = {
			trait = adventurer

			event_target:event_target_1_insulter = {
				NOT = { trait = adventurer }
			}
		}
		localisation_key = INSULT_GRABBING
	}
	text = {
		trigger = {
			trait = cannibal

			event_target:event_target_1_insulter = {
				NOT = { trait = cannibal }
			}
		}
		localisation_key = INSULT_CANNIBALISTIC
	}
	text = {
		trigger = {
			trait = in_hiding

			event_target:event_target_1_insulter = {
				NOT = { trait = in_hiding }
			}
		}
		localisation_key = INSULT_SNEAKING
	}
	text = {
		trigger = {
			trait = fat

			event_target:event_target_1_insulter = {
				NOT = { trait = fat }
			}
		}
		localisation_key = INSULT_BLOATED
	}
	text = {
		trigger = {
			trait = malnourished

			event_target:event_target_1_insulter = {
				NOT = { trait = malnourished }
			}
		}
		localisation_key = INSULT_STARVED
	}
	text = {
		trigger = {
			OR = {
				trait = bad_priest_aztec
				trait = bad_priest_christian
				trait = bad_priest_muslim
				trait = bad_priest_norse
				trait = bad_priest_tengri
				trait = bad_priest_zoroastrian
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = bad_priest_aztec
					trait = bad_priest_christian
					trait = bad_priest_muslim
					trait = bad_priest_norse
					trait = bad_priest_tengri
					trait = bad_priest_zoroastrian
				}
			}
		}
		localisation_key = INSULT_CORRUPT
	}
	text = {
		trigger = {
			OR = {
				trait = sympathy_christendom
				trait = sympathy_indian
				trait = sympathy_islam
				trait = sympathy_judaism
				trait = sympathy_pagans
				trait = sympathy_zoroastrianism
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = sympathy_christendom
					trait = sympathy_indian
					trait = sympathy_islam
					trait = sympathy_judaism
					trait = sympathy_pagans
					trait = sympathy_zoroastrianism
				}
			}
		}
		localisation_key = INSULT_UNPRINCIPLED
	}
	text = {
		trigger = {
			OR = {
				trait = scholar
				trait = physician
				trait = theologian
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = scholar
					trait = physician
					trait = theologian
				}
			}
		}
		localisation_key = INSULT_SQUINTEYED
	}
	text = {
		trigger = {
			trait = envious

			event_target:event_target_1_insulter = {
				NOT = { trait = envious }
			}
		}
		localisation_key = INSULT_ENVIOUS
	}
	text = {
		trigger = {
			trait = gluttonous

			event_target:event_target_1_insulter = {
				NOT = { trait = gluttonous }
			}
		}
		localisation_key = INSULT_GORGING
	}
	text = {
		trigger = {
			trait = greedy
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = greedy }
			}
		}
		localisation_key = INSULT_COVETOUS
	}
	text = {
		trigger = {
			trait = greedy
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = greedy }
			}
		}
		localisation_key = INSULT_VENAL
	}
	text = {
		trigger = {
			trait = lustful
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = lustful }
			}
		}
		localisation_key = INSULT_LECHEROUS
	}
	text = {
		trigger = {
			trait = lustful
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = lustful }
			}
		}
		localisation_key = INSULT_WANTON
	}
	text = {
		trigger = {
			trait = slothful

			event_target:event_target_1_insulter = {
				NOT = { trait = slothful }
			}
		}
		localisation_key = INSULT_INDOLENT
	}
	text = {
		trigger = {
			trait = wroth
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = wroth }
			}
		}
		localisation_key = INSULT_RAGING
	}
	text = {
		trigger = {
			trait = wroth
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = wroth }
			}
		}
		localisation_key = INSULT_HARRIDAN
	}
	text = {
		trigger = {
			trait = chaste

			event_target:event_target_1_insulter = {
				NOT = { trait = chaste }
			}
		}
		localisation_key = INSULT_PRUDISH
	}
	text = {
		trigger = {
			trait = humble

			event_target:event_target_1_insulter = {
				NOT = { trait = humble }
			}
		}
		localisation_key = INSULT_GROVELING
	}
	text = {
		trigger = {
			trait = kind
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = kind }
			}
		}
		localisation_key = INSULT_SOFT
	}
	text = {
		trigger = {
			trait = ambitious
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = ambitious }
			}
		}
		localisation_key = INSULT_RAPACIOUS
	}
	text = {
		trigger = {
			trait = ambitious
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = ambitious }
			}
		}
		localisation_key = INSULT_GRASPING
	}
	text = {
		trigger = {
			trait = arbitrary

			event_target:event_target_1_insulter = {
				NOT = { trait = arbitrary }
			}
		}
		localisation_key = INSULT_ERRATIC
	}
	text = {
		trigger = {
			trait = content

			event_target:event_target_1_insulter = {
				NOT = { trait = content }
			}
		}
		localisation_key = INSULT_SPINELESS
	}
	text = {
		trigger = {
			trait = craven
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = craven }
			}
		}
		localisation_key = INSULT_CRAVEN
	}
	text = {
		trigger = {
			trait = craven
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = craven }
			}
		}
		localisation_key = INSULT_WUSSY
	}
	text = {
		trigger = {
			trait = cruel
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = cruel }
			}
		}
		localisation_key = INSULT_CRUEL
	}
	text = {
		trigger = {
			trait = cruel
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = cruel }
			}
		}
		localisation_key = INSULT_CALLOUS
	}
	text = {
		trigger = {
			trait = deceitful

			event_target:event_target_1_insulter = {
				NOT = { trait = deceitful }
			}
		}
		localisation_key = INSULT_DECEITFUL
	}
	text = {
		trigger = {
			trait = erudite

			event_target:event_target_1_insulter = {
				NOT = { trait = erudite }
			}
		}
		localisation_key = INSULT_BLATHERING
	}
	text = {
		trigger = {
			trait = paranoid

			event_target:event_target_1_insulter = {
				NOT = { trait = paranoid }
			}
		}
		localisation_key = INSULT_PARANOID
	}
	text = {
		trigger = {
			trait = shy
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = shy }
			}
		}
		localisation_key = INSULT_TIMID
	}
	text = {
		trigger = {
			trait = shy
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = shy }
			}
		}
		localisation_key = INSULT_COY
	}
	text = {
		trigger = {
			trait = trusting

			event_target:event_target_1_insulter = {
				NOT = { trait = trusting }
			}
		}
		localisation_key = INSULT_GULLIBLE
	}
	text = {
		trigger = {
			trait = uncouth

			event_target:event_target_1_insulter = {
				NOT = { trait = uncouth }
			}
		}
		localisation_key = INSULT_ROUGH
	}
	text = {
		trigger = {
			trait = celibate
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = celibate }
			}
		}
		localisation_key = INSULT_UNMANLY
	}
	text = {
		trigger = {
			trait = celibate
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = celibate }
			}
		}
		localisation_key = INSULT_FRIGID
	}
	text = {
		trigger = {
			trait = hedonist
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = hedonist }
			}
		}
		localisation_key = INSULT_PERVERTED
	}
	text = {
		trigger = {
			trait = hedonist
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = hedonist }
			}
		}
		localisation_key = INSULT_DEGENERATE
	}
	text = {
		trigger = {
			trait = impaler

			event_target:event_target_1_insulter = {
				NOT = { trait = impaler }
			}
		}
		localisation_key = INSULT_EVIL
	}
	text = {
		trigger = {
			trait = mystic

			event_target:event_target_1_insulter = {
				NOT = { trait = mystic }
			}
		}
		localisation_key = INSULT_GODLESS
	}
	text = {
		trigger = {
			trait = master_seducer
			is_female = no

			event_target:event_target_1_insulter = {
				NOR = {
					trait = master_seducer
					trait = master_seductress
				}
			}
		}
		localisation_key = INSULT_WHORING
	}
	text = {
		trigger = {
			trait = master_seductress
			is_female = yes

			event_target:event_target_1_insulter = {
				NOR = {
					trait = master_seducer
					trait = master_seductress
				}
			}
		}
		localisation_key = INSULT_DEBASED
	}
	text = {
		trigger = {
			trait = peasant_leader

			event_target:event_target_1_insulter = {
				NOT = { trait = peasant_leader }
			}
		}
		localisation_key = INSULT_LOWBORN
	}
}

defined_text = {
	name = GetAdultInsultNoun

	text = {
		trigger = {
			trait = depressed

			event_target:event_target_1_insulter = {
				NOT = { trait = depressed }
			}
		}
		localisation_key = INSULT_GRUMBLER
	}
	text = {
		trigger = {
			trait = drunkard

			event_target:event_target_1_insulter = {
				NOT = { trait = drunkard }
			}
		}
		localisation_key = INSULT_DRUNKARD
	}
	text = {
		trigger = {
			trait = eunuch

			event_target:event_target_1_insulter = {
				NOT = { trait = eunuch }
			}
		}
		localisation_key = INSULT_EUNUCH
	}
	text = {
		trigger = {
			OR = {
				trait = incapable
				trait = sick_incapable
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = incapable
					trait = sick_incapable
				}
			}
		}
		localisation_key = INSULT_VEGETABLE
	}
	text = {
		trigger = {
			trait = infirm

			event_target:event_target_1_insulter = {
				NOT = { trait = infirm }
			}
		}
		localisation_key = INSULT_DODDERER
	}
	text = {
		trigger = {
			OR = {
				trigger_if = {
					limit = { is_female = no }
					trait = lunatic
				}

				trait = berserker
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = lunatic
					trait = berserker
				}
			}
		}
		localisation_key = INSULT_LUNATIC
	}
	text = {
		trigger = {
			trait = lunatic
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = lunatic }
			}
		}
		localisation_key = INSULT_BAT
	}
	text = {
		trigger = {
			trait = possessed
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = possessed }
			}
		}
		localisation_key = INSULT_WARLOCK
	}
	text = {
		trigger = {
			trait = possessed
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = possessed }
			}
		}
		localisation_key = INSULT_DEVIL_WOMAN
	}
	text = {
		trigger = {
			trait = leper

			event_target:event_target_1_insulter = {
				NOT = { trait = leper }
			}
		}
		localisation_key = INSULT_LEPER
	}
	text = {
		trigger = {
			OR = {
				trait = maimed
				trait = one_eyed
				trait = one_handed
				trait = one_legged
				trait = mangled
				trait = severely_injured
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = maimed
					trait = one_eyed
					trait = one_handed
					trait = one_legged
					trait = mangled
					trait = severely_injured
				}
			}
		}
		localisation_key = INSULT_CRIPPLE
	}
	text = {
		trigger = {
			trait = disfigured

			event_target:event_target_1_insulter = {
				NOT = { trait = disfigured }
			}
		}
		localisation_key = INSULT_FREAK
	}
	text = {
		trigger = {
			OR = {
				# Diseases
				trait = ill
				trait = infection
				trait = pneumonic
				trait = cancer
				trait = gout

				# Symptoms
				trait = abdominal_pain
				trait = chest_pain
				trait = cough
				trait = cramps
				trait = diarrhea
				trait = fatigue
				trait = fever
				trait = headache
				trait = malaise
				trait = rash
				trait = vomiting
			}

			event_target:event_target_1_insulter = {
				NOR = {
					# Diseases
					trait = ill
					trait = infection
					trait = pneumonic
					trait = cancer
					trait = gout

					# Symptoms
					trait = abdominal_pain
					trait = chest_pain
					trait = cough
					trait = cramps
					trait = diarrhea
					trait = fatigue
					trait = fever
					trait = headache
					trait = malaise
					trait = rash
					trait = vomiting
				}
			}
		}
		localisation_key = INSULT_INVALID
	}
	text = {
		trigger = {
			trait = rabies

			event_target:event_target_1_insulter = {
				NOT = { trait = rabies }
			}
		}
		localisation_key = INSULT_MANIAC
	}
	text = {
		trigger = {
			OR = {
				trait = zealous

				# Crusader traits
				trait = crusader
				trait = crusader_king
				trait = crusader_queen
				trait = mujahid
				trait = ares_own
				trait = eagle_knight
				trait = gondi_shahansha
				trait = kailash_guardian
				trait = nyames_shield
				trait = peruns_chosen
				trait = hound_of_dievas
				trait = kanai
				trait = sun_warrior
				trait = skylord
				trait = ukkos_hammer
				trait = valhalla_bound

				# Other traits
				trait = bloodthirsty_gods_1
				trait = bloodthirsty_gods_2
				trait = bloodthirsty_gods_3
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = zealous

					# Crusader traits
					trait = crusader
					trait = crusader_king
					trait = crusader_queen
					trait = mujahid
					trait = ares_own
					trait = eagle_knight
					trait = gondi_shahansha
					trait = kailash_guardian
					trait = nyames_shield
					trait = peruns_chosen
					trait = hound_of_dievas
					trait = kanai
					trait = sun_warrior
					trait = skylord
					trait = ukkos_hammer
					trait = valhalla_bound

					# Other traits
					trait = bloodthirsty_gods_1
					trait = bloodthirsty_gods_2
					trait = bloodthirsty_gods_3
				}
			}
		}
		localisation_key = INSULT_FANATIC
	}
	text = {
		trigger = {
			trait = frail
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = frail }
			}
		}
		localisation_key = INSULT_WEAKLING
	}
	text = {
		trigger = {
			OR = {
				trait = pirate
				trait = ravager
				trait = viking
				trait = sea_king
				trait = sea_queen
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = pirate
					trait = ravager
					trait = viking
					trait = sea_king
					trait = sea_queen
				}
			}
		}
		localisation_key = COMPL_PIRATE
	}
	text = {
		trigger = {
			trait = affectionate

			event_target:event_target_1_insulter = {
				NOT = { trait = affectionate }
			}
		}
		localisation_key = INSULT_TICK
	}
	text = {
		trigger = {
			OR = {
				trait = brooding
				trait = conscientious
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = brooding
					trait = conscientious
				}
			}
		}
		localisation_key = INSULT_BORE
	}
	text = {
		trigger = {
			trait = curious

			event_target:event_target_1_insulter = {
				NOT = { trait = curious }
			}
		}
		localisation_key = INSULT_SNEAK
	}
	text = {
		trigger = {
			trait = haughty

			event_target:event_target_1_insulter = {
				NOT = { trait = haughty }
			}
		}
		localisation_key = INSULT_BRAT
	}
	text = {
		trigger = {
			trait = idolizer

			event_target:event_target_1_insulter = {
				NOT = { trait = idolizer }
			}
		}
		localisation_key = INSULT_WORM
	}
	text = {
		trigger = {
			trait = rowdy

			event_target:event_target_1_insulter = {
				NOT = { trait = rowdy }
			}
		}
		localisation_key = INSULT_RUFFIAN
	}
	text = {
		trigger = {
			OR = {
				trait = willful
				trait = stubborn
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = willful
					trait = stubborn
				}
			}
		}
		localisation_key = INSULT_MULE
	}
	text = {
		trigger = {
			trait = adventurer

			event_target:event_target_1_insulter = {
				NOT = { trait = adventurer }
			}
		}
		localisation_key = INSULT_UPSTART
	}
	text = {
		trigger = {
			trait = cannibal

			event_target:event_target_1_insulter = {
				NOT = { trait = cannibal }
			}
		}
		localisation_key = INSULT_CANNIBAL
	}
	text = {
		trigger = {
			OR = {
				trait = in_hiding

				trigger_if = {
					limit = { is_female = no }
					trait = craven
				}
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = in_hiding
					trait = craven
				}
			}
		}
		localisation_key = INSULT_COWARD
	}
	text = {
		trigger = {
			trait = fat
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = fat }
			}
		}
		localisation_key = INSULT_FATPIG
	}
	text = {
		trigger = {
			trait = fat
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = fat }
			}
		}
		localisation_key = INSULT_SOW
	}
	text = {
		trigger = {
			OR = {
				trait = malnourished
				trait = weak
			}

			is_female = no

			event_target:event_target_1_insulter = {
				NOR = {
					trait = malnourished
					trait = weak
				}
			}
		}
		localisation_key = INSULT_WEAKLING
	}
	text = {
		trigger = {
			trait = malnourished
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = malnourished }
			}
		}
		localisation_key = INSULT_CORPSE
	}
	text = {
		trigger = {
			OR = {
				trait = bad_priest_aztec
				trait = bad_priest_christian
				trait = bad_priest_muslim
				trait = bad_priest_norse
				trait = bad_priest_tengri
				trait = bad_priest_zoroastrian
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = bad_priest_aztec
					trait = bad_priest_christian
					trait = bad_priest_muslim
					trait = bad_priest_norse
					trait = bad_priest_tengri
					trait = bad_priest_zoroastrian
				}
			}
		}
		localisation_key = INSULT_SCARECROW
	}
	text = {
		trigger = {
			trait = heresiarch

			event_target:event_target_1_insulter = {
				NOT = { trait = heresiarch }
			}
		}
		localisation_key = INSULT_HERESIARCH
	}
	text = {
		trigger = {
			OR = {
				trait = sympathy_christendom
				trait = sympathy_indian
				trait = sympathy_islam
				trait = sympathy_judaism
				trait = sympathy_pagans
				trait = sympathy_zoroastrianism
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = sympathy_christendom
					trait = sympathy_indian
					trait = sympathy_islam
					trait = sympathy_judaism
					trait = sympathy_pagans
					trait = sympathy_zoroastrianism
				}
			}
		}
		localisation_key = INSULT_LOVER_OF_HEATHENS
	}
	text = {
		trigger = {
			OR = {
				trait = scholar
				trait = theologian
				trait = physician
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = scholar
					trait = theologian
					trait = physician
				}
			}
		}
		localisation_key = INSULT_BOOKWORM
	}
	text = {
		trigger = {
			trait = gluttonous

			event_target:event_target_1_insulter = {
				NOT = { trait = gluttonous }
			}
		}
		localisation_key = INSULT_GLUTTON
	}
	text = {
		trigger = {
			trait = lustful
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = lustful }
			}
		}
		localisation_key = INSULT_LECHER
	}
	text = {
		trigger = {
			trait = lustful
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = lustful }
			}
		}
		localisation_key = INSULT_TROLL
	}
	text = {
		trigger = {
			trait = slothful

			event_target:event_target_1_insulter = {
				NOT = { trait = slothful }
			}
		}
		localisation_key = INSULT_IDLER
	}
	text = {
		trigger = {
			trait = wroth
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = wroth }
			}
		}
		localisation_key = INSULT_HARRIDAN
	}
	text = {
		trigger = {
			trait = chaste
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = chaste }
			}
		}
		localisation_key = INSULT_PRUDE
	}
	text = {
		trigger = {
			trait = chaste
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = chaste }
			}
		}
		localisation_key = INSULT_PRUNE
	}
	text = {
		trigger = {
			trait = patient

			event_target:event_target_1_insulter = {
				NOT = { trait = patient }
			}
		}
		localisation_key = INSULT_SPIDER
	}
	text = {
		trigger = {
			trait = temperate

			event_target:event_target_1_insulter = {
				NOT = { trait = temperate }
			}
		}
		localisation_key = INSULT_BORE
	}
	text = {
		trigger = {
			trait = arbitrary

			event_target:event_target_1_insulter = {
				NOT = { trait = arbitrary }
			}
		}
		localisation_key = INSULT_SCATTERBRAIN
	}
	text = {
		trigger = {
			trait = cruel
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = cruel }
			}
		}
		localisation_key = INSULT_BRUTE
	}
	text = {
		trigger = {
			trait = cruel
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = cruel }
			}
		}
		localisation_key = INSULT_FIEND
	}
	text = {
		trigger = {
			trait = cynical

			event_target:event_target_1_insulter = {
				NOT = { trait = cynical }
			}
		}
		localisation_key = INSULT_UNBELIEVER
	}
	text = {
		trigger = {
			trait = dull
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = dull }
			}
		}
		localisation_key = INSULT_DULLARD
	}
	text = {
		trigger = {
			trait = dull
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = dull }
			}
		}
		localisation_key = INSULT_NITWIT
	}
	text = {
		trigger = {
			trait = erudite

			event_target:event_target_1_insulter = {
				NOT = { trait = erudite }
			}
		}
		localisation_key = INSULT_WINDBAG
	}
	text = {
		trigger = {
			trait = trusting

			event_target:event_target_1_insulter = {
				NOT = { trait = trusting }
			}
		}
		localisation_key = INSULT_FOOL
	}
	text = {
		trigger = {
			trait = uncouth
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = uncouth }
			}
		}
		localisation_key = INSULT_FILTHY
	}
	text = {
		trigger = {
			trait = uncouth
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = uncouth }
			}
		}
		localisation_key = INSULT_HARPY
	}
	text = {
		trigger = {
			trait = gardener

			event_target:event_target_1_insulter = {
				NOT = { trait = gardener }
			}
		}
		localisation_key = INSULT_TREEHUGGER
	}
	text = {
		trigger = {
			trait = hedonist

			event_target:event_target_1_insulter = {
				NOT = { trait = hedonist }
			}
		}
		localisation_key = INSULT_DEBAUCHER
	}
	text = {
		trigger = {
			trait = impaler

			event_target:event_target_1_insulter = {
				NOT = { trait = impaler }
			}
		}
		localisation_key = INSULT_TORTURER
	}
	text = {
		trigger = {
			trait = mystic

			event_target:event_target_1_insulter = {
				NOT = { trait = mystic }
			}
		}
		localisation_key = INSULT_OCCULTIST
	}
	text = {
		trigger = {
			trait = master_schemer

			event_target:event_target_1_insulter = {
				NOT = { trait = master_schemer }
			}
		}
		localisation_key = INSULT_INSTIGATOR
	}
	text = {
		trigger = {
			trait = master_seducer
			is_female = no

			event_target:event_target_1_insulter = {
				NOR = {
					trait = master_seducer
					trait = master_seductress
				}
			}
		}
		localisation_key = INSULT_WHOREMONGER
	}
	text = {
		trigger = {
			trait = master_seductress
			is_female = yes

			event_target:event_target_1_insulter = {
				NOR = {
					trait = master_seducer
					trait = master_seductress
				}
			}
		}
		localisation_key = INSULT_TEMPTRESS
	}
	text = {
		trigger = {
			trait = socializer

			event_target:event_target_1_insulter = {
				NOT = { trait = socializer }
			}
		}
		localisation_key = INSULT_BLABBERER
	}
	text = {
		trigger = {
			trait = desert_expert

			event_target:event_target_1_insulter = {
				NOT = { trait = desert_expert }
			}
		}
		localisation_key = INSULT_DESERT_RAT
	}
	text = {
		trigger = {
			trait = jungle_expert

			event_target:event_target_1_insulter = {
				NOT = { trait = jungle_expert }
			}
		}
		localisation_key = INSULT_JUNGLE_SNAKE
	}
	text = {
		trigger = {
			trait = peasant_leader
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = peasant_leader }
			}
		}
		localisation_key = INSULT_PEASANT
	}
	text = {
		trigger = {
			trait = peasant_leader
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = peasant_leader }
			}
		}
		localisation_key = INSULT_PEASANT_WOMAN
	}
	text = {
		trigger = {
			trait = clubfooted

			event_target:event_target_1_insulter = {
				NOT = { trait = clubfooted }
			}
		}
		localisation_key = INSULT_CLUBFOOT
	}
	text = {
		trigger = {
			trait = dwarf

			event_target:event_target_1_insulter = {
				NOT = { trait = dwarf }
			}
		}
		localisation_key = INSULT_DWARF
	}
	text = {
		trigger = {
			OR = {
				trait = giant
				trait = inbred
			}

			is_female = no

			event_target:event_target_1_insulter = {
				NOR = {
					trait = giant
					trait = inbred
				}
			}
		}
		localisation_key = INSULT_ABOMINATION
	}
	text = {
		trigger = {
			OR = {
				trait = giant
				trait = inbred
			}

			is_female = yes

			event_target:event_target_1_insulter = {
				NOR = {
					trait = giant
					trait = inbred
				}
			}
		}
		localisation_key = INSULT_FREAK
	}
	text = {
		trigger = {
			trait = harelip

			event_target:event_target_1_insulter = {
				NOT = { trait = harelip }
			}
		}
		localisation_key = INSULT_HARELIP
	}
	text = {
		trigger = {
			trait = hunchback

			event_target:event_target_1_insulter = {
				NOT = { trait = hunchback }
			}
		}
		localisation_key = INSULT_HUNCHBACK
	}
	text = {
		trigger = {
			trait = imbecile

			event_target:event_target_1_insulter = {
				NOT = { trait = imbecile }
			}
		}
		localisation_key = INSULT_IMBECILE
	}
	text = {
		trigger = {
			trait = lisp

			event_target:event_target_1_insulter = {
				NOT = { trait = lisp }
			}
		}
		localisation_key = INSULT_LISPER
	}
	text = {
		trigger = {
			trait = slow
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = slow }
			}
		}
		localisation_key = INSULT_DULLARD
	}
	text = {
		trigger = {
			trait = slow
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = slow }
			}
		}
		localisation_key = INSULT_NITWIT
	}
	text = {
		trigger = {
			trait = ugly
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = ugly }
			}
		}
		localisation_key = INSULT_GROTESQUE
	}
	text = {
		trigger = {
			trait = ugly
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = ugly }
			}
		}
		localisation_key = INSULT_GORGON
	}
	text = {
		trigger = {
			trait = homosexual
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = homosexual }
			}
		}
		localisation_key = INSULT_SODOMITE
	}
	text = {
		trigger = {
			trait = homosexual
			is_female = yes

			event_target:event_target_1_insulter = {
				NOT = { trait = homosexual }
			}
		}
		localisation_key = INSULT_LESBIAN
	}
	text = {
		trigger = {
			trait = legit_bastard
			is_female = no

			event_target:event_target_1_insulter = {
				NOT = { trait = legit_bastard }
			}
		}
		localisation_key = INSULT_BASTARD
	}
	text = {
		trigger = {
			OR = {
				trait = kinslayer
				trait = familial_kinslayer
				trait = dynastic_kinslayer
				trait = tribal_kinslayer
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = kinslayer
					trait = familial_kinslayer
					trait = dynastic_kinslayer
					trait = tribal_kinslayer
				}
			}
		}
		localisation_key = INSULT_KINSLAYER
	}
	text = {
		trigger = {
			excommunicated_for = event_target:event_target_1_insulter

			event_target:event_target_1_insulter = {
				NOT = { excommunicated_for = event_target:event_target_1_insultee }
			}
		}
		localisation_key = INSULT_RENEGADE
	}
}

defined_text = {
	name = GetChildComplimentAdjective

	text = {
		trigger = {
			OR = {
				trait = zealous
				trait = bloodthirsty_gods_1
				trait = bloodthirsty_gods_2
				trait = bloodthirsty_gods_3
			}
		}
		localisation_key = COMPL_GOOD
	}
	text = {
		trigger = {
			OR = {
				trait = cynical
				trait = arbitrary
				trait = physician
				trait = mystic
				trait = genius
				trait = charismatic_negotiator
				trait = grey_eminence
				trait = fortune_builder
				trait = midas_touched
				trait = scholarly_theologian
				trait = mastermind_theologian
			}
		}
		localisation_key = COMPL_CLEVER
	}
	text = {
		trigger = {
			OR = {
				trait = temperate
				trait = chaste
				trait = gregarious
				trait = just
				trait = shy
				trait = celibate
			}
		}
		localisation_key = COMPL_NICE
	}
	text = {
		trigger = {
			OR = {
				trait = groomed
				trait = attractive
			}
		}
		localisation_key = COMPL_PRETTY
	}
}

defined_text = {
	name = GetChildComplimentNoun

	text = {
		trigger = {
			OR = {
				trait = arbitrary
				trait = physician
				trait = mystic
				trait = scholar
				trait = genius
			}
		}
		localisation_key = COMPL_SMARTY
	}
}

defined_text = {
	name = GetChildInsultAdjective

	text = {
		trigger = {
			OR = {
				trait = adventurer
				trait = bad_priest_aztec
				trait = bad_priest_christian
				trait = bad_priest_muslim
				trait = bad_priest_norse
				trait = bad_priest_tengri
				trait = bad_priest_zoroastrian
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = adventurer
					trait = bad_priest_aztec
					trait = bad_priest_christian
					trait = bad_priest_muslim
					trait = bad_priest_norse
					trait = bad_priest_tengri
					trait = bad_priest_zoroastrian
				}
			}
		}
		localisation_key = INSULT_CRUMMY
	}
	text = {
		trigger = {
			OR = {
				trait = zealous
				trait = bloodthirsty_gods_1
				trait = bloodthirsty_gods_2
				trait = bloodthirsty_gods_3
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = zealous
					trait = bloodthirsty_gods_1
					trait = bloodthirsty_gods_2
					trait = bloodthirsty_gods_3
				}
			}
		}
		localisation_key = INSULT_NASTY
	}
	text = {
		trigger = {
			OR = {
				trait = amateurish_plotter
				trait = flamboyant_schemer
				trait = intricate_webweaver
				trait = elusive_shadow
				trait = naive_appeaser
				trait = underhanded_rogue
				trait = charismatic_negotiator
				trait = grey_eminence
				trait = indulgent_wastrel
				trait = thrifty_clerk
				trait = fortune_builder
				trait = midas_touched
				trait = detached_priest
				trait = dutiful_cleric
				trait = scholarly_theologian
				trait = mastermind_theologian

				trait = greedy
				trait = chaste
				trait = humble
				trait = shy
				trait = trusting
				trait = dull
				trait = celibate
				trait = master_schemer
				trait = sympathy_christendom
				trait = sympathy_indian
				trait = sympathy_islam
				trait = sympathy_judaism
				trait = sympathy_pagans
				trait = sympathy_zoroastrianism
				trait = dwarf
				trait = lisp
				trait = slow
				trait = stutter
				trait = drunkard
				trait = infirm
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = amateurish_plotter
					trait = flamboyant_schemer
					trait = intricate_webweaver
					trait = elusive_shadow
					trait = naive_appeaser
					trait = underhanded_rogue
					trait = charismatic_negotiator
					trait = grey_eminence
					trait = indulgent_wastrel
					trait = thrifty_clerk
					trait = fortune_builder
					trait = midas_touched
					trait = detached_priest
					trait = dutiful_cleric
					trait = scholarly_theologian
					trait = mastermind_theologian

					trait = greedy
					trait = chaste
					trait = humble
					trait = shy
					trait = trusting
					trait = dull
					trait = celibate
					trait = master_schemer
					trait = sympathy_christendom
					trait = sympathy_indian
					trait = sympathy_islam
					trait = sympathy_judaism
					trait = sympathy_pagans
					trait = sympathy_zoroastrianism
					trait = dwarf
					trait = lisp
					trait = slow
					trait = stutter
					trait = drunkard
					trait = infirm
				}
			}
		}
		localisation_key = INSULT_STUPID
	}
	text = {
		trigger = {
			trait = gluttonous

			event_target:event_target_1_insulter = {
				NOT = { trait = gluttonous }
			}
		}
		localisation_key = INSULT_FLABBY
	}
	text = {
		trigger = {
			trait = lustful

			event_target:event_target_1_insulter = {
				NOT = { trait = lustful }
			}
		}
		localisation_key = INSULT_CREEPY
	}
	text = {
		trigger = {
			trait = slothful

			event_target:event_target_1_insulter = {
				NOT = { trait = slothful }
			}
		}
		localisation_key = INSULT_LAZY
	}
	text = {
		trigger = {
			OR = {
				trait = ambitious
				trait = cruel
				trait = deceitful
				trait = impaler
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = ambitious
					trait = cruel
					trait = deceitful
					trait = impaler
				}
			}
		}
		localisation_key = INSULT_WICKED
	}
	text = {
		trigger = {
			trait = craven

			event_target:event_target_1_insulter = {
				NOT = { trait = craven }
			}
		}
		localisation_key = INSULT_WUSSY
	}
	text = {
		trigger = {
			OR = {
				trait = paranoid
				trait = haughty
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = paranoid
					trait = haughty
				}
			}
		}
		localisation_key = INSULT_GROUCHY
	}
	text = {
		trigger = {
			OR = {
				trait = homosexual
				trait = hedonist
				trait = lunatic
				trait = berserker
				trait = rowdy
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = homosexual
					trait = hedonist
					trait = lunatic
					trait = berserker
					trait = rowdy
				}
			}
		}
		localisation_key = INSULT_CRAZY
	}
	text = {
		trigger = {
			trait = mystic

			event_target:event_target_1_insulter = {
				NOT = { trait = mystic }
			}
		}
		localisation_key = INSULT_WEIRD
	}
	text = {
		trigger = {
			OR = {
				trait = socializer
				trait = eunuch
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = socializer
					trait = eunuch
				}
			}
		}
		localisation_key = INSULT_SILLY
	}
	text = {
		trigger = {
			OR = {
				trait = ugly
				trait = uncouth
				trait = giant
				trait = inbred
				trait = leper
				trait = great_pox
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = ugly
					trait = uncouth
					trait = giant
					trait = inbred
					trait = leper
					trait = great_pox
				}
			}
		}
		localisation_key = INSULT_UGLY
	}
	text = {
		trigger = {
			OR = {
				trait = lovers_pox
				trait = smallpox
				trait = aztec_disease
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = lovers_pox
					trait = smallpox
					trait = aztec_disease
				}
			}
		}
		localisation_key = INSULT_POX_RIDDEN
	}
	text = {
		trigger = {
			OR = {
				trait = maimed
				trait = mangled
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = maimed
					trait = mangled
				}
			}
		}
		localisation_key = INSULT_MAIMED
	}
	text = {
		trigger = {
			OR = {
				trait = maimed
				trait = one_handed
				trait = severely_injured
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = maimed
					trait = one_handed
					trait = severely_injured
				}
			}
		}
		localisation_key = INSULT_USELESS
	}
	text = {
		trigger = {
			OR = {
				trait = one_legged
				trait = gout
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = one_legged
					trait = gout
				}
			}
		}
		localisation_key = INSULT_LIMPING
	}
	text = {
		trigger = {
			trait = one_eyed

			event_target:event_target_1_insulter = {
				NOT = { trait = one_eyed }
			}
		}
		localisation_key = INSULT_BLIND
	}
	text = {
		trigger = {
			trait = disfigured

			event_target:event_target_1_insulter = {
				NOT = { trait = disfigured }
			}
		}
		localisation_key = INSULT_HEINOUS
	}
	text = {
		trigger = {
			excommunicated_for = event_target:event_target_1_insulter

			event_target:event_target_1_insulter = {
				NOT = { excommunicated_for = event_target:event_target_1_insultee }
			}
		}
		localisation_key = INSULT_EVIL
	}
	text = {
		trigger = {
			trait = bubonic_plague

			event_target:event_target_1_insulter = {
				NOT = { trait = bubonic_plague }
			}
		}
		localisation_key = INSULT_SMELLY
	}
	text = {
		trigger = {
			OR = {
				trait = dancing_plague
				trait = measles
				trait = consumption
				trait = slow_fever
				trait = camp_fever
				trait = ill
				trait = infection
				trait = pneumonic
				trait = flu
				trait = scurvy

				# Symptoms
				trait = abdominal_pain
				trait = chest_pain
				trait = cough
				trait = cramps
				trait = diarrhea
				trait = fatigue
				trait = fever
				trait = headache
				trait = malaise
				trait = rash
				trait = vomiting
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = dancing_plague
					trait = measles
					trait = consumption
					trait = slow_fever
					trait = camp_fever
					trait = ill
					trait = infection
					trait = pneumonic
					trait = flu
					trait = scurvy

					# Symptoms
					trait = abdominal_pain
					trait = chest_pain
					trait = cough
					trait = cramps
					trait = diarrhea
					trait = fatigue
					trait = fever
					trait = headache
					trait = malaise
					trait = rash
					trait = vomiting
				}
			}
		}
		localisation_key = INSULT_SICKLY
	}
	text = {
		trigger = {
			trait = cancer

			event_target:event_target_1_insulter = {
				NOT = { trait = cancer }
			}
		}
		localisation_key = INSULT_WITHERING
	}
	text = {
		trigger = {
			OR = {
				trait = dysentery
				trait = food_poisoning
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = dysentery
					trait = food_poisoning
				}
			}
		}
		localisation_key = INSULT_PUTRID
	}
	text = {
		trigger = {
			trait = rabies

			event_target:event_target_1_insulter = {
				NOT = { trait = rabies }
			}
		}
		localisation_key = INSULT_RABID
	}
	text = {
		trigger = {
			trait = affectionate

			event_target:event_target_1_insulter = {
				NOT = { trait = affectionate }
			}
		}
		localisation_key = INSULT_RABID
	}
}

defined_text = {
	name = GetChildInsultNoun

	text = {
		trigger = {
			OR = {
				trait = homosexual
				trait = imbecile
				trait = adventurer
				trait = heresiarch
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = homosexual
					trait = imbecile
					trait = adventurer
					trait = heresiarch
				}
			}
		}
		localisation_key = INSULT_PEABRAIN
	}
	text = {
		trigger = {
			OR = {
				trait = adventurer
				trait = bad_priest_aztec
				trait = bad_priest_christian
				trait = bad_priest_muslim
				trait = bad_priest_norse
				trait = bad_priest_tengri
				trait = bad_priest_zoroastrian
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = adventurer
					trait = bad_priest_aztec
					trait = bad_priest_christian
					trait = bad_priest_muslim
					trait = bad_priest_norse
					trait = bad_priest_tengri
					trait = bad_priest_zoroastrian
				}
			}
		}
		localisation_key = INSULT_SCARECROW
	}
	text = {
		trigger = {
			OR = {
				trait = gluttonous
				trait = chaste
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = gluttonous
					trait = chaste
				}
			}
		}
		localisation_key = INSULT_PIGFACE
	}
	text = {
		trigger = {
			OR = {
				trait = lustful
				trait = cruel
				trait = giant
				trait = inbred
				trait = berserker
				trait = haughty
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = lustful
					trait = cruel
					trait = giant
					trait = inbred
					trait = berserker
					trait = haughty
				}
			}
		}
		localisation_key = INSULT_TROLL
	}
	text = {
		trigger = {
			trait = wroth

			event_target:event_target_1_insulter = {
				NOT = { trait = wroth }
			}
		}
		localisation_key = INSULT_MEANIE
	}
	text = {
		trigger = {
			trait = patient

			event_target:event_target_1_insulter = {
				NOT = { trait = patient }
			}
		}
		localisation_key = INSULT_DONKEY
	}
	text = {
		trigger = {
			trait = arbitrary

			event_target:event_target_1_insulter = {
				NOT = { trait = arbitrary }
			}
		}
		localisation_key = INSULT_IDIOT
	}
	text = {
		trigger = {
			OR = {
				trait = cynical
				trait = mystic
				trait = possessed
				excommunicated_for = event_target:event_target_1_insulter
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = cynical
					trait = mystic
					trait = possessed
					excommunicated_for = event_target:event_target_1_insultee
				}
			}
		}
		localisation_key = INSULT_DEVIL
	}
	text = {
		trigger = {
			OR = {
				trait = zealous
				trait = erudite
				trait = scholar
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = zealous
					trait = erudite
					trait = scholar
				}
			}
		}
		localisation_key = INSULT_BORE
	}
	text = {
		trigger = {
			trait = hedonist

			event_target:event_target_1_insulter = {
				NOT = { trait = hedonist }
			}
		}
		localisation_key = INSULT_HAYBRAIN
	}
	text = {
		trigger = {
			trait = master_schemer

			event_target:event_target_1_insulter = {
				NOT = { trait = master_schemer }
			}
		}
		localisation_key = INSULT_SNEAK
	}
	text = {
		trigger = {
			OR = {
				trait = maimed
				trait = one_eyed
				trait = one_handed
				trait = one_legged
				trait = mangled
				trait = severely_injured
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = maimed
					trait = one_eyed
					trait = one_handed
					trait = one_legged
					trait = mangled
					trait = severely_injured
				}
			}
		}
		localisation_key = INSULT_CRIPPLE
	}
	text = {
		trigger = {
			trait = disfigured

			event_target:event_target_1_insulter = {
				NOT = { trait = disfigured }
			}
		}
		localisation_key = INSULT_FREAK
	}
	text = {
		trigger = {
			trait = decadent

			event_target:event_target_1_insulter = {
				uses_decadence = yes
				NOT = { trait = decadent }
			}
		}
		localisation_key = INSULT_FARTMASTER
	}
	text = {
		trigger = {
			OR = {
				trait = ill
				trait = infection
				trait = pneumonic
				trait = cancer
				trait = gout

				# Symptoms
				trait = abdominal_pain
				trait = chest_pain
				trait = cough
				trait = cramps
				trait = diarrhea
				trait = fatigue
				trait = fever
				trait = headache
				trait = malaise
				trait = rash
				trait = vomiting
			}

			event_target:event_target_1_insulter = {
				NOR = {
					trait = ill
					trait = infection
					trait = pneumonic
					trait = cancer
					trait = gout

					# Symptoms
					trait = abdominal_pain
					trait = chest_pain
					trait = cough
					trait = cramps
					trait = diarrhea
					trait = fatigue
					trait = fever
					trait = headache
					trait = malaise
					trait = rash
					trait = vomiting
				}
			}
		}
		localisation_key = INSULT_INVALID
	}
	text = {
		trigger = {
			trait = rabies

			event_target:event_target_1_insulter = {
				NOT = { trait = rabies }
			}
		}
		localisation_key = INSULT_MANIAC
	}
}

defined_text = {
	name = GetEducationComplimentAdjective

	text = {
		trigger = {
			OR = {
				trait = intricate_webweaver
				trait = elusive_shadow
				trait = fortune_builder
				trait = midas_touched
				trait = scholarly_theologian
				trait = mastermind_theologian
			}
		}
		localisation_key = COMPL_CLEVER
	}
	text = {
		trigger = {
			OR = {
				trait = charismatic_negotiator
				trait = grey_eminence
			}
		}
		localisation_key = COMPL_ELOQUENT
	}
	text = {
		trigger = {
			OR = {
				trait = fortune_builder
				trait = midas_touched
			}
		}
		localisation_key = COMPL_THRIFTY
	}
	text = {
		trigger = {
			OR = {
				trait = scholarly_theologian
				trait = mastermind_theologian
			}
		}
		localisation_key = COMPL_LEARNED
	}
	text = {
		trigger = {
			trait = naive_appeaser
		}
		localisation_key = String_sweet
	}
	text = {
		trigger = {
			trait = underhanded_rogue
		}
		localisation_key = String_sincere
	}
	text = {
		trigger = {
			trait = misguided_warrior
		}
		localisation_key = String_headstrong
	}
	text = {
		trigger = {
			OR = {
				trait = tough_soldier
				trait = stubborn
			}
		}
		localisation_key = String_adamant
	}
	text = {
		trigger = {
			trait = skilled_tactician
		}
		localisation_key = String_skilled
	}
	text = {
		trigger = {
			trait = brilliant_strategist
		}
		localisation_key = String_brilliant
	}
	text = {
		trigger = {
			OR = {
				trait = indulgent_wastrel
				trait = charitable
			}
		}
		localisation_key = String_generous
	}
	text = {
		trigger = {
			OR = {
				trait = thrifty_clerk
				trait = diligent
				trait = dutiful_cleric
			}
		}
		localisation_key = String_dutiful
	}
	text = {
		trigger = {
			trait = amateurish_plotter
		}
		localisation_key = String_eager
	}
	text = {
		trigger = {
			trait = flamboyant_schemer
		}
		localisation_key = String_dedicated
	}
	text = {
		trigger = {
			trait = detached_priest
		}
		localisation_key = String_enthusiastic
	}

	# In case it cannot find any education trait...
	fallback_text = {
		localisation_key = String_dedicated
	}
}

defined_text = {
	name = GetEducationComplimentAdjectiveCap

	text = {
		trigger = {
			OR = {
				trait = intricate_webweaver
				trait = elusive_shadow
				trait = fortune_builder
				trait = midas_touched
				trait = scholarly_theologian
				trait = mastermind_theologian
			}
		}
		localisation_key = String_Clever
	}
	text = {
		trigger = {
			OR = {
				trait = charismatic_negotiator
				trait = grey_eminence
			}
		}
		localisation_key = String_Eloquent
	}
	text = {
		trigger = {
			OR = {
				trait = fortune_builder
				trait = midas_touched
			}
		}
		localisation_key = String_Thrifty
	}
	text = {
		trigger = {
			OR = {
				trait = scholarly_theologian
				trait = mastermind_theologian
			}
		}
		localisation_key = String_Learned
	}
	text = {
		trigger = {
			trait = naive_appeaser
		}
		localisation_key = String_Sweet
	}
	text = {
		trigger = {
			trait = underhanded_rogue
		}
		localisation_key = String_Sincere
	}
	text = {
		trigger = {
			trait = misguided_warrior
		}
		localisation_key = String_Headstrong
	}
	text = {
		trigger = {
			OR = {
				trait = tough_soldier
				trait = stubborn
			}
		}
		localisation_key = String_Adamant
	}
	text = {
		trigger = {
			trait = skilled_tactician
		}
		localisation_key = String_Skilled
	}
	text = {
		trigger = {
			trait = brilliant_strategist
		}
		localisation_key = String_Brilliant
	}
	text = {
		trigger = {
			OR = {
				trait = indulgent_wastrel
				trait = charitable
			}
		}
		localisation_key = String_Generous
	}
	text = {
		trigger = {
			OR = {
				trait = thrifty_clerk
				trait = diligent
				trait = dutiful_cleric
			}
		}
		localisation_key = String_Dutiful
	}
	text = {
		trigger = {
			trait = amateurish_plotter
		}
		localisation_key = String_Eager
	}
	text = {
		trigger = {
			trait = flamboyant_schemer
		}
		localisation_key = String_Dedicated
	}
	text = {
		trigger = {
			trait = detached_priest
		}
		localisation_key = String_Enthusiastic
	}

	# In case it cannot find any education trait...
	fallback_text = {
		localisation_key = String_Dedicated
	}
}

defined_text = {
	name = GetDisease

	text = {
		trigger = { trait = ill }
		localisation_key = String_fever
	}
	text = {
		trigger = { trait = pneumonic }
		localisation_key = string_pneumonia
	}
	text = {
		trigger = { trait = great_pox }
		localisation_key = String_syphilis
	}
	text = {
		trigger = { trait = leper }
		localisation_key = String_leprocy
	}
	text = {
		trigger = { trait = consumption }
		localisation_key = String_consumption
	}
	text = {
		trigger = { trait = slow_fever }
		localisation_key = String_slow_fever
	}
	text = {
		trigger = { trait = camp_fever }
		localisation_key = String_camp_fever
	}
	text = {
		trigger = { trait = bubonic_plague }
		localisation_key = String_the_Plague
	}
	text = {
		trigger = { trait = measles }
		localisation_key = String_measles
	}
	text = {
		trigger = { trait = smallpox }
		localisation_key = String_smallpox
	}
	text = {
		trigger = { trait = aztec_disease }
		localisation_key = String_syphilis
	}
	text = {
		trigger = { trait = flu }
		localisation_key = String_flu
	}
	text = {
		trigger = { trait = dysentery }
		localisation_key = String_dysentery
	}
	text = {
		trigger = { trait = gout }
		localisation_key = String_gout
	}
	text = {
		trigger = { trait = food_poisoning }
		localisation_key = String_food_poisoning
	}
	text = {
		trigger = { trait = rabies }
		localisation_key = String_rabies
	}
	text = {
		trigger = { trait = dancing_plague }
		localisation_key = String_dancing_plague
	}
	text = {
		trigger = { trait = scurvy }
		localisation_key = String_scurvy
	}
	text = {
		trigger = { trait = cancer }
		localisation_key = String_Cancer
	}
}

###SOCIETIES###

defined_text = {
	name = GetDWReasonToJoin # Returns a phrase along the lines of "cure my lover" or "help me win on the battlefield"

	text = {
		localisation_key = String_ill_lover
		trigger = { has_character_flag = has_ill_lover_loc }
	}
	text = {
		localisation_key = String_ill_spouse
		trigger = { has_character_flag = has_ill_spouse_loc }
	}
	text = {
		localisation_key = String_ill_child
		trigger = { has_character_flag = has_ill_child_loc }
	}
	text = {
		localisation_key = String_money_troubles
		trigger = { has_character_flag = has_money_troubles_loc }
	}
	text = {
		localisation_key = String_has_a_rival
		trigger = { has_character_flag = has_a_rival_loc }
	}
	text = {
		localisation_key = String_illness
		trigger = { has_character_flag = has_some_illness_loc }
	}
	text = {
		localisation_key = String_battle_luck
		trigger = { has_character_flag = has_need_of_winning_battles_loc }
	}
	text = {
		localisation_key = String_GetDWReasonToJoin_fallback
		trigger = {
			NOR = {
				has_character_flag = has_ill_lover_loc
				has_character_flag = has_ill_spouse_loc
				has_character_flag = has_ill_child_loc
				has_character_flag = has_money_troubles_loc
				has_character_flag = has_a_rival_loc
				has_character_flag = has_some_illness_loc
				has_character_flag = has_need_of_winning_battles_loc
			}
		}
	}
}

# Returns a an appropriate name for the Devil
# Fellow scripters, do expand upon all of the following once you have a good one
defined_text = {
	name = GetDWDevil
	use_first_valid = yes

	text = {
		localisation_key = String_Random_Devil
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}
	text = {
		localisation_key = String_Satan
		trigger = {
			society_member_of = the_satanists
			OR = {
				religion_group = christian
				religion_group = jewish_group
			}
		}
	}
	text = {
		localisation_key = String_Iblis
		trigger = {
			society_member_of = the_satanists
			religion_group = muslim
		}
	}
	text = {
		localisation_key = String_Ahriman
		trigger = {
			society_member_of = the_satanists
			religion_openly_zun_or_reformed_trigger = yes
		}
	}
	text = {
		localisation_key = String_Chernobog
		trigger = { society_member_of = the_cold_ones }
	}
	text = {
		localisation_key = String_Kali
		trigger = { society_member_of = the_cult_of_kali }
	}
	text = {
		localisation_key = String_Erlik
		trigger = { society_member_of = the_plaguebringers }
	}
	text = {
		localisation_key = String_Hel
		trigger = { society_member_of = the_trollcrafters }
	}
	text = {
		localisation_key = String_Bacchus
		trigger = { society_member_of = the_bacchants }
	}
	text = {
		localisation_key = String_Cagn
		trigger = { society_member_of = the_vodouns }
	}

	# CK2Plus
	text = {
		localisation_key = String_Balor
		trigger = {
			society_member_of = the_cult_of_balor
			NOT = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	text = {
		localisation_key = String_Angra_Mainyu
		trigger = {
			society_member_of = cult_of_angra_mainyu
			NOT = { culture_group = iranian }
			NOT = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	text = {
		localisation_key = String_Ahriman
		trigger = {
			society_member_of = cult_of_angra_mainyu
			culture_group = iranian

			NOT = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	text = {
		localisation_key = String_jinns
		trigger = {
			society_member_of = arab_jinn_sorcerers
			NOT = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	text = {
		localisation_key = String_Titans
		trigger = {
			society_member_of = cult_of_titan
			NOT = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	text = {
		localisation_key = String_Apep
		trigger = {
			society_member_of = cult_of_apep
			NOT = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	fallback_text = {
		localisation_key = String_Random_Devil
	}
}

# Returns a an appropriate name for dark magic
defined_text = {
	name = GetDWDarkMagic
	use_first_valid = yes

	text = {
		localisation_key = String_black_magic
		trigger = {
			OR = {
				society_member_of = cult_of_angra_mainyu
				society_member_of = cult_of_apep
				society_member_of = the_cult_of_balor
				society_member_of = the_plaguebringers
				AND = {
					society_member_of = the_satanists
					OR = {
						religion_group = christian
						religion_openly_zun_or_reformed_trigger = yes
					}
				}
			}
		}
	}
	text = {
		localisation_key = String_sihr
		trigger = {
			OR = {
				AND = {
					society_member_of = the_satanists
					religion_group = muslim
				}
				society_member_of = arab_jinn_sorcerers
			}
		}
	}
	text = {
		localisation_key = String_Qliphoth
		trigger = {
			society_member_of = the_satanists
			religion_group = jewish_group
		}
	}
	text = {
		localisation_key = String_koldovstvo
		trigger = { society_member_of = the_cold_ones }
	}
	text = {
		localisation_key = String_seiðr
		trigger = { society_member_of = the_trollcrafters }
	}
	text = {
		localisation_key = String_dark_tantras
		trigger = { society_member_of = the_cult_of_kali }
	}
	text = {
		localisation_key = String_sorcery
		trigger = { society_member_of = the_bacchants }
	}
	text = {
		localisation_key = String_vodoun_sorcery
		trigger = { society_member_of = the_vodouns }
	}
}

# Returns a an appropriate name for a demon
defined_text = {
	name = GetDWDemon
	use_first_valid = yes

	text = {
		localisation_key = String_demon
		trigger = {
			OR = {
				AND = {
					society_member_of = the_satanists

					OR = {
						religion_group = christian
						religion_group = jewish_group
						religion_openly_zun_or_reformed_trigger = yes
					}
				}

				society_member_of = cult_of_angra_mainyu

				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	text = {
		localisation_key = String_jinn
		trigger = {
			OR = {
				AND = {
					society_member_of = the_satanists
					religion_group = muslim
				}
				society_member_of = arab_jinn_sorcerers
			}
		}
	}
	text = {
		localisation_key = String_likho
		trigger = { society_member_of = the_cold_ones }
	}
	text = {
		localisation_key = String_jotun
		trigger = { society_member_of = the_trollcrafters }
	}
	text = {
		localisation_key = string_karaoglan
		trigger = { society_member_of = the_plaguebringers }
	}
	text = {
		localisation_key = String_rakshasa
		trigger = { society_member_of = the_cult_of_kali }
	}
	text = {
		localisation_key = String_satyr
		trigger = { society_member_of = the_bacchants }
	}
	text = {
		localisation_key = String_vodoun_demon
		trigger = { society_member_of = the_vodouns }
	}

	# CK2Plus
	text = {
		localisation_key = String_Dark_Spirit
		trigger = { society_member_of = the_cult_of_balor
		NOT = { has_alternate_start_parameter = { key = religion_names value = random } }
		}
	}
	text = {
		localisation_key = String_Titan
		trigger = { society_member_of = cult_of_titan
		NOT = { has_alternate_start_parameter = { key = religion_names value = random } }
		}
	}
	text = {
		localisation_key = String_Apep
		trigger = { society_member_of = cult_of_apep
		NOT = { has_alternate_start_parameter = { key = religion_names value = random } }
		}
	}
	fallback_text = {
		localisation_key = String_demon
	}
}

# Returns a an appropriate name for demons
defined_text = {
	name = GetDWDemons
	use_first_valid = yes

	text = {
		localisation_key = String_demons
		trigger = {
			OR = {
				AND = {
					society_member_of = the_satanists

					OR = {
						religion_group = christian
						religion_group = jewish_group
						religion_openly_zun_or_reformed_trigger = yes
					}
				}

				society_member_of = cult_of_angra_mainyu

				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	text = {
		localisation_key = String_jinns
		trigger = {
			OR = {
				AND = {
					society_member_of = the_satanists
					religion_group = muslim
				}
				society_member_of = arab_jinn_sorcerers
			}
		}
	}
	text = {
		localisation_key = String_likhos
		trigger = { society_member_of = the_cold_ones }
	}
	text = {
		localisation_key = String_jotnar
		trigger = { society_member_of = the_trollcrafters }
	}
	text = {
		localisation_key = string_karaoglanlar
		trigger = { society_member_of = the_plaguebringers }
	}
	text = {
		localisation_key = String_rakshasas
		trigger = { society_member_of = the_cult_of_kali }
	}
	text = {
		localisation_key = String_satyrs
		trigger = { society_member_of = the_bacchants }
	}
	text = {
		localisation_key = String_vodoun_demons
		trigger = { society_member_of = the_vodouns }
	}

	# CK2Plus
	text = {
		localisation_key = String_Dark_Spirits
		trigger = {
			OR = {
				society_member_of = the_cult_of_balor
				society_member_of = cult_of_apep
			}
		}
	}
	text = {
		localisation_key = String_Titans
		trigger = { society_member_of = cult_of_titan }
	}
	fallback_text = {
		localisation_key = String_demons
	}
}

defined_text = {
	name = GetDWMagician
	use_first_valid = yes

	text = {
		localisation_key = String_witch
		trigger = {
			is_female = yes
			OR = {
				society_member_of = the_satanists
				society_member_of = the_cult_of_balor
			}
		}
	}
	text = {
		localisation_key = String_warlock
		trigger = {
			is_female = no
			society_member_of = the_satanists
		}
	}
	text = {
		localisation_key = String_vodoun_female_worshiper
		trigger = {
			is_female = yes
			society_member_of = the_vodouns
		}
	}
	text = {
		localisation_key = String_vodoun_male_worshiper
		trigger = {
			is_female = no
			society_member_of = the_vodouns
		}
	}
	text = {
		localisation_key = String_maenad
		trigger = {
			is_female = yes
			society_member_of = the_bacchants
		}
	}
	text = {
		localisation_key = String_degenerate
		trigger = {
			is_female = no
			society_member_of = the_bacchants
		}
	}
	text = {
		localisation_key = String_koldunya
		trigger = {
			is_female = yes
			society_member_of = the_cold_ones
		}
	}
	text = {
		localisation_key = String_koldun
		trigger = {
			is_female = no
			society_member_of = the_cold_ones
		}
	}
	text = {
		localisation_key = String_seiðkona
		trigger = {
			is_female = yes
			society_member_of = the_trollcrafters
		}
	}
	text = {
		localisation_key = String_seiðmaðr
		trigger = {
			is_female = no
			society_member_of = the_trollcrafters
		}
	}
	text = {
		localisation_key = string_black_shaman
		trigger = { society_member_of = the_plaguebringers }
	}
	text = {
		localisation_key = String_dark_tantrik
		trigger = {
			society_member_of = the_cult_of_kali
		}
	}

	# CK2Plus
	text = {
		localisation_key = String_sorceror
		trigger = {
			is_female = no
			OR = {
				society_member_of = the_cult_of_balor
				society_member_of = arab_jinn_sorcerers
			}
		}
	}
	text = {
		localisation_key = String_sorceress
		trigger = {
			is_female = yes
			society_member_of = arab_jinn_sorcerers
		}
	}
	text = {
		trigger = {
			society_member_of = cult_of_angra_mainyu
			culture = persian
		}
		localisation_key = String_div
	}
	text = {
		trigger = {
			society_member_of = cult_of_angra_mainyu
			culture_group = iranian
			NOT = { culture = persian }
		}
		localisation_key = String_dew
	}
	text = {
		trigger = {
			society_member_of = cult_of_angra_mainyu
			NOT = { culture_group = iranian }
		}
		localisation_key = String_daeva
	}
	text = {
		localisation_key = String_cultist
		trigger = {
			society_member_of = cult_of_titan
			society_member_of = cult_of_apep
		}
	}
}

defined_text = {
	name = GetDWMagicianPlural
	use_first_valid = yes

	text = {
		localisation_key = String_witches
		trigger = {
			is_female = yes
			OR = {
				society_member_of = the_satanists
				society_member_of = the_cult_of_balor
			}
		}
	}
	text = {
		localisation_key = String_warlocks
		trigger = {
			is_female = no
			society_member_of = the_satanists
		}
	}
	text = {
		localisation_key = String_vodoun_female_worshipers
		trigger = {
			is_female = yes
			society_member_of = the_vodouns
		}
	}
	text = {
		localisation_key = String_vodoun_male_worshipers
		trigger = {
			is_female = no
			society_member_of = the_vodouns
		}
	}
	text = {
		localisation_key = String_maenades
		trigger = {
			is_female = yes
			society_member_of = the_bacchants
		}
	}
	text = {
		localisation_key = String_degenerates
		trigger = {
			is_female = no
			society_member_of = the_bacchants
		}
	}
	text = {
		localisation_key = String_koldunyas
		trigger = {
			is_female = yes
			society_member_of = the_cold_ones
		}
	}
	text = {
		localisation_key = String_kolduns
		trigger = {
			is_female = no
			society_member_of = the_cold_ones
		}
	}
	text = {
		localisation_key = String_seiðkonur
		trigger = {
			is_female = yes
			society_member_of = the_trollcrafters
		}
	}
	text = {
		localisation_key = String_seiðmenn
		trigger = {
			is_female = no
			society_member_of = the_trollcrafters
		}
	}
	text = {
		localisation_key = string_black_shamans
		trigger = { society_member_of = the_plaguebringers }
	}
	text = {
		localisation_key = String_dark_tantriks
		trigger = {
			society_member_of = the_cult_of_kali
		}
	}

	# CK2Plus
	text = {
		localisation_key = String_sorcerors
		trigger = {
			is_female = no
			OR = {
				society_member_of = the_cult_of_balor
				society_member_of = arab_jinn_sorcerers
			}
		}
	}
	text = {
		localisation_key = String_sorceresses
		trigger = {
			is_female = yes
			society_member_of = arab_jinn_sorcerers
		}
	}
	text = {
		trigger = {
			society_member_of = cult_of_angra_mainyu
			culture = persian
		}
		localisation_key = String_divs
	}
	text = {
		trigger = {
			society_member_of = cult_of_angra_mainyu
			culture_group = iranian
			NOT = { culture = persian }
		}
		localisation_key = String_dews
	}
	text = {
		trigger = {
			society_member_of = cult_of_angra_mainyu
			NOT = { culture_group = iranian }
		}
		localisation_key = String_daevas
	}
	text = {
		localisation_key = String_cultists
		trigger = {
			society_member_of = cult_of_titan
			society_member_of = cult_of_apep
		}
	}
}

defined_text = {
	name = GetDWExpression
	use_first_valid = yes

	text = {
		localisation_key = String_Praise_Evilgod
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}
	text = {
		localisation_key = String_Glory_to_the_Deceiver
		trigger = {
			society_member_of = the_satanists
			OR = {
				religion_group = christian
				religion_group = jewish_group
				religion_openly_zun_or_reformed_trigger = yes
			}
		}
	}
	text = {
		localisation_key = String_Glory_to_Shaitan
		trigger = {
			society_member_of = the_satanists
			religion_group = muslim
		}
	}
	text = {
		localisation_key = String_Glory_to_the_Black_God
		trigger = { society_member_of = the_cold_ones }
	}
	text = {
		localisation_key = String_Glory_to_the_Lord_of_Kali_Yuga
		trigger = { society_member_of = the_cult_of_kali }
	}
	text = {
		localisation_key = String_Glory_to_the_God_of_Death
		trigger = { society_member_of = the_plaguebringers }
	}
	text = {
		localisation_key = String_Glory_to_Hel
		trigger = { society_member_of = the_trollcrafters }
	}
	text = {
		localisation_key = String_Praise_to_Bacchus
		trigger = { society_member_of = the_bacchants }
	}
	text = {
		localisation_key = String_Praise_to_Mawu
		trigger = { society_member_of = the_vodouns }
	}

	# CK2Plus
	text = {
		localisation_key = String_Glory_to_the_Smiter
		trigger = { society_member_of = the_cult_of_balor }
	}
	text = {
		localisation_key = String_Glory_to_Chaos
		trigger = {	society_member_of = cult_of_apep }
	}
	text = {
		localisation_key = String_Glory_to_the_Deceiver
		trigger = { society_member_of = cult_of_angra_mainyu }
	}
	text = {
		localisation_key = String_Praise_the_Jinn
		trigger = { society_member_of = arab_jinn_sorcerers }
	}
	text = {
		localisation_key = String_Glory_to_the_titans
		trigger = { society_member_of = cult_of_titan }
	}
	fallback_text = {
		localisation_key = String_Praise_Evilgod
	}
}

defined_text = {
	name = GetAssassinsCrimeOutcry

	text = {
		localisation_key = String_Death_to_the_infidels
		trigger = {
			OR = {
				has_character_flag = assassins_target_war_attacker
				has_character_flag = assassins_target_war_attacker_vassal
				has_character_flag = assassins_target_war_attacker_commander
				has_character_flag = assassins_target_persecutes_shiites
			}
		}
	}
	text = {
		localisation_key = String_Grand_Master_Name_sends_herhis_regards
		trigger = {
			has_character_flag = assassins_target_marked_for_death
			event_target:grand_master = { always = yes }
		}
	}
	text = {
		localisation_key = String_Blood_for_blood
		trigger = {
			OR = {
				has_character_flag = assassins_target_killed_member
				has_character_flag = assassins_target_assaulted_member
			}
		}
	}
	text = {
		localisation_key = String_For_the_Assassins
		trigger = {
			trigger_if = {
				limit = { has_character_flag = assassins_target_marked_for_death }
				NOT = { event_target:grand_master = { always = yes } }
			}
			trigger_else = {
				NOR = {
					has_character_flag = assassins_target_war_attacker
					has_character_flag = assassins_target_war_attacker_vassal
					has_character_flag = assassins_target_war_attacker_commander
					has_character_flag = assassins_target_persecutes_shiites
					has_character_flag = assassins_target_marked_for_death
					has_character_flag = assassins_target_killed_member
					has_character_flag = assassins_target_assaulted_member
				}
			}
		}
	}
	text = {
		localisation_key = String_Requiescat_in_pace
		trigger = { culture_group = italian_group }
		weight_multiplier = { factor = 0.1 }
	}
}

# Does not work for Jain and Buddhist
defined_text = {
	name = GetMOGod

	text = {
		localisation_key = String_God
		trigger = {
			OR = {
				society_member_of = monastic_order_dominican
				society_member_of = monastic_order_benedictine
				society_member_of = monastic_order_orthodox
				society_member_of = monastic_order_nestorian
				society_member_of = monastic_order_monophysite
				society_member_of = monastic_order_apostolic
			}
			NOT = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	text = {
		localisation_key = String_Vishnu
		trigger = {
			OR = {
				trait = smartist_hindu
				trait = vaishnavist_hindu
			}
			society_member_of = monastic_order_hindu
			NOT = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	text = {
		localisation_key = String_Devi
		trigger = {
			OR = {
				trait = smartist_hindu
				trait = shaktist_hindu
			}
			society_member_of = monastic_order_hindu
			NOT = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	text = {
		localisation_key = String_Shiva
		trigger = {
			OR = {
				trait = smartist_hindu
				trait = shaivist_hindu
			}
			society_member_of = monastic_order_hindu
			NOT = {
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	text = {
		localisation_key = string_god_random
		trigger = {
			OR = {
				society_member_of = monastic_order_stoics
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
}

defined_text = {
	name = GetMOSaint
	use_first_valid = yes

	text = {
		localisation_key = string_saint_generic
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}
	text = {
		localisation_key = String_Saint_Benedict
		trigger = { society_member_of = monastic_order_benedictine }
	}
	text = {
		localisation_key = String_Saint_Dominic
		trigger = { society_member_of = monastic_order_dominican }
	}
	text = {
		localisation_key = String_Saint_Basil
		trigger = { society_member_of = monastic_order_orthodox }
	}
	text = {
		localisation_key = String_Saint_Abraham
		trigger = { society_member_of = monastic_order_nestorian }
	}
	text = {
		localisation_key = String_Saint_Anthony
		trigger = { society_member_of = monastic_order_monophysite }
	}
	text = {
		localisation_key = String_Buddha
		trigger = { society_member_of = monastic_order_buddhist }
	}
	text = {
		localisation_key = String_Adi_Shankara
		trigger = { society_member_of = monastic_order_hindu }
	}
	text = {
		localisation_key = String_Acharya_Kundakunda
		trigger = { society_member_of = monastic_order_jain }
	}
	text = {
		localisation_key = String_Zeno
		trigger = { society_member_of = monastic_order_stoics }
	}

	# CK2Plus
	text = {
		localisation_key = String_Tonpa_Shenrab
		trigger = { society_member_of = monastic_order_bon }
	}
	text = {
		localisation_key = String_Saint_James
		trigger = { society_member_of = monastic_order_apostolic }
	}
}

defined_text = {
	name = GetMOBuilding
	use_first_valid = yes

	text = {
		localisation_key = String_monastery
		trigger = {
			OR = {
				society_member_of = monastic_order_dominican
				society_member_of = monastic_order_benedictine
				society_member_of = monastic_order_orthodox
				society_member_of = monastic_order_nestorian
				society_member_of = monastic_order_monophysite
				society_member_of = monastic_order_apostolic
			}
		}
	}
	text = {
		localisation_key = String_matha
		trigger = { society_member_of = monastic_order_hindu }
	}
	text = {
		localisation_key = String_agora
		trigger = { society_member_of = monastic_order_stoics }
	}
	text = {
		localisation_key = String_temple
		trigger = {
			OR = {
				society_member_of = monastic_order_jain
				society_member_of = monastic_order_buddhist
				society_member_of = monastic_order_bon
			}
		}
	}
}

defined_text = {
	name = GetMOCode
	use_first_valid = yes

	text = {
		localisation_key = string_the_code
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}
	text = {
		localisation_key = String_the_Rule_of_Saint_Benedict
		trigger = { society_member_of = monastic_order_benedictine }
	}
	text = {
		localisation_key = String_the_Rule_of_Saint_Augustine
		trigger = { society_member_of = monastic_order_dominican }
	}
	text = {
		localisation_key = String_the_Rule_of_Saint_Basil
		trigger = { society_member_of = monastic_order_orthodox }
	}
	text = {
		localisation_key = String_the_Rule_of_Saint_Abraham
		trigger = { society_member_of = monastic_order_nestorian }
	}
	text = {
		localisation_key = String_the_Rule_of_Saint_Anthony
		trigger = { society_member_of = monastic_order_monophysite }
	}
	text = {
		localisation_key = String_the_Noble_Eightfold_Path
		trigger = { society_member_of = monastic_order_buddhist }
	}
	text = {
		localisation_key = String_the_four_Purusartha
		trigger = { society_member_of = monastic_order_hindu }
	}
	text = {
		localisation_key = String_the_Anuvrata
		trigger = { society_member_of = monastic_order_jain }
	}
	text = {
		localisation_key = String_the_Aretai
		trigger = { society_member_of = monastic_order_stoics }
	}

	# CK2Plus
	text = {
		localisation_key = String_the_Rule_of_Saint_James
		trigger = { society_member_of = monastic_order_apostolic }
	}
	text = {
		localisation_key = String_the_Nine_Vehicles
		trigger = { society_member_of = monastic_order_bon }
	}
}

defined_text = {
	name = GetMOPenanceMeditation
	use_first_valid = yes

	text = {
		localisation_key = String_doing_penance
		trigger = { is_christian_monastic_member_trigger = yes }
	}
	text = {
		localisation_key = String_in_meditation
		trigger = {
			OR = {
				society_member_of = monastic_order_stoics
				is_dharmic_monastic_member_trigger = yes
			}
		}
	}
}

defined_text = {
	name = GetMOGreeting
	use_first_valid = yes

	text = {
		localisation_key = String_Peace_be_upon_you
		trigger = {
			OR = {
				society_member_of = monastic_order_stoics
				is_dharmic_monastic_member_trigger = yes

				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	text = {
		localisation_key = String_Gods_blessing_upon_thee
		trigger = {
			is_christian_monastic_member_trigger = yes
		}
	}
}

defined_text = {
	name = GetMOFarewell
	use_first_valid = yes

	text = {
		localisation_key = String_Go_with_God_random
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}
	text = {
		localisation_key = String_Go_with_God
		trigger = {
			is_christian_monastic_member_trigger = yes
		}
	}
	text = {
		localisation_key = String_Shubhaste_panthanah_santu
		trigger = {
			is_dharmic_monastic_member_trigger = yes
		}
	}
	text = {
		localisation_key = String_Go_in_peace
		trigger = {
			society_member_of = monastic_order_stoics
		}
	}
}

defined_text = {
	name = GetSRGreeting
	use_first_valid = yes

	text = {
		localisation_key = String_Peace_be_upon_you
		trigger = {
			OR = {
				is_indian_secret_religious_society_member_trigger = yes
				is_bon_secret_religious_society_member_trigger = yes
				is_taoist_secret_religious_society_member_trigger = yes

				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
	}
	text = {
		localisation_key = String_Gods_blessing_upon_thee
		trigger = {
			OR = {
				is_christian_secret_religious_society_member_trigger = yes
				secret_religion = yazidi
				secret_religion = druze
				secret_religion = mazdaki
				secret_religion = manichean
			}
		}
	}
	text = {
		localisation_key = String_As_salam_alaykum
		trigger = {
			is_muslim_secret_religious_society_member_trigger = yes
			NOR = {
				secret_religion = yazidi
				secret_religion = druze
			}
		}
	}
	text = {
		localisation_key = String_Shalom_aleikhem
		trigger = { is_jewish_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Hamazor_hama_asho_bed
		trigger = { is_zoroastrian_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Allfathers_strength
		trigger = {
			OR = {
				is_norse_secret_religious_society_member_trigger = yes
				is_german_secret_religious_society_member_trigger = yes
			}
		}
	}
	text = {
		localisation_key = String_Svarogs_blessings
		trigger = { is_slavic_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Ancestors_blessings
		trigger = { is_tengri_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Dievas_blessings
		trigger = { is_baltic_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Ukkos_blessings
		trigger = { is_finnish_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Ancestors_blessings
		trigger = { is_west_african_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Zuns_blessings
		trigger = { is_zun_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Huitzilopochtlis_strength_to_you
		trigger = { is_aztec_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Gods_protect_you
		trigger = { is_hellenic_secret_religious_society_member_trigger = yes }
	}

	# CK2Plus
	text = {
		localisation_key = String_Dons_strength
		trigger = { is_celtic_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Amon_strength
		trigger = { is_egyptian_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Allat_strength
		trigger = { is_arab_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Ammon_strength
		trigger = { is_berber_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Elelyon_strength
		trigger = { is_canaan_pagan_secret_religious_society_member_trigger = yes }
	}
}

defined_text = {
	name = GetSRFarewell
	use_first_valid = yes

	text = {
		localisation_key = String_Go_with_God_random
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}
	text = {
		localisation_key = String_Go_with_God
		trigger = {
			OR = {
				is_christian_secret_religious_society_member_trigger = yes
				secret_religion = yazidi
				secret_religion = druze
				secret_religion = mazdaki
				secret_religion = manichean
			}
		}
	}
	text = {
		localisation_key = String_May_Allah_guide_you
		trigger = {
			is_muslim_secret_religious_society_member_trigger = yes
			NOR = {
				secret_religion = yazidi
				secret_religion = druze
			}
		}
	}
	text = {
		localisation_key = String_Shubhaste_panthanah_santu
		trigger = { is_indian_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_May_Yehovah_guide_you
		trigger = { is_jewish_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Humata_Hukta_Huvarashta
		trigger = { is_zoroastrian_secret_religious_society_member_trigger = yes }
	}

	text = {
		localisation_key = String_May_the_Gods_protect_you
		trigger = {
			OR = {
				is_norse_secret_religious_society_member_trigger = yes
				is_hellenic_secret_religious_society_member_trigger = yes
				is_slavic_secret_religious_society_member_trigger = yes
				is_baltic_secret_religious_society_member_trigger = yes
				is_finnish_secret_religious_society_member_trigger = yes

				# CK2Plus
				is_german_secret_religious_society_member_trigger = yes
				is_celtic_secret_religious_society_member_trigger = yes
				is_egyptian_secret_religious_society_member_trigger = yes
				is_arab_secret_religious_society_member_trigger = yes
				is_berber_secret_religious_society_member_trigger = yes
				is_canaan_pagan_secret_religious_society_member_trigger = yes
			}
		}
	}

	text = {
		localisation_key = String_May_the_Ancestors_guide_you
		trigger = {
			OR = {
				is_bon_secret_religious_society_member_trigger = yes
				is_taoist_secret_religious_society_member_trigger = yes
				is_tengri_secret_religious_society_member_trigger = yes
				is_west_african_secret_religious_society_member_trigger = yes
			}
		}
	}

	text = {
		localisation_key = String_May_Zun_illuminate_your_path
		trigger = { is_zun_secret_religious_society_member_trigger = yes }
	}

	text = {
		localisation_key = String_Fire_and_blood
		trigger = { is_aztec_secret_religious_society_member_trigger = yes }
	}
}

defined_text = {
	name = GetSRTrinketSymbol
	use_first_valid = yes

	text = {
		localisation_key = String_god_symbol
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}
	text = {
		localisation_key = String_Cross
		trigger = { is_christian_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_crescent
		trigger = { is_muslim_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_six_pointed_star
		trigger = { is_jewish_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_figurine_of_Buddha
		trigger = { true_religion = buddhist }
	}
	text = {
		localisation_key = String_figurine_of_Ganesha
		trigger = { true_religion = hindu }
	}
	text = {
		localisation_key = String_figurine_of_jain_god
		trigger = { true_religion = jain }
	}
	text = {
		localisation_key = String_fire_symbol
		trigger = { true_religion_group = zoroastrian_group }
	}
	text = {
		localisation_key = String_Thors_hammer
		trigger = { is_norse_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_hatchet_amulet
		trigger = { is_slavic_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_world_tree_symbol
		trigger = { is_baltic_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_life_tree_symbol
		trigger = { is_tengri_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Ukkos_hammer
		trigger = { is_finnish_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_ancestors_symbol
		trigger = {
			OR = {
				is_west_african_secret_religious_society_member_trigger = yes
				is_hellenic_secret_religious_society_member_trigger = yes

				# CK2Plus
				is_egyptian_secret_religious_society_member_trigger = yes
				is_arab_secret_religious_society_member_trigger = yes
				is_berber_secret_religious_society_member_trigger = yes
				is_canaan_pagan_secret_religious_society_member_trigger = yes
			}
		}
	}
	text = {
		localisation_key = String_sun_symbol
		trigger = { is_zun_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Fire_and_blood
		trigger = { is_aztec_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Animal_made_of_bread
		trigger = { is_bon_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Yinyang_symbol
		trigger = { is_taoist_secret_religious_society_member_trigger = yes }
	}

	# CK2Plus
	text = {
		localisation_key = String_Thunaers_hammer
		trigger = { is_german_secret_religious_society_member_trigger = yes }
	}
	text = {
		localisation_key = String_Lughs_spear
		trigger = { is_celtic_secret_religious_society_member_trigger = yes }
	}
	fallback_text = {
		localisation_key = String_god_symbol
	}
}

# Hermes Tirismegistus or other suitably old person spreading arcane and ancient knowledge
defined_text = {
	name = GetHermesThriceBlessed
	use_first_valid = yes

	text = {
		trigger = { religion_group = muslim }
		localisation_key = String_idris
	}
	fallback_text = {
		localisation_key = String_hermes_trismegistus
	}
}

defined_text = {
	name = GetCollaboratorHermeticsRank
	use_first_valid = yes

	text = {
		trigger = {
			is_liege_of = event_target:hermetic_collaborator
			event_target:hermetic_collaborator = { has_minor_title = title_hermetics_apprentice }
		}
		localisation_key = String_GetMasterMistress
	}
	fallback_text = {
		localisation_key = String_GetSocietyRank
	}
}

### RELIGION ###

# Returns a suitable name for the house of worship of your religion (WIP)
defined_text = {
	name = GetHouseOfWorship
	use_first_valid = yes

	text = {
		localisation_key = GetHouseOfWorship_Christian
		trigger = { religion_group = christian }
	}
	text = {
		localisation_key = GetHouseOfWorship_Muslim
		trigger = { religion_group = muslim }
	}
	text = {
		localisation_key = GetHouseOfWorship_Pagan
		trigger = { religion_group = pagan_group }
	}
	text = {
		localisation_key = GetHouseOfWorship_Zoroastrian
		trigger = { religion_group = zoroastrian_group }
	}
	text = {
		localisation_key = GetHouseOfWorship_Jewish
		trigger = { religion_group = jewish_group }
	}
	text = {
		localisation_key = GetHouseOfWorship_Hindu
		trigger = { religion = hindu }
	}
	text = {
		localisation_key = GetHouseOfWorship_Buddhist
		trigger = { religion = buddhist }
	}
	text = {
		localisation_key = GetHouseOfWorship_Jain
		trigger = { religion = jain }
	}
	text = {
		localisation_key = GetHouseOfWorship_Taoist
		trigger = { religion = taoist }
	}
	fallback_text = {
		localisation_key = GetHouseOfWorship_Pagan
	}
}

# Returns a suitable name for the house of worship of your religion (WIP)
defined_text = {
	name = GetHouseOfWorshipCap
	use_first_valid = yes

	text = {
		localisation_key = string_Church
		trigger = { religion_group = christian }
	}
	text = {
		localisation_key = string_Mosque
		trigger = { religion_group = muslim }
	}
	text = {
		localisation_key = String_Temple
		trigger = { religion_group = pagan_group }
	}
	text = {
		localisation_key = String_Temple
		trigger = { religion_group = zoroastrian_group }
	}
	text = {
		localisation_key = String_Temple
		trigger = { religion_group = jewish_group }
	}
	text = {
		localisation_key = String_Temple
		trigger = { religion = hindu }
	}
	text = {
		localisation_key = String_Temple
		trigger = { religion = buddhist }
	}
	text = {
		localisation_key = String_Temple
		trigger = { religion = jain }
	}
	text = {
		localisation_key = String_Temple
		trigger = { religion = taoist }
	}
	fallback_text = {
		localisation_key = String_Temple
	}
}

# Returns a suitable name for a common rite in the character's religion
defined_text = {
	name = GetReligiousRite
	use_first_valid = yes

	text = {
		localisation_key = String_mass
		trigger = { religion_group = christian }
	}
	text = {
		localisation_key = String_prayer
		trigger = { religion_group = muslim }
	}
	text = {
		localisation_key = String_worship
		trigger = { religion_group = pagan_group }
	}
	text = {
		localisation_key = String_worship
		trigger = { religion_group = zoroastrian_group }
	}
	text = {
		localisation_key = String_prayer
		trigger = { religion_group = jewish_group }
	}
	text = {
		localisation_key = String_prayer
		trigger = { religion_group = indian_group }
	}
}

# Returns an appropriate word for a warrior/soldier depending on religion (and culture)
defined_text = {
	name = GetReligionWarrior
	use_first_valid = yes

	text = {
		localisation_key = String_druzhinniki
		trigger = {
			OR = {
				religion_openly_slavic_or_reformed_trigger = yes
				culture_group = east_slavic
				culture = polish
			}
		}
	}
	text = {
		localisation_key = String_huscarl
		trigger = {
			OR = {
				religion_openly_norse_or_reformed_trigger = yes
				religion_openly_german_or_reformed_trigger = yes

				trigger_if = {
					limit = { is_tribal = yes }

					OR = {
						culture_group = north_germanic
						culture = anglo_saxon
						culture = saxon
					}
				}
			}
		}
	}
	text = {
		localisation_key = String_spahi
		trigger = {
			culture_group = iranian
		}
	}
	text = {
		localisation_key = String_sainik
		trigger = {
			OR = {
				culture_group = indo_aryan_group
				culture_group = dravidian_group
			}
		}
	}
	text = {
		localisation_key = String_kheshig
		trigger = {
			culture_group = altaic
		}
	}
	text = {
		localisation_key = String_man_at_arm
		trigger = {
			religion = catholic
			is_tribal = no
			is_nomadic = no
		}
	}
	text = {
		localisation_key = String_ghazi
		trigger = {
			religion_group = muslim
		}
	}
	fallback_text = {
		localisation_key = String_warrior
	}
}

# Returns an appropriate word for a warrior/soldier depending on religion (and culture)
defined_text = {
	name = GetReligionWarriorPlural
	use_first_valid = yes

	text = {
		localisation_key = String_druzhinniki
		trigger = {
			OR = {
				religion_openly_slavic_or_reformed_trigger = yes
				culture_group = east_slavic
				culture = polish
			}
		}
	}
	text = {
		localisation_key = String_huscarls
		trigger = {
			OR = {
				religion_openly_norse_or_reformed_trigger = yes
				religion_openly_german_or_reformed_trigger = yes

				trigger_if = {
					limit = { is_tribal = yes }

					OR = {
						culture_group = north_germanic
						culture = anglo_saxon
						culture = saxon
					}
				}
			}
		}
	}
	text = {
		localisation_key = String_spahis
		trigger = {
			culture_group = iranian
		}
	}
	text = {
		localisation_key = String_sainikon
		trigger = {
			OR = {
				culture_group = indo_aryan_group
				culture_group = dravidian_group
			}
		}
	}
	text = {
		localisation_key = String_kheshig
		trigger = {
			culture_group = altaic
		}
	}
	text = {
		localisation_key = String_men_at_arms
		trigger = {
			religion = catholic
			is_tribal = no
			is_nomadic = no
		}
	}
	text = {
		localisation_key = String_ghazis
		trigger = {
			religion_group = muslim
		}
	}
	fallback_text = {
		localisation_key = String_warriors
	}
}

defined_text = {
	name = GetReligiousPerson
	use_first_valid = yes

	text = {
		localisation_key = string_worshiper
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}
	text = {
		localisation_key = String_Catholic
		trigger = {
			religion = catholic
		}
	}
	text = {
		localisation_key = String_Christian
		trigger = {
			religion_group = christian
			NOT = { religion = catholic }
		}
	}
	text = {
		localisation_key = String_Muslim
		trigger = {
			religion_group = muslim
		}
	}
	text = {
		localisation_key = String_Jew
		trigger = {
			religion_group = jewish_group
		}
	}
	text = {
		localisation_key = String_Zoroastrian
		trigger = {
			religion_group = zoroastrian_group
		}
	}
	text = {
		localisation_key = String_Buddhist
		trigger = {
			religion = buddhist
		}
	}
	text = {
		localisation_key = String_Jain
		trigger = {
			religion = jain
		}
	}
	text = {
		localisation_key = String_Hindu
		trigger = {
			religion = hindu
		}
	}
	text = {
		localisation_key = String_Taoist
		trigger = {
			religion = taoist
		}
	}
	text = {
		localisation_key = String_Norse
		trigger = {
			religion_openly_norse_or_reformed_trigger = yes
		}
	}
	text = {
		localisation_key = String_Slav
		trigger = {
			religion_openly_slavic_or_reformed_trigger = yes
		}
	}
	text = {
		localisation_key = String_Romuvan
		trigger = {
			religion_openly_baltic_or_reformed_trigger = yes
		}
	}
	text = {
		localisation_key = String_Finn
		trigger = {
			religion_openly_finnish_or_reformed_trigger = yes
		}
	}
	text = {
		localisation_key = String_West_African
		trigger = {
			religion_openly_west_african_or_reformed_trigger = yes
		}
	}
	text = {
		localisation_key = String_Tengri
		trigger = {
			religion_openly_tengri_or_reformed_trigger = yes
		}
	}
	text = {
		localisation_key = String_Zun
		trigger = {
			religion_openly_zun_or_reformed_trigger = yes
		}
	}

	# CK2Plus
	text = {
		localisation_key = String_GermanPagan
		trigger = { religion_openly_german_or_reformed_trigger = yes }
	}
	text = {
		localisation_key = String_CelticPagan
		trigger = { religion_openly_celtic_or_reformed_trigger = yes }
	}
}

defined_text = {
	name = GetArtifactSource
	use_first_valid = yes

	text = {
		localisation_key = String_saint
		trigger = {
			religion_group = christian
		}
	}
	text = {
		localisation_key = String_famous_holy_man
		trigger = {
			OR = {
				religion_group = zoroastrian_group
				religion_group = indian_group
				religion_group = jewish_group
				religion_group = muslim
			}
		}
	}
	text = {
		localisation_key = String_great_hero
		trigger = {
			religion_group = pagan_group
		}
	}
}

defined_text = {
	name = GetArtifactSourceCap
	use_first_valid = yes

	text = {
		localisation_key = String_Saint_cap
		trigger = {
			religion_group = christian
		}
	}
	text = {
		localisation_key = String_Famous_Holy_Man_cap
		trigger = {
			OR = {
				religion_group = zoroastrian_group
				religion_group = indian_group
				religion_group = jewish_group
				religion_group = muslim
			}
		}
	}
	text = {
		localisation_key = String_Great_Hero_cap
		trigger = {
			religion_group = pagan_group
		}
	}
}

defined_text = { # WIP
	name = GetPrayers
	use_first_valid = yes

	text = {
		localisation_key = String_prayers
		trigger = { religion_group = christian }
	}
	text = {
		localisation_key = String_mantras
		trigger = { religion_group = indian_group }
	}
}

defined_text = {
	name = GetTrueReligionGroupPersons
	use_first_valid = yes

	text = {
		localisation_key = string_relgroup_random
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}
	text = {
		localisation_key = String_Christians
		trigger = { true_religion_group = christian }
	}
	text = {
		localisation_key = String_Muslims
		trigger = { true_religion_group = muslim }
	}
	text = {
		localisation_key = String_pagans
		trigger = { true_religion_group = pagan_group }
	}
	text = {
		localisation_key = String_Zoroastrians
		trigger = { true_religion_group = zoroastrian_group }
	}
	text = {
		localisation_key = String_Jews
		trigger = { true_religion_group = jewish_group }
	}
	text = {
		localisation_key = String_Indians
		trigger = { true_religion_group = indian_group }
	}
}

defined_text = {
	name = GetTrueReligionAdjective
	use_first_valid = yes

	text = {
		localisation_key = String_adherent_random
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}
	text = {
		localisation_key = String_Catholic
		trigger = { true_religion = catholic }
	}
	text = {
		localisation_key = String_Cathar
		trigger = { true_religion = cathar }
	}
	text = {
		localisation_key = String_Fraticelli
		trigger = { true_religion = fraticelli }
	}
	text = {
		localisation_key = String_Waldesian
		trigger = { true_religion = waldensian }
	}
	text = {
		localisation_key = String_Lollard
		trigger = { true_religion = lollard }
	}
	text = {
		localisation_key = String_Orthodox
		trigger = { true_religion = orthodox }
	}
	text = {
		localisation_key = String_Bogomilist
		trigger = { true_religion = bogomilist }
	}
	text = {
		localisation_key = String_Monothelite
		trigger = { true_religion = monothelite }
	}
	text = {
		localisation_key = String_Iconoclast
		trigger = { true_religion = iconoclast }
	}
	text = {
		localisation_key = String_Paulician
		trigger = { true_religion = paulician }
	}
	text = {
		localisation_key = String_Miaphysite
		trigger = { true_religion = miaphysite }
	}
	text = {
		localisation_key = String_Monophysite
		trigger = { true_religion = monophysite }
	}
	text = {
		localisation_key = String_Nestorian
		trigger = { true_religion = nestorian }
	}
	text = {
		localisation_key = String_Messalian
		trigger = { true_religion = messalian }
	}
	text = {
		localisation_key = String_Sunni
		trigger = { true_religion = sunni }
	}
	text = {
		localisation_key = String_Zikri
		trigger = { true_religion = zikri }
	}
	text = {
		localisation_key = String_Yazidi
		trigger = { true_religion = yazidi }
	}
	text = {
		localisation_key = String_Shia
		trigger = { true_religion = shiite }
	}
	text = {
		localisation_key = String_Druze
		trigger = { true_religion = druze }
	}
	text = {
		localisation_key = String_Hurufi
		trigger = { true_religion = hurufi }
	}
	text = {
		localisation_key = String_Ibadi
		trigger = { true_religion = ibadi }
	}
	text = {
		localisation_key = String_Kharijite
		trigger = { true_religion = kharijite }
	}
	text = {
		localisation_key = String_Jewish
		trigger = { true_religion = jewish }
	}
	text = {
		localisation_key = String_Samaritan
		trigger = { true_religion = samaritan }
	}
	text = {
		localisation_key = String_Karaite
		trigger = { true_religion = karaite }
	}
	text = {
		localisation_key = String_Zoroastrian
		trigger = { true_religion = zoroastrian }
	}
	text = {
		localisation_key = String_Mazdaki
		trigger = { true_religion = mazdaki }
	}
	text = {
		localisation_key = String_Manichaean
		trigger = { true_religion = manichaean }
	}
	text = {
		localisation_key = String_Hindu
		trigger = { true_religion = hindu }
	}
	text = {
		localisation_key = String_Buddhist
		trigger = { true_religion = buddhist }
	}
	text = {
		localisation_key = String_Jain
		trigger = { true_religion = jain }
	}
	text = {
		localisation_key = String_Norse
		trigger = { true_norse_religion_trigger = yes }
	}
	text = {
		localisation_key = String_Slavic
		trigger = { true_slavic_religion_trigger = yes }
	}
	text = {
		localisation_key = String_Tengri
		trigger = { true_tengri_religion_trigger = yes }
	}
	text = {
		localisation_key = String_Romuva
		trigger = { true_baltic_religion_trigger = yes }
	}
	text = {
		localisation_key = String_Suomenusko
		trigger = { true_finnish_religion_trigger = yes }
	}
	text = {
		localisation_key = String_West_African
		trigger = { true_west_african_religion_trigger = yes }
	}
	text = {
		localisation_key = String_Zun
		trigger = { true_zun_religion_trigger = yes }
	}
	text = {
		localisation_key = String_Aztec
		trigger = { true_aztec_religion_trigger = yes }
	}
	text = {
		localisation_key = khurmazta
		trigger = { true_religion = khurmazta }
	}
	text = {
		localisation_key = String_bon
		trigger = { true_bon_religion_trigger = yes }
	}
	text = {
		localisation_key = String_hellenic_pagan
		trigger = { true_hellenic_religion_trigger = yes }
	}
	text = {
		localisation_key = taoist
		trigger = { true_religion = taoist }
	}

	# CK2Plus
	text = {
		localisation_key = String_GermanPagan
		trigger = { true_german_religion_trigger = yes }
	}
	text = {
		localisation_key = String_CelticPagan
		trigger = { true_celtic_religion_trigger = yes }
	}
	text = { # Generic Pagan fallback, TODO: Give each Plus pagan religion a proper entry
		localisation_key = String_Pagan
		trigger = { true_religion_group = pagan_group }
	}
}

defined_text = {
	name = GetTrueReligionAdherent
	use_first_valid = yes

	text = {
		localisation_key = String_adherent_random
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}
	text = {
		localisation_key = String_Catholic
		trigger = { true_religion = catholic }
	}
	text = {
		localisation_key = String_Orthodox_Christian
		trigger = { true_religion = orthodox }
	}
	text = {
		localisation_key = cathar
		trigger = { true_religion = cathar }
	}
	text = {
		localisation_key = fraticelli
		trigger = { true_religion = fraticelli }
	}
	text = {
		localisation_key = waldensian
		trigger = { true_religion = waldensian }
	}
	text = {
		localisation_key = lollard
		trigger = { true_religion = lollard }
	}
	text = {
		localisation_key = bogomilist
		trigger = { true_religion = bogomilist }
	}
	text = {
		localisation_key = monothelite
		trigger = { true_religion = monothelite }
	}
	text = {
		localisation_key = iconoclast
		trigger = { true_religion = iconoclast }
	}
	text = {
		localisation_key = paulician
		trigger = { true_religion = paulician }
	}
	text = {
		localisation_key = miaphysite
		trigger = { true_religion = miaphysite }
	}
	text = {
		localisation_key = monophysite
		trigger = { true_religion = monophysite }
	}
	text = {
		localisation_key = nestorian
		trigger = { true_religion = nestorian }
	}
	text = {
		localisation_key = messalian
		trigger = { true_religion = messalian }
	}
	text = {
		localisation_key = String_Sunni
		trigger = { true_religion = sunni }
	}
	text = {
		localisation_key = zikri
		trigger = { true_religion = zikri }
	}
	text = {
		localisation_key = yazidi
		trigger = { true_religion = yazidi }
	}
	text = {
		localisation_key = String_Shia
		trigger = { true_religion = shiite }
	}
	text = {
		localisation_key = druze
		trigger = { true_religion = druze }
	}
	text = {
		localisation_key = hurufi
		trigger = { true_religion = hurufi }
	}
	text = {
		localisation_key = ibadi
		trigger = { true_religion = ibadi }
	}
	text = {
		localisation_key = kharijite
		trigger = { true_religion = kharijite }
	}
	text = {
		localisation_key = String_Jew
		trigger = { true_religion = jewish }
	}
	text = {
		localisation_key = samaritan
		trigger = { true_religion = samaritan }
	}
	text = {
		localisation_key = karaite
		trigger = { true_religion = karaite }
	}
	text = {
		localisation_key = String_Zoroastrian
		trigger = { true_religion = zoroastrian }
	}
	text = {
		localisation_key = mazdaki
		trigger = { true_religion = mazdaki }
	}
	text = {
		localisation_key = manichaean
		trigger = { true_religion = manichaean }
	}
	text = {
		localisation_key = String_Hindu
		trigger = { true_religion = hindu }
	}
	text = {
		localisation_key = String_Buddhist
		trigger = { true_religion = buddhist }
	}
	text = {
		localisation_key = String_Jain
		trigger = { true_religion = jain }
	}
	text = {
		localisation_key = String_Norse_Follower
		trigger = { true_religion = norse_pagan_reformed }
	}
	text = {
		localisation_key = norse_pagan
		trigger = { true_religion = norse_pagan }
	}
	text = {
		localisation_key = String_Slav
		trigger = { true_religion = slavic_pagan_reformed }
	}
	text = {
		localisation_key = slavic_pagan
		trigger = { true_religion = slavic_pagan }
	}
	text = {
		localisation_key = String_Tengri
		trigger = { true_religion = tengri_pagan_reformed }
	}
	text = {
		localisation_key = tengri_pagan
		trigger = { true_religion = tengri_pagan }
	}
	text = {
		localisation_key = String_Romuvan
		trigger = { true_religion = baltic_pagan_reformed }
	}
	text = {
		localisation_key = baltic_pagan
		trigger = { true_religion = baltic_pagan }
	}
	text = {
		localisation_key = String_Suomenusko_Follower
		trigger = { true_religion = finnish_pagan_reformed }
	}
	text = {
		localisation_key = finnish_pagan
		trigger = { true_religion = finnish_pagan }
	}
	text = {
		localisation_key = String_West_African
		trigger = { true_religion = west_african_pagan_reformed }
	}
	text = {
		localisation_key = west_african_pagan
		trigger = { true_religion = west_african_pagan }
	}
	text = {
		localisation_key = String_Zunist
		trigger = { true_religion = zun_pagan_reformed }
	}
	text = {
		localisation_key = zun_pagan
		trigger = { true_religion = zun_pagan }
	}
	text = {
		localisation_key = khurmazta
		trigger = { true_religion = khurmazta }
	}
	text = {
		localisation_key = String_bon
		trigger = { true_bon_religion_trigger = yes }
	}
	text = {
		localisation_key = aztec_pagan_reformed
		trigger = { true_religion = aztec_pagan_reformed }
	}
	text = {
		localisation_key = aztec_pagan
		trigger = { true_religion = aztec_pagan }
	}
	text = {
		localisation_key = String_hellenic_follower
		trigger = { true_hellenic_religion_trigger = yes }
	}
	text = {
		localisation_key = taoist
		trigger = { true_religion = taoist }
	}

	# CK2Plus
	text = {
		localisation_key = String_German_Follower
		trigger = { true_german_religion_trigger = yes }
	}
	text = {
		localisation_key = String_Celtic_Follower
		trigger = { true_celtic_religion_trigger = yes }
	}
	text = { # Generic Pagan fallback, TODO: Give each Plus pagan religion a proper entry
		localisation_key = String_Pagan
		trigger = { true_religion_group = pagan_group }
	}
}

# TODO: Probably not necessary, consider using [some_character_scope.TrueReligion.GetScriptureName]
# Also doesn't consider alt starts
defined_text = {
	name = GetTrueReligionScriptureName
	use_first_valid = yes

	text = {
		localisation_key = String_Bible
		trigger = {
			true_religion_group = christian
			NOT = { true_religion = messalian }
		}
	}
	text = {
		localisation_key = String_Asceticus
		trigger = { true_religion = messalian }
	}
	text = {
		localisation_key = String_Koran
		trigger = {
			true_religion_group = muslim
			NOR = {
				true_religion = yazidi
				true_religion = druze
			}
		}
	}
	text = {
		localisation_key = String_Book_of_Illumination
		trigger = { true_religion = yazidi }
	}
	text = {
		localisation_key = String_Epistles_of_Wisdom
		trigger = { true_religion = druze }
	}
	text = {
		localisation_key = String_Torah
		trigger = { true_religion_group = jewish_group }
	}
	text = {
		localisation_key = String_Gathas
		trigger = {
			true_religion_group = zoroastrian_group
			NOT = { true_religion = mazdaki }
		}
	}
	text = {
		localisation_key = String_Great_Secret
		trigger = { true_religion = mazdaki }
	}
	text = {
		localisation_key = String_Mahabharata
		trigger = { true_religion = hindu }
	}
	text = {
		localisation_key = String_Buddhacavana
		trigger = { true_religion = buddhist }
	}
	text = {
		localisation_key = String_Mahabharata
		trigger = { true_religion = jain }
	}
	text = {
		localisation_key = String_Sagas
		trigger = {
			OR = {
				true_norse_religion_trigger = yes
				true_german_religion_trigger = yes
			}
		}
	}
	text = {
		localisation_key = String_Legends
		trigger = {
			true_religion_group = pagan_group
			true_norse_religion_trigger = no
		}
	}
	text = {
		localisation_key = String_Legends
		trigger = { true_hellenic_religion_trigger = yes }
	}
	text = {
		localisation_key = THE_GATHAS
		trigger = { true_religion = khurmazta }
	}
	text = {
		localisation_key = MDODUS
		trigger = { true_bon_religion_trigger = yes }
	}
	text = {
		localisation_key = TAO_TE_CHING
		trigger = { true_religion = taoist }
	}
}

defined_text = {
	name = GetTrueReligionPerson
	use_first_valid = yes

	text = {
		localisation_key = String_adherent_random
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}
	text = {
		localisation_key = String_Catholic
		trigger = { true_religion = catholic }
	}
	text = {
		localisation_key = String_Christian
		trigger = {
			true_religion_group = christian
			NOT = { true_religion = catholic }
		}
	}
	text = {
		localisation_key = String_Muslim
		trigger = { true_religion_group = muslim }
	}
	text = {
		localisation_key = String_Jew
		trigger = { true_religion_group = jewish_group }
	}
	text = {
		localisation_key = String_Zoroastrian
		trigger = { true_religion_group = zoroastrian_group }
	}
	text = {
		localisation_key = String_Buddhist
		trigger = { true_religion = buddhist }
	}
	text = {
		localisation_key = String_Jain
		trigger = { true_religion = jain }
	}
	text = {
		localisation_key = String_Hindu
		trigger = { true_religion = hindu }
	}
	text = {
		localisation_key = String_Norse
		trigger = { true_norse_religion_trigger = yes }
	}
	text = {
		localisation_key = String_Romuvan
		trigger = { true_baltic_religion_trigger = yes }
	}
	text = {
		localisation_key = String_Slav
		trigger = { true_slavic_religion_trigger = yes }
	}
	text = {
		localisation_key = String_Finn
		trigger = { true_finnish_religion_trigger = yes }
	}
	text = {
		localisation_key = String_Tengri
		trigger = { true_tengri_religion_trigger = yes }
	}
	text = {
		localisation_key = String_West_African
		trigger = { true_west_african_religion_trigger = yes }
	}
	text = {
		localisation_key = String_Zun
		trigger = { true_zun_religion_trigger = yes }
	}
	text = {
		localisation_key = String_Aztec
		trigger = { true_aztec_religion_trigger = yes }
	}
	text = {
		localisation_key = khurmazta
		trigger = { true_religion = khurmazta }
	}
	text = {
		localisation_key = bon_pagan
		trigger = { true_bon_religion_trigger = yes }
	}
	text = {
		localisation_key = String_hellenic_follower
		trigger = { true_hellenic_religion_trigger = yes }
	}
	text = {
		localisation_key = taoist
		trigger = { true_religion = taoist }
	}

	# CK2Plus
	text = {
		localisation_key = String_GermanPagan
		trigger = { true_german_religion_trigger = yes }
	}
	text = {
		localisation_key = String_CelticPagan
		trigger = { true_celtic_religion_trigger = yes }
	}
	text = { # Generic Pagan fallback, TODO: Give each Plus pagan religion a proper entry
		localisation_key = String_Pagan
		trigger = { true_religion_group = pagan_group }
	}
}

defined_text = {
	name = GetReligionAdherent
	use_first_valid = yes

	text = {
		localisation_key = String_adherent_random
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}
	text = {
		localisation_key = String_Catholic
		trigger = { religion = catholic }
	}
	text = {
		localisation_key = String_Orthodox_Christian
		trigger = { religion = orthodox }
	}
	text = {
		localisation_key = String_Christian
		trigger = {
			religion_group = christian
			NOR = {
				religion = catholic
				religion = orthodox
			}
		}
	}
	text = {
		localisation_key = String_Sunni
		trigger = { religion = sunni }
	}
	text = {
		localisation_key = String_Shia
		trigger = { religion = shiite }
	}
	text = {
		localisation_key = String_Muslim
		trigger = {
			religion_group = muslim
			NOR = {
				religion = sunni
				religion = shiite
			}
		}
	}
	text = {
		localisation_key = String_Jew
		trigger = { religion = jewish }
	}
	text = {
		localisation_key = String_Zoroastrian
		trigger = { religion = zoroastrian }
	}
	text = {
		localisation_key = String_Hindu
		trigger = { religion = hindu }
	}
	text = {
		localisation_key = String_Buddhist
		trigger = { religion = buddhist }
	}
	text = {
		localisation_key = String_Jain
		trigger = { religion = jain }
	}
	text = {
		localisation_key = String_Taoist
		trigger = { religion = taoist }
	}
	text = {
		localisation_key = String_Norse_Follower
		trigger = { religion_openly_norse_or_reformed_trigger = yes }
	}
	text = {
		localisation_key = String_Slav
		trigger = { religion_openly_slavic_or_reformed_trigger = yes }
	}
	text = {
		localisation_key = String_Tengri
		trigger = { religion_openly_tengri_or_reformed_trigger = yes }
	}
	 text = {
		localisation_key = String_Romuvan
		trigger = { religion_openly_baltic_or_reformed_trigger = yes }
	}
	 text = {
		localisation_key = String_Suomenusko_Follower
		trigger = { religion_openly_norse_or_reformed_trigger = yes }
	}
	 text = {
		localisation_key = String_West_African
		trigger = { religion_openly_west_african_or_reformed_trigger = yes }
	}
	text = {
		localisation_key = String_Zunist
		trigger = { religion_openly_zun_or_reformed_trigger = yes }
	}
	text = {
		localisation_key = String_khurmazta_faithful
		trigger = { religion = khurmazta }
	}
	text = {
		localisation_key = String_bon_faithful
		trigger = { religion_openly_bon_or_reformed_trigger = yes }
	}
	text = {
		localisation_key = taoist
		trigger = { religion = taoist }
	}

	# CK2Plus
	text = {
		localisation_key = String_GermanPagan
		trigger = { religion_openly_german_or_reformed_trigger = yes }
	}
	text = {
		localisation_key = String_CelticPagan
		trigger = { religion_openly_celtic_or_reformed_trigger = yes }
	}
	text = { # Generic pagan fallback, TOTOD: Give each Plus pagan religion a proper entry
		localisation_key = String_Pagan
		trigger = { religion_group = pagan_group }
	}
}

### PLACES ###

# Returns a suitable name for the main building of your capital
defined_text = {
	name = GetCapitalHolding
	use_first_valid = yes

	text = {
		localisation_key = GetHolding_Castle_1
		trigger = {
			capital_holding = { holding_type = castle }
			lower_real_tier_than = KING
		}
	}
	text = {
		localisation_key = GetHolding_Castle_2
		trigger = {
			capital_holding = { holding_type = castle }
			real_tier = KING
		}
	}
	text = {
		localisation_key = GetHolding_Castle_3
		trigger = {
			capital_holding = { holding_type = castle }
			real_tier = EMPEROR
		}
	}
	text = {
		localisation_key = GetHolding_Temple_1
		trigger = { capital_holding = { holding_type = temple } }
	}
	text = {
		localisation_key = GetHolding_Nomad_1
		trigger = {
			capital_holding = { holding_type = nomad }
			lower_real_tier_than = KING
		}
	}
	text = {
		localisation_key = GetHolding_Nomad_2
		trigger = {
			capital_holding = { holding_type = nomad }
			real_tier = KING
		}
	}
	text = {
		localisation_key = GetHolding_Nomad_3
		trigger = {
			capital_holding = { holding_type = nomad }
			real_tier = EMPEROR
		}
	}
	text = {
		localisation_key = GetHolding_Tribal_1
		trigger = {
			capital_holding = { holding_type = tribal }
			lower_real_tier_than = DUKE
		}
	}
	text = {
		localisation_key = GetHolding_Tribal_2
		trigger = {
			capital_holding = { holding_type = tribal }
			real_tier = DUKE
		}
	}
	text = {
		localisation_key = GetHolding_Tribal_3
		trigger = {
			capital_holding = { holding_type = tribal }
			higher_real_tier_than = DUKE
		}
	}
	text = {
		localisation_key = GetHolding_City_1
		trigger = {
			capital_holding = { holding_type = city }
			lower_real_tier_than = KING
		}
	}
	text = {
		localisation_key = GetHolding_City_2
		trigger = {
			capital_holding = { holding_type = city }
			real_tier = KING
		}
	}
	text = {
		localisation_key = GetHolding_City_3
		trigger = {
			capital_holding = { holding_type = city }
			real_tier = EMPEROR
		}
	}
	text = {
		localisation_key = GetHolding_Fallback_1
		trigger = {
			capital_holding = {
				NOR = {
					holding_type = castle
					holding_type = temple
					holding_type = nomad
					holding_type = tribal
					holding_type = city
				}
			}
		}
	}
}

# Returns a suitable name for a holding
defined_text = {
	name = GetHolding
	use_first_valid = yes

	text = {
		localisation_key = GetHolding_Castle_1
		trigger = {
			holding_type = castle
			county = {
				holder_scope = {
					lower_real_tier_than = KING
				}
			}
		}
	}
	text = {
		localisation_key = GetHolding_Castle_2
		trigger = {
			holding_type = castle
			county = {
				holder_scope = {
					real_tier = KING
				}
			}
		}
	}
	text = {
		localisation_key = GetHolding_Castle_3
		trigger = {
			holding_type = castle
			county = {
				holder_scope = {
					real_tier = EMPEROR
				}
			}
		}
	}
	text = {
		localisation_key = GetHolding_Temple_1
		trigger = { holding_type = temple }
	}
	text = {
		localisation_key = GetHolding_Nomad_1
		trigger = {
			holding_type = nomad
			county = {
				holder_scope = {
					lower_real_tier_than = KING
				}
			}
		}
	}
	text = {
		localisation_key = GetHolding_Nomad_2
		trigger = {
			holding_type = nomad
			county = {
				holder_scope = {
					real_tier = KING
				}
			}
		}
	}
	text = {
		localisation_key = GetHolding_Nomad_3
		trigger = {
			holding_type = nomad
			county = {
				holder_scope = {
					real_tier = EMPEROR
				}
			}
		}
	}
	text = {
		localisation_key = GetHolding_Tribal_1
		trigger = {
			holding_type = tribal
			county = {
				holder_scope = {
					lower_real_tier_than = DUKE
				}
			}
		}
	}
	text = {
		localisation_key = GetHolding_Tribal_2
		trigger = {
			holding_type = tribal
			county = {
				holder_scope = {
					real_tier = DUKE
				}
			}
		}
	}
	text = {
		localisation_key = GetHolding_Tribal_3
		trigger = {
			holding_type = tribal
			county = {
				holder_scope = {
					higher_real_tier_than = DUKE
				}
			}
		}
	}
	text = {
		localisation_key = GetHolding_City_1
		trigger = {
			holding_type = city
			county = {
				holder_scope = {
					lower_real_tier_than = KING
				}
			}
		}
	}
	text = {
		localisation_key = GetHolding_City_2
		trigger = {
			holding_type = city
			county = {
				holder_scope = {
					real_tier = KING
				}
			}
		}
	}
	text = {
		localisation_key = GetHolding_City_3
		trigger = {
			holding_type = city
			county = {
				holder_scope = {
					real_tier = EMPEROR
				}
			}
		}
	}
	text = {
		localisation_key = String_settlement
		trigger = {
			NOR = {
				holding_type = castle
				holding_type = temple
				holding_type = nomad
				holding_type = tribal
				holding_type = city
			}
		}
	}
}

defined_text = {
	name = GetChamberOpening
	use_first_valid = yes

	text = {
		localisation_key = GetChamberOpening_TentOpening
		trigger = {
			capital_scope = {
				OR = {
					holding_type = tribal
					holding_type = nomad
				}
			}
		}
	}

	fallback_text = {
		localisation_key = GetChamberOpening_Door
	}
}

defined_text = {
	name = GetChamber
	use_first_valid = yes

	text = {
		localisation_key = GetChamber_Tent
		trigger = {
			capital_scope = {
				OR = {
					holding_type = tribal
					holding_type = nomad
				}
			}
		}
	}

	fallback_text = {
		localisation_key = GetChamber_Chambers
	}
}

### WEATHER, TIME ###
defined_text = {
	name = GetWeatherAdjective # WIP

	text = {
		localisation_key = GetWeatherAdjective_Sunny

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 10
				capital_scope = { region = world_africa }
			}
		}
	}
	text = {
		localisation_key = GetWeatherAdjective_Rainy

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 10
				trait = depressed
			}

			mult_modifier = {
				factor = 5
				capital_scope = { region = world_india }
			}
		}
	}
	text = {
		localisation_key = GetWeatherAdjective_Snowy

		trigger = {
			capital_scope = { region = world_europe }
			month >= 10
			month < 3
		}

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 10
				capital_scope = { region = world_europe_north }
			}
		}
	}
	text = {
		localisation_key = GetWeatherAdjective_Stormy

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 5
				capital_scope = { is_coastal = yes }
			}
		}
	}
	text = {
		localisation_key = GetWeatherAdjective_Windy

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 5
				capital_scope = { is_coastal = yes }
			}
		}
	}
	text = {
		localisation_key = GetWeatherAdjective_Cloudy

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 3
				capital_scope = { is_coastal = yes }
			}
		}
	}
	text = {
		localisation_key = GetWeatherAdjective_Foggy

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 3
				capital_scope = { is_coastal = yes }
			}
		}
	}
}

defined_text = {
	name = GetLocalWeatherAdjective # WIP

	text = {
		localisation_key = GetWeatherAdjective_Sunny

		weight_multiplier = {
			factor = 10

			trigger = {
				ROOT = {
					NOT = { has_character_flag = battle_event_in_progess }
				}
			}

			mult_modifier = {
				factor = 10
				region = world_africa
			}
		}
	}
	text = {
		localisation_key = GetWeatherAdjective_Rainy

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 10
				ROOT = {
					trait = depressed
				}
			}

			mult_modifier = {
				factor = 5
				region = world_india
			}
		}
	}
	text = {
		localisation_key = GetWeatherAdjective_Snowy

		trigger = {
			location = { is_winter = yes }
		}

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 10
				region = world_europe_north
			}
		}
	}
	text = {
		localisation_key = GetWeatherAdjective_Stormy

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 5
				is_coastal = yes
			}
		}
	}
	text = {
		localisation_key = GetWeatherAdjective_Windy

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 5
				is_coastal = yes
			}
		}
	}
	text = {
		localisation_key = GetWeatherAdjective_Cloudy

		weight_multiplier = {
			factor = 10

			trigger = {
				ROOT = {
					NOT = { has_character_flag = battle_event_in_progess }
				}
			}

			mult_modifier = {
				factor = 3
				is_coastal = yes
			}
		}
	}
	text = {
		localisation_key = GetWeatherAdjective_Foggy

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 3
				is_coastal = yes
			}
		}
	}

	fallback_text = {
		localisation_key = String_weather_fallback
	}
}

# Checks capital scope
defined_text = {
	name = GetTemperature

	text = {
		localisation_key = GetTemperature_Sweltering

		trigger = {
			month >= 5
			month < 9
		}

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 10
				capital_scope = { region = world_africa }
			}
		}
	}
	text = {
		localisation_key = GetTemperature_Freezing
		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 5
				capital_scope = { region = world_europe_north }
			}
		}
	}
	text = {
		localisation_key = GetTemperature_Cold

		trigger = {
			capital_scope = { region = world_europe }
			month >= 10
			month < 3
		}

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 10
				capital_scope = { region = world_europe_north }
			}
		}
	}
	text = {
		localisation_key = GetTemperature_Warm
		weight_multiplier = {
			factor = 20

			trigger = {
				ROOT = {
					NOT = { has_character_flag = battle_event_in_progess }
				}
			}
		}
	}
}

defined_text = {
	name = GetLocalTemperature

	text = {
		localisation_key = GetTemperature_Sweltering

		trigger = {
			month >= 5
			month < 9
		}

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 10
				region = world_africa
			}
		}
	}
	text = {
		localisation_key = GetTemperature_Freezing

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 5
				region = world_europe_north
			}
			mult_modifier = {
				factor = 5
				location = { is_winter = yes }
			}
		}
	}
	text = {
		localisation_key = GetTemperature_Cold

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 10
				region = world_europe_north
			}
			mult_modifier = {
				factor = 2
				location = { is_winter = yes }
			}
		}

		trigger = {
			region = world_europe
			month >= 10
			month < 3
		}
	}
	text = {
		localisation_key = GetTemperature_Warm

		weight_multiplier = {
			factor = 20

			trigger = {
				ROOT = {
					NOT = { has_character_flag = battle_event_in_progess }
				}
			}
		}
	}

	fallback_text = {
		localisation_key = String_weather_fallback
	}
}

defined_text = {
	name = GetGroundDesc

	text = {
		localisation_key = string_snow
		trigger = { location = { is_winter = yes } }
	}
	text = {
		localisation_key = string_mud
		trigger = { location = { is_winter = no } }
	}
	text = {
		localisation_key = string_dirt
		trigger = { location = { is_winter = no } }
	}

	fallback_text = {
		localisation_key = string_dirt
	}
}

defined_text = {
	name = GetGroundDescCap

	text = {
		localisation_key = string_Snow
		trigger = { location = { is_winter = yes } }
	}
	text = {
		localisation_key = string_Mud
		trigger = { location = { is_winter = no } }
	}
	text = {
		localisation_key = string_Dirt
		trigger = { location = { is_winter = no } }
	}

	fallback_text = {
		localisation_key = string_Dirt
	}
}

### MISC. ###
defined_text = {
	name = GetMatterOfImportance

	text = {
		localisation_key = String_daughter
		trigger = { any_child = { is_female = yes } }
		weight_multiplier = { factor = 3 }
	}
	text = {
		localisation_key = String_son
		trigger = { any_child = { is_female = no } }
		weight_multiplier = { factor = 3 }
	}
	text = {
		localisation_key = String_GetHusbandWifeOpp
		trigger = { is_married = yes }
		weight_multiplier = { factor = 3 }
	}
	text = {
		localisation_key = String_investments
		trigger = { trait = greedy }
		weight_multiplier = { factor = 6 }
	}
	text = {
		localisation_key = String_garden
		trigger = { trait = gardener }
		weight_multiplier = { factor = 6 }
	}
	text = {
		localisation_key = String_building_plans
		trigger = { trait = architect }
		weight_multiplier = { factor = 6 }
	}
	text = {
		localisation_key = String_sword_practice
		trigger = {
			OR = {
				trait = strategist
				trait = duelist
			}
		}
		weight_multiplier = { factor = 6 }
	}
	text = {
		localisation_key = String_tome_collection
		trigger = { is_learned_trigger = yes }
		weight_multiplier = { factor = 6 }
	}
	text = {
		localisation_key = String_friends
		trigger = {
			OR = {
				num_of_friends >= 1
				trait = socializer
			}
		}
		weight_multiplier = { factor = 6 }
	}
	text = {
		localisation_key = String_love
		trigger = { num_of_lovers >= 1 }
		weight_multiplier = { factor = 6 }
	}
	text = {
		localisation_key = String_dog
		trigger = {
			OR = {
				has_character_modifier = pet_hunting_dog
				has_character_modifier = guide_dog
			}
		}
		weight_multiplier = { factor = 6 }
	}
	text = {
		localisation_key = String_cat
		trigger = { has_character_modifier = pet_cat }
		weight_multiplier = { factor = 6 }
	}
	text = {
		localisation_key = String_health

		weight_multiplier = {
			factor = 1 # 0.5

			mult_modifier = {
				factor = 6
				trait = craven
			}
		}
	}
}

### CHINA ###
defined_text = {
	name = GetLongChineseEmperorName

	text = {
		localisation_key = GetLongChineseEmperorName_string
	}
}

defined_text = {
	name = GetMediumChineseEmperorName

	text = {
		localisation_key = GetMediumChineseEmperorName_string
	}
}

defined_text = {
	name = GetShortChineseEmperorName

	text = {
		localisation_key = GetShortChineseEmperorName_string
	}
}

defined_text = {
	name = GetCouncillorLetterGreeting

	text = {
		localisation_key = GetCouncillorLetterGreeting_string
	}
}

defined_text = {
	name = GetRulerLetterGreeting

	text = {
		localisation_key = GetRulerLetterGreeting_string
	}
}

defined_text = {
	name = GetGovernorLetterGreeting

	text = {
		localisation_key = GetGovernorLetterGreeting_string
	}
}

defined_text = {
	name = GetChineseLetterBlessing

	text = {
		trigger = { FROM = { has_job_title = job_chancellor } }
		localisation_key = String_peace_and_unity
	}
	text = {
		trigger = { FROM = { has_job_title = job_marshal } }
		localisation_key = String_strength_and_vigor
	}
	text = {
		trigger = { FROM = { has_job_title = job_treasurer } }
		localisation_key = String_prospering_lands
	}
	text = {
		trigger = { FROM = { has_job_title = job_spiritual } }
		localisation_key = String_divine_guidance
	}
	text = {
		localisation_key = String_heavens_blessings
	}
	text = {
		localisation_key = String_good_health
	}
}

defined_text = {
	name = GetChineseComplimentAdjective

	text = {
		localisation_key = String_honored
	}
	text = {
		localisation_key = String_chaste

		trigger = {
			OR = {
				trait = chaste
				trait = celibate

				AND = {
					is_married = no
					has_lover = no

					NOR = {
						trait = master_seducer
						trait = master_seductress
						trait = lustful
						has_focus = focus_seduction
					}
				}
			}
		}
	}
	text = {
		localisation_key = String_radiant

		trigger = {
			OR = {
				is_strong_trigger = yes
				trait = attractive
			}
		}
	}
	text = {
		localisation_key = String_illustrious

		trigger = {
			OR = {
				is_learned_trigger = yes
				tier = EMPEROR
			}
		}
	}
	text = {
		localisation_key = String_honorable

		trigger = {
			OR = {
				trait = brave
				trait = charitable
				trait = honest
				trait = diligent
				trait = patient
				trait = kind
				trait = humble
				trait = just
			}

			NOR = {
				trait = drunkard
				trait = deceitful
				trait = cruel
				trait = gluttonous
				trait = slothful
				trait = master_schemer
				trait = wroth
				is_any_kinslayer_trigger = yes
				trait = cannibal
			}
		}
	}
	text = {
		localisation_key = String_wise

		trigger = {
			OR = {
				is_smart_trigger = yes
				is_learned_trigger = yes
				learning >= 15
			}
		}
	}
	text = {
		localisation_key = String_sage

		trigger = {
			OR = {
				is_smart_trigger = yes
				is_learned_trigger = yes
				learning >= 15
			}
		}
	}
	text = {
		localisation_key = String_pious

		trigger = {
			OR = {
				piety >= 1000
				trait = zealous
				trait = content
			}
			NOT = { trait = cynical }
		}
	}
	text = {
		localisation_key = String_righteous

		trigger = {
			OR = {
				trait = just
				AND = {
					OR = {
						trait = kind
						trait = charitable
					}
					NOR = {
						trait = arbitrary
						trait = craven
						trait = slothful
						trait = content
					}
				}
			}
		}
	}
	text = {
		localisation_key = String_benevolent

		trigger = {
			OR = {
				trait = just
				trait = kind
				trait = charitable
			}
			NOR = {
				trait = wroth
				trait = cruel
				trait = impaler
			}
		}
	}
	text = {
		localisation_key = String_brave
		trigger = { trait = brave }
	}
	text = {
		localisation_key = String_sincere
		trigger = { trait = honest }
	}
	text = {
		localisation_key = String_lovely

		trigger = {
			is_female = yes
			is_attractive_trigger = yes
		}
	}
	text = {
		localisation_key = String_graceful

		trigger = {
			OR = {
				trait = attractive
				trait = gregarious
				trait = socializer
			}
			has_unpleasant_trait_trigger = no
			NOR = {
				trait = ugly
				trait = drunkard
				trait = hedonist
				trait = lustful
			}
		}
	}
	text = {
		trigger = { higher_tier_than = DUKE }
		localisation_key = String_great
	}
	text = {
		trigger = { higher_tier_than = DUKE }
		localisation_key = String_eminent
	}
	text = {
		trigger = { tier = EMPEROR }
		localisation_key = String_exalted
	}
	text = {
		trigger = { tier = EMPEROR }
		localisation_key = String_magnificent
	}
	text = {
		trigger = { is_offmap_ruler = yes }
		localisation_key = String_heavenly
	}
}

defined_text = {
	name = GetChineseOffmapTributaryPrestigeCost

	text = {
		localisation_key = String_offmap_cost_prestige_count

		trigger = {
			FROM = {
				tier = COUNT
			}
		}
	}
	text = {
		localisation_key = String_offmap_cost_prestige_duke

		trigger = {
			FROM = {
				tier = DUKE
			}
		}
	}
	text = {
		localisation_key = String_offmap_cost_prestige_king

		trigger = {
			FROM = {
				tier = KING
				is_nomadic = no
			}
		}
	}
	text = {
		localisation_key = String_offmap_cost_prestige_emperor

		trigger = {
			FROM = {
				tier = EMPEROR
				is_nomadic = no
			}
		}
	}
	text = {
		localisation_key = String_offmap_cost_prestige_king_nomad

		trigger = {
			FROM = {
				tier = KING
				is_nomadic = yes
			}
		}
	}
	text = {
		localisation_key = String_offmap_cost_prestige_emperor_nomad

		trigger = {
			FROM = {
				tier = EMPEROR
				is_nomadic = yes
			}
		}
	}
}

# Being ordered context
defined_text = {
	name = GetChineseForceOpenDemand
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = force_open_china_demands_tribute }
		localisation_key = String_force_open_china_demands_tribute
	}
	text = {
		trigger = { has_character_flag = force_open_china_demands_trade_post }
		localisation_key = String_force_open_china_demands_trade_post
	}
	text = {
		trigger = { has_character_flag = force_open_china_demands_wealth }
		localisation_key = String_force_open_china_demands_wealth
	}
	text = {
		trigger = { has_character_flag = force_open_china_demands_eunuch }
		localisation_key = String_force_open_china_demands_eunuch
	}
	text = {
		trigger = { has_character_flag = force_open_china_demands_concubine }
		localisation_key = String_force_open_china_demands_concubine
	}
	text = {
		trigger = { has_character_flag = force_open_china_demands_return_chinese }
		localisation_key = String_force_open_china_demands_chinese
	}
	text = {
		trigger = { has_character_flag = force_open_china_demands_backup }
		localisation_key = String_force_open_china_demands_wealth #Backup does reduced wealth
	}
}

# Third person context
defined_text = {
	name = GetChineseForceOpenDemandChina
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = force_open_china_demands_tribute }
		localisation_key = String_force_open_china_demands_tribute_china
	}
	text = {
		trigger = { has_character_flag = force_open_china_demands_trade_post }
		localisation_key = String_force_open_china_demands_trade_post_china
	}
	text = {
		trigger = { has_character_flag = force_open_china_demands_wealth }
		localisation_key = String_force_open_china_demands_wealth_china
	}
	text = {
		trigger = { has_character_flag = force_open_china_demands_eunuch }
		localisation_key = String_force_open_china_demands_eunuch_china
	}
	text = {
		trigger = { has_character_flag = force_open_china_demands_concubine }
		localisation_key = String_force_open_china_demands_concubine_china
	}
	text = {
		trigger = { has_character_flag = force_open_china_demands_return_chinese }
		localisation_key = String_force_open_china_demands_chinese_china
	}
	text = {
		trigger = { has_character_flag = force_open_china_demands_backup }
		localisation_key = String_force_open_china_demands_wealth_china # Backup does reduced wealth
	}
}

### NON-REUSABLE LOC KEYS ###
defined_text = {
	name = GetCGMission
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = cg_diplomatic_visit }
		localisation_key = GetCGMission_diplomatic_visit
	}
	text = {
		trigger = { has_character_flag = cg_oversee_troops }
		localisation_key = GetCGMission_oversee_troops
	}
	text = {
		trigger = { has_character_flag = cg_study_military }
		localisation_key = GetCGMission_study_military
	}
	text = {
		trigger = { has_character_flag = cg_oversee_tax_collection }
		localisation_key = GetCGMission_oversee_tax_collection
	}
	text = {
		trigger = { has_character_flag = cg_trade }
		localisation_key = GetCGMission_trade
	}
	text = {
		trigger = { has_character_flag = cg_preaching }
		localisation_key = GetCGMission_preaching
	}
	text = {
		trigger = { has_character_flag = cg_study_theology }
		localisation_key = GetCGMission_study_theology
	}
}

defined_text = {
	name = GetCGMissionOutcome
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = cg_diplomatic_visit }
		localisation_key = GetCGMissionOutcome_diplomatic_visit
	}
	text = {
		trigger = { has_character_flag = cg_oversee_troops }
		localisation_key = GetCGMissionOutcome_oversee_troops
	}
	text = {
		trigger = { has_character_flag = cg_study_military }
		localisation_key = GetCGMissionOutcome_study_military
	}
	text = {
		trigger = { has_character_flag = cg_oversee_tax_collection }
		localisation_key = GetCGMissionOutcome_oversee_tax_collection
	}
	text = {
		trigger = { has_character_flag = cg_trade }
		localisation_key = GetCGMissionOutcome_trade
	}
	text = {
		trigger = { has_character_flag = cg_preaching }
		localisation_key = GetCGMissionOutcome_preaching
	}
	text = {
		trigger = { has_character_flag = cg_study_theology }
		localisation_key = GetCGMissionOutcome_study_theology
	}
}

defined_text = {
	name = GetHermeticInvention
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = war_invention }
		localisation_key = String_warfare
	}
	text = {
		trigger = { has_character_flag = prosperity_invention }
		localisation_key = String_prosperity
	}
	text = {
		trigger = { has_character_flag = knowledge_invention }
		localisation_key = String_scholarship
	}
}

defined_text = {
	name = GetSocietyRankUpTooltip1
	use_first_valid = yes

	text = {
		trigger = { society_rank == 1 }
		localisation_key = GetSocietyRankUpTooltip1_Standard_Rank1
	}
	text = {
		trigger = { society_rank == 2 }
		localisation_key = GetSocietyRankUpTooltip1_Standard_Rank2
	}
	text = {
		trigger = { society_rank == 3 }
		localisation_key = GetSocietyRankUpTooltip1_Standard_Rank3
	}
}

defined_text = {
	name = GetSocietyRankUpTooltip2
	use_first_valid = yes

	text = {
		trigger = {
			NOR = {
				society_member_of = monastic_order_jain
				society_member_of = monastic_order_buddhist
				society_member_of = monastic_order_bon
			}
		}
		localisation_key = ""
	}
	text = {
		trigger = {
			society_rank == 1
			OR = {
				society_member_of = monastic_order_jain
				society_member_of = monastic_order_buddhist
				society_member_of = monastic_order_bon
			}
		}
		localisation_key = GetSocietyRankUpTooltip2_MOBuddhistJain_Rank1
	}
	text = {
		trigger = {
			society_rank == 2
			OR = {
				society_member_of = monastic_order_jain
				society_member_of = monastic_order_buddhist
				society_member_of = monastic_order_bon
			}
		}
		localisation_key = GetSocietyRankUpTooltip2_MOBuddhistJain_Rank2
	}
	text = {
		trigger = {
			society_rank == 3
			OR = {
				society_member_of = monastic_order_jain
				society_member_of = monastic_order_buddhist
				society_member_of = monastic_order_bon
			}
		}
		localisation_key = GetSocietyRankUpTooltip2_MOBuddhistJain_Rank3
	}
}

defined_text = {
	name = GetSocietyRankUpTooltip4
	use_first_valid = yes

	text = {
		trigger = {
			NOR = {
				society_member_of = monastic_order_jain
				society_member_of = monastic_order_buddhist
				society_member_of = monastic_order_bon
			}
		}
		localisation_key = ""
	}
	text = {
		trigger = {
			society_rank == 1
			OR = {
				society_member_of = monastic_order_jain
				society_member_of = monastic_order_buddhist
				society_member_of = monastic_order_bon
			}
		}
		localisation_key = request_to_rank_up_within_society_virtues1
	}
	text = {
		trigger = {
			society_rank == 2
			OR = {
				society_member_of = monastic_order_jain
				society_member_of = monastic_order_buddhist
				society_member_of = monastic_order_bon
			}
		}
		localisation_key = request_to_rank_up_within_society_virtues2
	}
	text = {
		trigger = {
			society_rank == 3
			OR = {
				society_member_of = monastic_order_jain
				society_member_of = monastic_order_buddhist
				society_member_of = monastic_order_bon
			}
		}
		localisation_key = request_to_rank_up_within_society_virtues3
	}
}

defined_text = {
	name = GetDWRandomDemon

	text = {
		trigger = {
			society_member_of = the_satanists
			NOT = { religion_group = zoroastrian_group }
		}
		localisation_key = String_Mammon
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			NOT = { religion_group = zoroastrian_group }
		}
		localisation_key = String_Beelzebub
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			NOT = { religion_group = zoroastrian_group }
		}
		localisation_key = String_Abaddon
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			NOT = { religion_group = zoroastrian_group }
		}
		localisation_key = String_Belphegor
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			NOT = { religion_group = zoroastrian_group }
		}
		localisation_key = String_Asmodeus
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			NOT = { religion_group = zoroastrian_group }
		}
		localisation_key = String_Leviathan
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			NOT = { religion_group = zoroastrian_group }
		}
		localisation_key = String_Astaroth
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			NOT = { religion_group = zoroastrian_group }
		}
		localisation_key = String_Belial
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			NOT = { religion_group = zoroastrian_group }
		}
		localisation_key = String_Berith
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			NOT = { religion_group = zoroastrian_group }
		}
		localisation_key = String_Lilith
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			NOT = { religion_group = zoroastrian_group }
		}
		localisation_key = String_Pythius
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			OR = {
				religion_group = zoroastrian_group
				religion_openly_zun_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Akoman
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			OR = {
				religion_group = zoroastrian_group
				religion_openly_zun_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Indar
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			OR = {
				religion_group = zoroastrian_group
				religion_openly_zun_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Nanghait
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			OR = {
				religion_group = zoroastrian_group
				religion_openly_zun_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Sawar
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			OR = {
				religion_group = zoroastrian_group
				religion_openly_zun_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Tauriz
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			OR = {
				religion_group = zoroastrian_group
				religion_openly_zun_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Zarizi
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			OR = {
				religion_group = zoroastrian_group
				religion_openly_zun_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Akatash
	}
	text = {
		trigger = { society_member_of = the_plaguebringers }
		localisation_key = String_Karash_Han
	}
	text = {
		trigger = { society_member_of = the_plaguebringers }
		localisation_key = String_Shyngay_Han
	}
	text = {
		trigger = { society_member_of = the_plaguebringers }
		localisation_key = String_Badysh_Han
	}
	text = {
		trigger = { society_member_of = the_plaguebringers }
		localisation_key = String_Kerey_Han
	}
	text = {
		trigger = {society_member_of = the_plaguebringers }
		localisation_key = String_Yabash_Han
	}
	text = {
		trigger = { society_member_of = the_cold_ones }
		localisation_key = String_Baba_Yaga
	}
	text = {
		trigger = { society_member_of = the_cold_ones }
		localisation_key = String_Berstuk
	}
	text = {
		trigger = { society_member_of = the_cold_ones }
		localisation_key = String_the_Shishigas
	}
	text = {
		trigger = { society_member_of = the_cold_ones }
		localisation_key = String_Polunocnica
	}
	text = {
		trigger = { society_member_of = the_cult_of_kali }
		localisation_key = String_Bakasura
	}
	text = {
		trigger = { society_member_of = the_cult_of_kali }
		localisation_key = String_Kirmira
	}
	text = {
		trigger = { society_member_of = the_cult_of_kali }
		localisation_key = String_Jatasur
	}
	text = {
		trigger = { society_member_of = the_cult_of_kali }
		localisation_key = String_Ravana
	}
	text = {
		trigger = { society_member_of = the_cult_of_kali }
		localisation_key = String_Mahakali
	}
	text = {
		trigger = { society_member_of = the_trollcrafters }
		localisation_key = String_Angrboda
	}
	text = {
		trigger = { society_member_of = the_trollcrafters }
		localisation_key = String_Beli
	}
	text = {
		trigger = { society_member_of = the_trollcrafters }
		localisation_key = String_Fenrir
	}
	text = {
		trigger = { society_member_of = the_trollcrafters }
		localisation_key = String_Great_Loki
	}
	text = {
		trigger = { society_member_of = the_bacchants }
		localisation_key = String_Ampelos
	}
	text = {
		trigger = { society_member_of = the_bacchants }
		localisation_key = String_Komos
	}
	text = {
		trigger = { society_member_of = the_bacchants }
		localisation_key = String_Krotos
	}
	text = {
		trigger = { society_member_of = the_bacchants }
		localisation_key = String_Lenai
	}
	text = {
		trigger = { society_member_of = the_bacchants }
		localisation_key = String_Leneus
	}
	text = {
		trigger = { society_member_of = the_bacchants }
		localisation_key = String_Poimenios
	}
	text = {
		trigger = { society_member_of = the_vodouns }
		localisation_key = String_Sakpata
	}
	text = {
		trigger = { society_member_of = the_vodouns }
		localisation_key = String_Guruhi
	}
	text = {
		trigger = { society_member_of = the_vodouns }
		localisation_key = String_Heitsi
	}
	text = {
		trigger = { society_member_of = the_vodouns }
		localisation_key = String_Leza
	}
	text = {
		trigger = { society_member_of = the_vodouns }
		localisation_key = String_Nenaunir
	}
	text = {
		trigger = { society_member_of = the_vodouns }
		localisation_key = String_Ngami
	}
	text = {
		trigger = { society_member_of = the_vodouns }
		localisation_key = String_Nyamia
	}

	# CK2Plus
	text = {
		trigger = { society_member_of = cult_of_angra_mainyu }
		localisation_key = String_Akoman
	}
	text = {
		trigger = { society_member_of = cult_of_angra_mainyu }
		localisation_key = String_Indar
	}
	text = {
		trigger = { society_member_of = cult_of_angra_mainyu }
		localisation_key = String_Nanghait
	}
	text = {
		trigger = { society_member_of = cult_of_angra_mainyu }
		localisation_key = String_Sawar
	}
	text = {
		trigger = { society_member_of = cult_of_angra_mainyu }
		localisation_key = String_Tauriz
	}
	text = {
		trigger = { society_member_of = cult_of_angra_mainyu }
		localisation_key = String_Zarizi
	}
	text = {
		trigger = { society_member_of = cult_of_angra_mainyu }
		localisation_key = String_Akatash
	}
	text = {
		trigger = { society_member_of = the_cult_of_balor }
		localisation_key = String_Dark_Spirit
	}
	text = {
		trigger = { society_member_of = arab_jinn_sorcerers }
		localisation_key = String_Iblis
	}
	text = {
		trigger = { society_member_of = arab_jinn_sorcerers }
		localisation_key = String_Ifrit
	}
	text = {
		trigger = { society_member_of = cult_of_titan }
		localisation_key = GOD_KRONOS
	}
	text = {
		trigger = {society_member_of = cult_of_titan}
		localisation_key = GOD_OCEANUS
	}
	text = {
		trigger = { society_member_of = cult_of_titan }
		localisation_key = GOD_TETHYS
	}
	text = {
		trigger = { society_member_of = cult_of_titan }
		localisation_key = GOD_HYPERION
	}
	text = {
		trigger = { society_member_of = cult_of_titan}
		localisation_key = GOD_THEIA
	}
	text = {
		trigger = { society_member_of = cult_of_titan }
		localisation_key = GOD_RHEA
	}
	text = {
		trigger = { society_member_of = cult_of_titan }
		localisation_key = GOD_ATLAS
	}
	text = {
		trigger = { society_member_of = cult_of_titan }
		localisation_key = GOD_KOIOS
	}
	text = {
		trigger = { society_member_of = cult_of_titan }
		localisation_key = GOD_PHOEBE
	}
	text = {
		trigger = { society_member_of = cult_of_titan }
		localisation_key = GOD_IAPETUS
	}
	text = {
		trigger = { society_member_of = cult_of_titan }
		localisation_key = GOD_KRIUS
	}
	text = {
		trigger = { society_member_of = cult_of_titan }
		localisation_key = GOD_MNEMOSYNE
	}
	text = {
		trigger = { society_member_of = cult_of_titan }
		localisation_key = GOD_THEMIS
	}
	text = {
		trigger = { society_member_of = cult_of_apep }
		localisation_key = String_Apep
	}
}

defined_text = {
	name = GetDWPartyClothes

	text = {
		localisation_key = String_special_shoes
	}
	text = {
		trigger = {
			is_female = no
			location = {
				OR = {
					region = world_europe
					region = world_steppe

				}
			}
		}
		localisation_key = String_Russian_codpiece
	}
	text = {
		trigger = {
			religion_group = christian
			OR = {
				is_female = yes
				trait = homosexual
			}
		}
		localisation_key = String_Nuns_habit
	}
	text = {
		trigger = { religion_group = christian }
		localisation_key = String_Bishops_mitre
	}
	text = {
		localisation_key = String_skin_mask
	}
	text = {
		localisation_key = String_horned_helmet
	}
	text = {
		trigger = {
			OR = {
				religion_group = muslim
				religion_openly_west_african_or_reformed_trigger = yes
				religion_openly_arabic_or_reformed_trigger = yes
			}
		}
		localisation_key = String_pink_turban
	}

	# CK2Plus
	text = {
		localisation_key = String_orgy_toga
		trigger = { religion_openly_hellenic_or_reformed_trigger = yes }
	}
}

defined_text = {
	name = GetDWImplements

	text = {
		localisation_key = String_new_poisons
	}
	text = {
		localisation_key = String_implements
	}
	text = {
		localisation_key = String_Pear_of_Anguish
	}
	text = {
		localisation_key = String_fav_thumbscrew
	}
	text = {
		localisation_key = String_fav_garrotte
	}
}

defined_text = {
	name = GetDWSettlement
	use_first_valid = yes

	text = {
		trigger = { society_member_of = the_plaguebringers }
		localisation_key = String_camp
	}
	text = {
		localisation_key = String_town
	}
}

defined_text = {
	name = GetDWDrug

	text = {
		localisation_key = String_Tears_of_Demeter
	}
	text = {
		localisation_key = String_Fools_Honey
	}
	text = {
		localisation_key = String_Blood_of_Jahi
	}
	text = {
		localisation_key = String_Dreamers_Delight
	}
}

defined_text = {
	name = GetBitchBastard
	use_first_valid = yes

	text = {
		trigger = { is_female = yes }
		localisation_key = String_bitch
	}
	text = {
		localisation_key = String_bastard
	}
}

defined_text = {
	name = GetDWBrethrenType
	use_first_valid = yes

	text = {
		trigger = { society_member_of = the_cold_ones }
		localisation_key = String_Winter
	}
	text = {
		trigger = { society_member_of = the_plaguebringers }
		localisation_key = String_Disease
	}

	# CK2Plus
	text = {
		trigger = { society_member_of = arab_jinn_sorcerers }
		localisation_key = String_Jinn_Flames
	}
	text = {
		localisation_key = String_Darkness
	}
}

defined_text = {
	name = GetDWDemonTerm
	use_first_valid = yes

	text = {
		localisation_key = String_Demon_Prince
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
	}
	text = {
		trigger = {
			society_member_of = the_satanists
			religion_openly_zun_or_reformed_trigger = no
		}
		localisation_key = String_Demon_Prince
	}
	text = {
		trigger = {
			religion_openly_zun_or_reformed_trigger = yes
			society_member_of = the_satanists
		}
		localisation_key = String_Greater_Daeva
	}

	text = {
		trigger = {
			OR = {
				society_member_of = the_cold_ones
				society_member_of = the_plaguebringers
			}
		}
		localisation_key = String_Greater_Demon
	}
	text = {
		trigger = { society_member_of = the_trollcrafters }
		localisation_key = String_Jotun_Lord
	}
	text = {
		trigger = { society_member_of = the_cult_of_kali }
		localisation_key = String_Rakshasa_Prince
	}
	text = {
		trigger = { society_member_of = the_bacchants }
		localisation_key = String_Satyr_Prince
	}
	text = {
		localisation_key = String_vodoun_demon
		trigger = { society_member_of = the_vodouns }
	}

	# CK2Plus
	text = {
		trigger = { society_member_of = the_cult_of_balor }
		localisation_key = String_Dark_Spirit_Lord
	}
	text = {
		trigger = {
			society_member_of = cult_of_angra_mainyu
			culture = persian
		}
		localisation_key = String_mighty_div
	}
	text = {
		trigger = {
			society_member_of = cult_of_angra_mainyu
			culture_group = iranian
			NOT = { culture = persian }
		}
		localisation_key = String_mighty_dew
	}
	text = {
		trigger = {
			society_member_of = cult_of_angra_mainyu
			NOT = { culture_group = iranian }
		}
		localisation_key = String_mighty_daeva
	}
	text = {
		trigger = { society_member_of = arab_jinn_sorcerers }
		localisation_key = String_jinns
	}
	text = {
		trigger = { society_member_of = cult_of_titan }
		localisation_key = String_Titan
	}
	text = {
		trigger = { society_member_of = cult_of_apep }
		localisation_key = String_Eater_of_Souls
	}
}

defined_text = {
	name = GetDWSacrifice
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = sacrifice_ruler }
		localisation_key = String_powerful_ruler
	}
	text = {
		trigger = { has_character_flag = sacrifice_holy_person }
		localisation_key = String_servant_of_GetHighGodName
	}
	text = {
		trigger = { has_character_flag = sacrifice_virgin }
		localisation_key = String_virgin
	}
	text = {
		trigger = { has_character_flag = sacrifice_dwarf }
		localisation_key = String_dwarf
	}
}

defined_text = {
	name = GetWeaponsmithWeapon
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = weapon_sword }
		localisation_key = String_sword
	}
	text = {
		trigger = { has_character_flag = weapon_scimitar }
		localisation_key = String_scimitar
	}
	text = {
		trigger = { has_character_flag = weapon_lance }
		localisation_key = String_lance
	}
	text = {
		trigger = { has_character_flag = weapon_axe }
		localisation_key = String_axe
	}
	text = {
		trigger = { has_character_flag = weapon_mace }
		localisation_key = String_mace
	}
	text = {
		trigger = { has_character_flag = weapon_bow }
		localisation_key = String_bow
	}
	text = {
		trigger = { has_character_flag = armor_set }
		localisation_key = String_set_of_armor
	}
	text = {
		trigger = { has_character_flag = zweihanded_sword }
		localisation_key = String_sword
	}

}

defined_text = {
	name = GetWeaponArmorSmith
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = weaponsmith }
		localisation_key = String_weaponsmith
	}
	text = {
		trigger = { has_character_flag = armorsmith }
		localisation_key = String_armorsmith
	}
}

defined_text = {
	name = GetSunName
	use_first_valid = yes

	text = {
		trigger = {
			OR = {
				religion_group = muslim
				religion_openly_arabic_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Sun_arabic
	}
	text = {
		trigger = { culture = nahua }
		localisation_key = String_Sun_nahua
	}
	text = {
		trigger = {
			# "English" names are the ones Latins would use, only Greek Hellenics would use the Greek gods' names
			religion_openly_hellenic_or_reformed_trigger = yes
			culture_group = byzantine
		}
		localisation_key = String_Sun_hellenic
	}
	text = {
		trigger = {
			OR = {
				religion_openly_zun_or_reformed_trigger = yes
				religion_group = zoroastrian_group
			}
		}
		localisation_key = String_Sun_farsi
	}
	text = { # Everyone else
		localisation_key = String_Sun_english
	}
}

defined_text = {
	name = GetMercuryName

	text = {
		trigger = {
			OR = {
				religion_group = muslim
				religion_openly_arabic_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Mercury_arabic
	}
	text = {
		trigger = { culture = nahua }
		localisation_key = String_Mercury_nahua
	}
	text = {
		trigger = {
			# "English" names are the ones Latins would use, only Greek Hellenics would use the Greek gods' names
			religion_openly_hellenic_or_reformed_trigger = yes
			culture_group = byzantine
		}
		localisation_key = String_Mercury_hellenic
	}
	text = {
		trigger = {
			OR = {
				religion_openly_zun_or_reformed_trigger = yes
				religion_group = zoroastrian_group
			}
		}
		localisation_key = String_Mercury_farsi
	}
	text = { # Everyone else
		localisation_key = String_Mercury_english
	}
}

defined_text = {
	name = GetVenusName
	use_first_valid = yes

	text = {
		trigger = {
			OR = {
				religion_group = muslim
				religion_openly_arabic_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Venus_arabic
	}
	text = {
		trigger = { culture = nahua }
		localisation_key = String_Venus_nahua
	}
	text = {
		trigger = {
			# "English" names are the ones Latins would use, only Greek Hellenics would use the Greek gods' names
			religion_openly_hellenic_or_reformed_trigger = yes
			culture_group = byzantine
		}
		localisation_key = String_Venus_hellenic
	}
	text = {
		trigger = {
			OR = {
				religion_openly_zun_or_reformed_trigger = yes
				religion_group = zoroastrian_group
			}
		}
		localisation_key = String_Venus_farsi
	}

	text = { # Everyone else
		localisation_key = String_Venus_english
	}
}

defined_text = {
	name = GetEarthName
	use_first_valid = yes

	text = {
		trigger = {
			OR = {
				religion_group = muslim
				religion_openly_arabic_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Earth_arabic
	}
	text = {
		trigger = { culture = nahua }
		localisation_key = String_Earth_nahua
	}
	text = {
		trigger = {
			# "English" names are the ones Latins would use, only Greek Hellenics would use the Greek gods' names
			religion_openly_hellenic_or_reformed_trigger = yes
			culture_group = byzantine
		}
		localisation_key = String_Earth_hellenic
	}
	text = {
		trigger = {
			OR = {
				religion_openly_zun_or_reformed_trigger = yes
				religion_group = zoroastrian_group
			}
		}
		localisation_key = String_Earth_farsi
	}
	text = { # Everyone else
		localisation_key = String_Earth_english
	}
}

defined_text = {
	name = GetMoonName
	use_first_valid = yes

	text = {
		trigger = {
			OR = {
				religion_group = muslim
				religion_openly_arabic_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Moon_arabic
	}
	text = {
		trigger = { culture = nahua }
		localisation_key = String_Moon_nahua
	}
	text = {
		trigger = {
			# "English" names are the ones Latins would use, only Greek Hellenics would use the Greek gods' names
			religion_openly_hellenic_or_reformed_trigger = yes
			culture_group = byzantine
		}
		localisation_key = String_Moon_hellenic
	}
	text = {
		trigger = {
			OR = {
				religion_group = zoroastrian_group
				religion_openly_zun_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Moon_farsi
	}

	text = { # Everyone else
		localisation_key = String_Moon_english
	}
}

defined_text = {
	name = GetMarsName
	use_first_valid = yes

	text = {
		trigger = {
			OR = {
				religion_group = muslim
				religion_openly_arabic_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Mars_arabic
	}
	text = {
		trigger = { culture = nahua }
		localisation_key = String_Mars_nahua
	}
	text = {
		trigger = {
			# "English" names are the ones Latins would use, only Greek Hellenics would use the Greek gods' names
			religion_openly_hellenic_or_reformed_trigger = yes
			culture_group = byzantine
		}
		localisation_key = String_Mars_hellenic
	}
	text = {
		trigger = {
			OR = {
				religion_group = zoroastrian_group
				religion_openly_zun_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Mars_farsi
	}
	text = { # Everyone else
		localisation_key = String_Mars_english
	}
}

defined_text = {
	name = GetJupiterName
	use_first_valid = yes

	text = {
		trigger = {
			OR = {
				religion_group = muslim
				religion_openly_arabic_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Jupiter_arabic
	}
	text = {
		trigger = { culture = nahua }
		localisation_key = String_Jupiter_nahua
	}
	text = {
		trigger = {
			# "English" names are the ones Latins would use, only Greek Hellenics would use the Greek gods' names
			religion_openly_hellenic_or_reformed_trigger = yes
			culture_group = byzantine
		}
		localisation_key = String_Jupiter_hellenic
	}
	text = {
		trigger = {
			OR = {
				religion_group = zoroastrian_group
				religion_openly_zun_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Jupiter_farsi
	}
	text = { # Everyone else
		localisation_key = String_Jupiter_english
	}
}

defined_text = {
	name = GetSaturnName
	use_first_valid = yes

	text = {
		trigger = {
			OR = {
				religion_group = muslim
				religion_openly_arabic_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Saturn_arabic
	}
	text = {
		trigger = { culture = nahua }
		localisation_key = String_Saturn_nahua
	}
	text = {
		trigger = {
			# "English" names are the ones Latins would use, only Greek Hellenics would use the Greek gods' names
			religion_openly_hellenic_or_reformed_trigger = yes
			culture_group = byzantine
		}
		localisation_key = String_Saturn_hellenic
	}
	text = {
		trigger = {
			OR = {
				religion_group = zoroastrian_group
				religion_openly_zun_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Saturn_farsi
	}
	text = { # Everyone else
		localisation_key = String_Saturn_english
	}
}

defined_text = {
	name = GetUranusName
	use_first_valid = yes

	text = {
		trigger = {
			OR = {
				religion_group = muslim
				religion_openly_arabic_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Uranus_arabic
	}
	text = {
		trigger = { culture = nahua }
		localisation_key = String_Uranus_nahua
	}
	text = {
		trigger = {
			# "English" names are the ones Latins would use, only Greek Hellenics would use the Greek gods' names
			religion_openly_hellenic_or_reformed_trigger = yes
			culture_group = byzantine
		}
		localisation_key = String_Uranus_hellenic
	}
	text = {
		trigger = {
			OR = {
				religion_group = zoroastrian_group
				religion_openly_zun_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Uranus_farsi
	}
	text = { # Everyone else
		localisation_key = String_Uranus_english
	}
}

defined_text = {
	name = GetNeptuneName
	use_first_valid = yes

	text = {
		trigger = {
			OR = {
				religion_group = muslim
				religion_openly_arabic_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Neptune_arabic
	}
	text = {
		trigger = { culture = nahua }
		localisation_key = String_Neptune_nahua
	}
	text = {
		trigger = {
			# "English" names are the ones Latins would use, only Greek Hellenics would use the Greek gods' names
			religion_openly_hellenic_or_reformed_trigger = yes
			culture_group = byzantine
		}
		localisation_key = String_Neptune_hellenic
	}
	text = {
		trigger = {
			OR = {
				religion_group = zoroastrian_group
				religion_openly_zun_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Neptune_farsi
	}
	text = { # Everyone else
		localisation_key = String_Neptune_english
	}
}

defined_text = {
	name = GetPlutoName
	use_first_valid = yes

	text = {
		trigger = {
			OR = {
				religion_group = muslim
				religion_openly_arabic_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Pluto_arabic
	}
	text = {
		trigger = { culture = nahua }
		localisation_key = String_Pluto_nahua
	}
	text = {
		trigger = {
			# "English" names are the ones Latins would use, only Greek Hellenics would use the Greek gods' names
			religion_openly_hellenic_or_reformed_trigger = yes
			culture_group = byzantine
		}
		localisation_key = String_Pluto_hellenic
	}
	text = {
		trigger = {
			OR = {
				religion_group = zoroastrian_group
				religion_openly_zun_or_reformed_trigger = yes
			}
		}
		localisation_key = String_Pluto_farsi
	}
	text = { # Everyone else
		localisation_key = String_Pluto_english
	}
}

defined_text = {
	name = GetRandomPlanetName

	text = {
		localisation_key = GetMercuryName_Key
	}
	text = {
		localisation_key = GetVenusName_Key
	}
	text = {
		localisation_key = GetMarsName_Key
	}
	text = {
		localisation_key = GetJupiterName_Key
	}
	text = {
		localisation_key = GetSaturnName_Key
	}
	text = {
		localisation_key = GetUranusName_Key
	}
	text = {
		localisation_key = GetNeptuneName_Key
	}
	text = {
		localisation_key = GetPlutoName_Key
	}
}

defined_text = {
	name = GetHermeticsDestinedRole
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = destined_steward }
		localisation_key = String_steward
	}
	text = {
		trigger = { has_character_flag = destined_fighter }
		localisation_key = String_figther
	}
	text = {
		trigger = { has_character_flag = destined_diplomat }
		localisation_key = String_diplomat
	}
	text = {
		trigger = { has_character_flag = destined_schemer }
		localisation_key = String_schemer
	}
	text = {
		trigger = { has_character_flag = destined_scholar }
		localisation_key = String_scholar
	}
}

defined_text = {
	name = GetHermeticsDestinedExpertise

	text = {
		trigger = { has_character_flag = destined_steward }
		localisation_key = String_administration
	}
	text = {
		trigger = { has_character_flag = destined_fighter }
		localisation_key = String_battle
	}
	text = {
		trigger = { has_character_flag = destined_diplomat }
		localisation_key = String_diplomacy
	}
	text = {
		trigger = { has_character_flag = destined_schemer }
		localisation_key = String_intrigue
	}
	text = {
		trigger = { has_character_flag = destined_scholar }
		localisation_key = String_scholarship
	}
}


defined_text = {
	name = GetWesternZodiacSign
	use_first_valid = yes

	text = {
		trigger = { is_born_under_Aries_trigger = yes }
		localisation_key = String_Aries
	}
	text = {
		trigger = { is_born_under_Taurus_trigger = yes }
		localisation_key = String_Taurus
	}
	text = {
		trigger = { is_born_under_Gemini_trigger = yes }
		localisation_key = String_Gemini
	}
	text = {
		trigger = { is_born_under_Cancer_trigger = yes }
		localisation_key = String_Cancer
	}
	text = {
		trigger = { is_born_under_Leo_trigger = yes }
		localisation_key = String_Leo
	}
	text = {
		trigger = { is_born_under_Virgo_trigger = yes }
		localisation_key = String_Virgo
	}
	text = {
		trigger = { is_born_under_Libra_trigger = yes }
		localisation_key = String_Libra
	}
	text = {
		trigger = { is_born_under_Scorpius_trigger = yes }
		localisation_key = String_Scorpius
	}
	text = {
		trigger = { is_born_under_Sagittarius_trigger = yes }
		localisation_key = String_Sagittarius
	}
	text = {
		trigger = { is_born_under_Capricorn_trigger = yes }
		localisation_key = String_Capricorn
	}
	text = {
		trigger = { is_born_under_Aquarius_trigger = yes }
		localisation_key = String_Aquarius
	}
	text = {
		trigger = { is_born_under_Pisces_trigger = yes }
		localisation_key = String_Pisces
	}
}

defined_text = {
	name = GetTheoryPaperQuality
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = theory_paper_simplistic }
		localisation_key = String_a_rather_simplistic
	}
	text = {
		trigger = { has_character_flag = theory_paper_average }
		localisation_key = String_an_entirely_average
	}
	text = {
		trigger = { has_character_flag = theory_paper_excellent }
		localisation_key = String_an_excellent
	}
	text = {
		trigger = { has_character_flag = theory_paper_revolutionary }
		localisation_key = String_a_truly_revolutionary
	}
}

defined_text = {
	name = GetTheoryPaperQualityExpanded
	use_first_valid = yes

	text = {
		trigger = { FROM = { has_character_flag = theory_paper_simplistic } }
		localisation_key = String_simplistic
	}
	text = {
		trigger = { FROM = { has_character_flag = theory_paper_average } }
		localisation_key = String_average
	}
	text = {
		trigger = { FROM = { has_character_flag = theory_paper_excellent } }
		localisation_key = String_excellent
	}
	text = {
		trigger = { FROM = { has_character_flag = theory_paper_revolutionary } }
		localisation_key = String_revolutionary
	}
}


# Includes both definite and non-definite texts.
# Use as a self-contained object in your sentence.
# (We were debating [GetHermeticDebateSubject].)
defined_text = {
	name = GetHermeticDebateSubject

	text = {
		localisation_key = String_Universal_Theology
	}
	text = {
		trigger = {
			OR = {
				religion = catholic
				religion = orthodox
				religion = chalcedonian
			}
		}
		localisation_key = String_origin_of_the_Trinity_before_Messiah
	}
	text = {
		trigger = { religion = jewish }
		localisation_key = String_Qabalah
	}
	text = {
		localisation_key = String_unity_with_the_One
	}
	text = {
		localisation_key = String_nature_of_Prima_materia
	}
	text = {
		localisation_key = String_nature_of_the_Inner_and_the_Outer_cosmos
	}
	text = {
		localisation_key = String_Prisca_theologia
	}
	text = {
		localisation_key = String_esoteric_meaning_of_the_Caduceus
	}
	text = {
		localisation_key = String_truth_inherent_to_Divine_Consciousness
	}
	text = {
		localisation_key = String_interaction_of_the_soul_and_alchemy
	}
	text = {
		localisation_key = String_very_definition_of_a_true_magnum_opus
	}
	text = {
		weight_multiplier = { factor = 0.1 }
		localisation_key = String_the_nature_of_the_Judgements_and_the_Bazaar
	}
	text = {
		localisation_key = String_the_movement_of_celestial_bodies
	}
	text = {
		localisation_key = String_the_laws_of_the_stars
	}
}


defined_text = {
	name = GetSillyDebateSubject

	text = {
		localisation_key = String_divinity_of_snails
	}
	text = {
		localisation_key = String_snake_or_staff
	}
	text = {
		localisation_key = String_why_gold_anyways
	}
	text = {
		localisation_key = String_medicinal_application_of_alcohol
	}
	text = {
		localisation_key = String_trinity_or_maybe_quaternity
	}
	text = {
		localisation_key = String_emerald_tablet_kept_at_home
	}
	text = {
		localisation_key = String_procedure_of_previous_debate
	}
	text = {
		localisation_key = String_soul_leaving_body
	}
	text = {
		localisation_key = String_kings_or_angels_higher_ranked
	}
	text = {
		localisation_key = String_inferno_is_maybe_cool
	}
	text = {
		trigger = {
			immortal = no
		}
		localisation_key = String_eternal_life_not_that_great
	}
	text = {
		weight_multiplier = { factor = 0.4 }
		localisation_key = String_top_ten_alchemists
	}
	text = {
		localisation_key = String_that_feeling
	}
	text = {
		weight_multiplier = {
			factor = 1

			mult_modifier = {
				factor = 0.3
				NOT = {
					trait = gardener
				}
			}
		}
		localisation_key = String_gardening_noble_work
	}
	text = {
		weight_multiplier = { factor = 0.2 }
		localisation_key = String_alchemists_make_better_lovers
	}
}

defined_text = {
	name = GetAssassinsDrugsTooltip
	use_first_valid = yes

	text = {
		trigger = { has_character_modifier = withdrawal_symptoms }
		localisation_key = String_assassins_drugs_withdrawal
	}
	text = {
		localisation_key = String_assassins_drugs
	}
}

# Used exclusively in tooltip_info_omen_tt
defined_text = {
	name = GetOmenModifierName
	use_first_valid = yes

	text = {
		trigger = { has_character_modifier = good_battle_omen }
		localisation_key = String_good_battle_omen
	}
	text = {
		trigger = { has_character_modifier = good_relationship_omen }
		localisation_key = String_good_relationship_omen
	}
	text = {
		trigger = { has_character_modifier = good_power_omen }
		localisation_key = String_good_power_omen
	}
	text = {
		trigger = { has_character_modifier = bad_battle_omen }
		localisation_key = String_bad_battle_omen
	}
	text = {
		trigger = { has_character_modifier = bad_relationship_omen }
		localisation_key = String_bad_relationship_omen
	}
	text = {
		trigger = { has_character_modifier = bad_power_omen }
		localisation_key = String_bad_power_omen
	}
}

# Used exclusively in tooltip_info_omen_tt
defined_text = {
	name = GetOmenResultReaction
	use_first_valid = yes

	text = {
		trigger = {
			has_character_modifier = good_battle_omen
			has_character_flag = negative_event_flag
		}
		localisation_key = String_good_battle_omen_bad_event
	}
	text = {
		trigger = {
			has_character_modifier = good_relationship_omen
			has_character_flag = negative_event_flag
		}
		localisation_key = String_good_relationship_omen_bad_event
	}
	text = {
		trigger = {
			has_character_modifier = good_power_omen
			has_character_flag = negative_event_flag
		}
		localisation_key = String_good_power_omen_bad_event
	}
	text = {
		trigger = {
			has_character_modifier = bad_battle_omen
			has_character_flag = negative_event_flag
		}
		localisation_key = String_bad_battle_omen_bad_event
	}
	text = {
		trigger = {
			has_character_modifier = bad_relationship_omen
			has_character_flag = negative_event_flag
		}
		localisation_key = String_bad_relationship_omen_bad_event
	}
	text = {
		trigger = {
			has_character_modifier = bad_power_omen
			has_character_flag = negative_event_flag
		}
		localisation_key = String_bad_power_omen_bad_event
	}

	text = {
		trigger = {
			has_character_modifier = good_battle_omen
			has_character_flag = positive_event_flag
		}
		localisation_key = String_good_battle_omen_good_event
	}
	text = {
		trigger = {
			has_character_modifier = good_relationship_omen
			has_character_flag = positive_event_flag
		}
		localisation_key = String_good_relationship_omen_good_event
	}
	text = {
		trigger = {
			has_character_modifier = good_power_omen
			has_character_flag = positive_event_flag
		}
		localisation_key = String_good_power_omen_good_event
	}
	text = {
		trigger = {
			has_character_modifier = bad_battle_omen
			has_character_flag = positive_event_flag
		}
		localisation_key = String_bad_battle_omen_good_event
	}
	text = {
		trigger = {
			has_character_modifier = bad_relationship_omen
			has_character_flag = positive_event_flag
		}
		localisation_key = String_bad_relationship_omen_good_event
	}
	text = {
		trigger = {
			has_character_modifier = bad_power_omen
			has_character_flag = positive_event_flag
		}
		localisation_key = String_bad_power_omen_good_event
	}
}

# Used exclusively in WOL.404
defined_text = {
	name = GetSeductionAstrologyPostScript
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = seduction_whats_your_zodiac }
		localisation_key = String_our_signs_are_very_compatible
	}
	text = {
		localisation_key = String_empty_space
	}
}

defined_text = {
	name = GetSelectedIngredient_1
	use_first_valid = yes

	# Herbs...
	text = {
		localisation_key = String_Hibiscus
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_herb1
			}
		}
	}
	text = {
		localisation_key = String_Ginger_Root
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_herb2
			}
		}
	}
	text = {
		localisation_key = String_Mandrake
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_herb3
			}
		}
	}
	text = {
		localisation_key = String_Lemon_Grass
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_herb4
			}
		}
	}
	text = {
		localisation_key = String_Nettles
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_herb5
			}
		}
	}
	text = {
		localisation_key = String_Wormwood
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_herb6
			}
		}
	}
	text = {
		localisation_key = String_Valerian
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_herb7
			}
		}
	}
	text = {
		localisation_key = String_Violet
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_herb8
			}
		}
	}
	text = {
		localisation_key = String_Yarrow
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_herb9
			}
		}
	}

	# Animal parts...
	text = {
		localisation_key = String_Gall_Bladder
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_animal1
			}
		}
	}
	text = {
		localisation_key = String_Kidney
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_animal2
			}
		}
	}
	text = {
		localisation_key = String_Eyeballs
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_animal3
			}
		}
	}
	text = {
		localisation_key = String_Cloven_hooves
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_animal4
			}
		}
	}
	text = {
		localisation_key = String_Antlers
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_animal5
			}
		}
	}
	text = {
		localisation_key = String_Snout
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_animal6
			}
		}
	}
	text = {
		localisation_key = String_Heart
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_animal7
			}
		}
	}
	text = {
		localisation_key = String_Liver
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_animal8
			}
		}
	}
	text = {
		localisation_key = String_Intestines
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_animal9
			}
		}
	}

	# Metals... (powder?)
	text = {
		localisation_key = String_Silver
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_metal_exotic1
			}
		}
	}
	text = { # liquid
		localisation_key = String_Mercury
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_metal_exotic2
			}
		}
	}
	text = { # liquid
		localisation_key = String_Aqua_Regia
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_metal_exotic3
			}
		}
	}
	text = { # liquid
		localisation_key = String_Aqua_Fortis
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_metal_exotic4
			}
		}
	}
	text = {
		localisation_key = String_Brimstone
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_metal_exotic5
			}
		}
	}
	text = {
		localisation_key = String_Gold
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_metal_exotic6
			}
		}
	}
	text = {
		localisation_key = String_Copper
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_metal_exotic7
			}
		}
	}
	text = {
		localisation_key = String_Iron
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_metal_exotic8
			}
		}
	}
	text = {
		localisation_key = String_Tin
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_metal_exotic9
			}
		}
	}
}

defined_text = {
	name = GetSelectedIngredient_2
	use_first_valid = yes

	# Herbs...
	text = {
		localisation_key = String_Hibiscus
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_herb1
			}
		}
	}
	text = {
		localisation_key = String_Ginger_Root
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_herb2
			}
		}
	}
	text = {
		localisation_key = String_Mandrake
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_herb3
			}
		}
	}
	text = {
		localisation_key = String_Lemon_Grass
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_herb4
			}
		}
	}
	text = {
		localisation_key = String_Nettles
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_herb5
			}
		}
	}
	text = {
		localisation_key = String_Wormwood
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_herb6
			}
		}
	}
	text = {
		localisation_key = String_Valerian
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_herb7
			}
		}
	}
	text = {
		localisation_key = String_Violet
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_herb8
			}
		}
	}
	text = {
		localisation_key = String_Yarrow
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_herb9
			}
		}
	}

	# Animal parts...
	text = {
		localisation_key = String_Gall_Bladder
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_animal1
			}
		}
	}
	text = {
		localisation_key = String_Kidney
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_animal2
			}
		}
	}
	text = {
		localisation_key = String_Eyeballs
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_animal3
			}
		}
	}
	text = {
		localisation_key = String_Cloven_hooves
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_animal4
			}
		}
	}
	text = {
		localisation_key = String_Antlers
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_animal5
			}
		}
	}
	text = {
		localisation_key = String_Snout
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_animal6
			}
		}
	}
	text = {
		localisation_key = String_Heart
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_animal7
			}
		}
	}
	text = {
		localisation_key = String_Liver
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_animal8
			}
		}
	}
	text = {
		localisation_key = String_Intestines
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_animal9
			}
		}
	}

	# Metals... (powder?)
	text = {
		localisation_key = String_Silver
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_metal_exotic1
			}
		}
	}
	text = { # liquid
		localisation_key = String_Mercury
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_metal_exotic2
			}
		}
	}
	text = { # liquid
		localisation_key = String_Aqua_Regia
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_metal_exotic3
			}
		}
	}
	text = { # liquid
		localisation_key = String_Aqua_Fortis
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_metal_exotic4
			}
		}
	}
	text = {
		localisation_key = String_Brimstone
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_metal_exotic5
			}
		}
	}
	text = {
		localisation_key = String_Gold
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_metal_exotic6
			}
		}
	}
	text = {
		localisation_key = String_Copper
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_metal_exotic7
			}
		}
	}
	text = {
		localisation_key = String_Iron
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_metal_exotic8
			}
		}
	}
	text = {
		localisation_key = String_Tin
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_2
				artifact_type = ingredient_metal_exotic9
			}
		}
	}
}

defined_text = {
	name = GetSelectedIngredient_1_property

	text = {
		localisation_key = String_is_surprisingly_fragrant
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_herb1 # Hibiscus
					artifact_type = ingredient_herb2 # Ginger Root
					artifact_type = ingredient_herb4 # Lemongrass
					artifact_type = ingredient_herb7 # Valerian
					artifact_type = ingredient_herb8 # Violet
					artifact_type = ingredient_herb9 # Yarrow
				}
			}
		}
	}
	text = {
		localisation_key = String_are_surprisingly_fragrant
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				artifact_type = ingredient_herb5 # Nettles
			}
		}
	}
	text = {
		localisation_key = String_is_faintly_fragrant
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_herb1 # Hibiscus
					artifact_type = ingredient_herb2 # Ginger Root
					artifact_type = ingredient_herb3 # Mandrake
					artifact_type = ingredient_herb4 # Lemongrass
					artifact_type = ingredient_herb7 # Valerian
					artifact_type = ingredient_herb8 # Violet
					artifact_type = ingredient_herb9 # Yarrow
				}
			}
		}
	}
	text = {
		localisation_key = String_are_faintly_fragrant
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_herb5   # Nettles
					artifact_type = ingredient_animal4 # Cloven Hooves
				}
			}
		}
	}
	text = {
		localisation_key = String_has_turned_to_dust
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_herb1 # Hibiscus
					artifact_type = ingredient_herb2 # Ginger Root
					artifact_type = ingredient_herb3 # Mandrake
					artifact_type = ingredient_herb4 # Lemongrass
					artifact_type = ingredient_herb6 # Wormwood
					artifact_type = ingredient_herb7 # Valerian
					artifact_type = ingredient_herb8 # Violet
					artifact_type = ingredient_herb9 # Yarrow
					artifact_type = ingredient_metal_exotic5 # Brimstone
				}
			}
		}
	}
	text = {
		localisation_key = String_have_turned_to_dust
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_herb5   # Nettles
					artifact_type = ingredient_animal4 # Cloven Hooves
					artifact_type = ingredient_animal5 # Antlers
					artifact_type = ingredient_animal3 # Eyeballs
				}
			}
		}
	}
	text = {
		localisation_key = String_reminds_me_of_them
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_herb3   # Mandrake
					artifact_type = ingredient_animal6 # Snout
				}
			}
			has_character_flag = dealing_with_inherited_ingredients
		}
	}
	text = {
		localisation_key = String_remind_me_of_them
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_animal4 # Cloven Hooves
					artifact_type = ingredient_animal3 # Eyeballs
				}
			}
			has_character_flag = dealing_with_inherited_ingredients
		}
	}
	text = {
		localisation_key = String_carries_an_unpleasant_smell
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_herb1   # Hibiscus
					artifact_type = ingredient_herb2   # Ginger Root
					artifact_type = ingredient_herb6   # Wormwood
					artifact_type = ingredient_herb7   # Valerian
					artifact_type = ingredient_herb8   # Violet
					artifact_type = ingredient_herb9   # Yarrow
					artifact_type = ingredient_animal1 # Gallbladder
					artifact_type = ingredient_animal2 # Kidney
					artifact_type = ingredient_animal6 # Snout

				}
			}
		}
	}
	text = {
		localisation_key = String_carry_an_unpleasant_smell
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_animal3 # Eyeballs
					artifact_type = ingredient_animal5 # Antlers
					artifact_type = ingredient_animal9 # Intestines
				}
			}
		}
	}

	text = {
		localisation_key = String_is_fantastically_shiny
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_metal_exotic1 # Silver
					artifact_type = ingredient_metal_exotic2 # Mercury
					artifact_type = ingredient_metal_exotic6 # Gold
					artifact_type = ingredient_metal_exotic7 # Copper
					artifact_type = ingredient_metal_exotic8 # Iron
					artifact_type = ingredient_metal_exotic9 # Tin
					artifact_type = ingredient_animal1 # Gallbladder
					artifact_type = ingredient_animal2 # Kidney
				}
			}
		}
	}
	text = {
		localisation_key = String_are_fantastically_shiny
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_animal3 # Eyeballs
					artifact_type = ingredient_animal4 # Cloven Hooves
					artifact_type = ingredient_animal5 # Antlers
				}
			}
		}
	}
	text = {
		localisation_key = String_should_not_be_touched
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_animal1 # Gallbladder
					artifact_type = ingredient_animal2 # Kidney
					artifact_type = ingredient_animal3 # Eyeballs
					artifact_type = ingredient_animal4 # Cloven Hooves
					artifact_type = ingredient_animal5 # Antlers
					artifact_type = ingredient_animal6 # Snout
					artifact_type = ingredient_animal7 # Heart
					artifact_type = ingredient_animal8 # Liver
					artifact_type = ingredient_animal9 # Intestines
					artifact_type = ingredient_metal_exotic3 # Aqua Regia
					artifact_type = ingredient_metal_exotic4 # Aqua Fortis
				}
			}
		}
	}
	text = {
		localisation_key = String_should_definitely_not_be_touched
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_animal1 # Gallbladder
					artifact_type = ingredient_animal2 # Kidney
					artifact_type = ingredient_animal3 # Eyeballs
					artifact_type = ingredient_animal4 # Cloven Hooves
					artifact_type = ingredient_animal5 # Antlers
					artifact_type = ingredient_animal6 # Snout
					artifact_type = ingredient_animal7 # Heart
					artifact_type = ingredient_animal8 # Liver
					artifact_type = ingredient_animal9 # Intestines
					artifact_type = ingredient_metal_exotic3 # Aqua Regia
					artifact_type = ingredient_metal_exotic4 # Aqua Fortis
				}
			}
		}
	}
	text = {
		localisation_key = String_would_make_most_people_uncomfortable
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_animal1 # Gallbladder
					artifact_type = ingredient_animal2 # Kidney
					artifact_type = ingredient_animal3 # Eyeballs		PLURAL
					artifact_type = ingredient_animal4 # Cloven Hooves	PLURAL
					artifact_type = ingredient_animal5 # Antlers		PLURAL
					artifact_type = ingredient_animal6 # Snout
					artifact_type = ingredient_animal7 # Heart
					artifact_type = ingredient_animal8 # Liver
					artifact_type = ingredient_animal9 # Intestines		PLURAL
					artifact_type = ingredient_metal_exotic3 # Aqua Regia
					artifact_type = ingredient_metal_exotic4 # Aqua Fortis
				}
			}
		}
	}
	text = {
		localisation_key = String_is_glass_jar
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_herb3   # Mandrake
					artifact_type = ingredient_animal1 # Gallbladder
					artifact_type = ingredient_animal2 # Kidney
					artifact_type = ingredient_animal6 # Snout
					artifact_type = ingredient_animal7 # Heart
					artifact_type = ingredient_animal8 # Liver
				}
			}
		}
	}
	text = {
		localisation_key = String_are_in_glass_jar
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_animal3 # Eyeballs		PLURAL
					artifact_type = ingredient_animal4 # Cloven Hooves	PLURAL
					artifact_type = ingredient_animal5 # Antlers		PLURAL
					artifact_type = ingredient_animal9 # Intestines 	PLURAL
				}
			}
		}
	}
	text = {
		localisation_key = String_has_an_eerie_color
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_herb6 # Wormwood
					artifact_type = ingredient_herb7 # Valerian
					artifact_type = ingredient_metal_exotic2 # Mercury
					artifact_type = ingredient_metal_exotic3 # Aqua Regia
					artifact_type = ingredient_metal_exotic4 # Aqua Fortis
				}
			}
		}
	}
	text = {
		localisation_key = String_have_an_eerie_color
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_herb5   # Nettles		PLURAL
					artifact_type = ingredient_animal3 # Eyeballs		PLURAL
					artifact_type = ingredient_animal4 # Cloven Hooves	PLURAL
					artifact_type = ingredient_animal5 # Antlers		PLURAL
					artifact_type = ingredient_animal9 # Intestines		PLURAL
				}
			}
		}
	}
	text = {
		localisation_key = String_is_disgusting
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_animal1 # Gallbladder
					artifact_type = ingredient_animal2 # Kidney
					artifact_type = ingredient_animal6 # Snout
					artifact_type = ingredient_animal7 # Heart
					artifact_type = ingredient_animal8 # Liver
				}
			}
		}
	}
	text = {
		localisation_key = String_are_disgusting
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_animal3 # Eyeballs		PLURAL
					artifact_type = ingredient_animal4 # Cloven Hooves	PLURAL
					artifact_type = ingredient_animal5 # Antlers		PLURAL
				}
			}
		}
	}
	text = {
		localisation_key = String_might_take_up_too_much_space
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				NOT = { artifact_type = ingredient_metal_exotic6 } # Gold
			}
			society_member_of = hermetics
			has_character_flag = built_laboratory
		}
	}
	text = {
		localisation_key = String_does_not_send_desired_message
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_animal1 # Gallbladder
					artifact_type = ingredient_animal2 # Kidney
					artifact_type = ingredient_animal6 # Snout
					artifact_type = ingredient_animal7 # Heart
					artifact_type = ingredient_animal8 # Liver
					artifact_type = ingredient_metal_exotic5 # Brimstone
					artifact_type = ingredient_herb6 # Wormwood
					artifact_type = ingredient_herb3 # Mandrake
				}
			}
			NOT = { society_member_of = hermetics }
		}
	}
	text = {
		localisation_key = String_do_not_send_desired_message
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_animal3 # Eyeballs		PLURAL
					artifact_type = ingredient_animal4 # Cloven Hooves	PLURAL
					artifact_type = ingredient_animal5 # Antlers		PLURAL
					artifact_type = ingredient_animal9 # Intestines		PLURAL
				}
			}
			NOT = { society_member_of = hermetics }
		}
	}
	text = {
		localisation_key = String_does_not_contribute_to_the_decor
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {

					artifact_type = ingredient_herb1 # Hibiscus
					artifact_type = ingredient_herb2 # Ginger Root
					artifact_type = ingredient_herb3 # Mandrake
					artifact_type = ingredient_herb4 # Lemongrass
					artifact_type = ingredient_herb6 # Wormwood
					artifact_type = ingredient_herb7 # Valerian
					artifact_type = ingredient_herb8 # Violet
					artifact_type = ingredient_herb9 # Yarrow
					artifact_type = ingredient_animal1 # Gallbladder
					artifact_type = ingredient_animal2 # Kidney
					artifact_type = ingredient_animal6 # Snout
					artifact_type = ingredient_animal7 # Heart
					artifact_type = ingredient_animal8 # Liver
					artifact_type = ingredient_herb6 # Wormwood
					artifact_type = ingredient_herb3 # Mandrake
					artifact_type = ingredient_metal_exotic5 # Brimstone
					artifact_type = ingredient_metal_exotic7 # Copper
					artifact_type = ingredient_metal_exotic8 # Iron
					artifact_type = ingredient_metal_exotic9 # Tin
				}
			}
			NOT = { society_member_of = hermetics }
		}
	}
	text = {
		localisation_key = String_do_not_contribute_to_the_decor
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_herb5   # Nettles		PLURAL
					artifact_type = ingredient_animal3 # Eyeballs		PLURAL
					artifact_type = ingredient_animal4 # Cloven Hooves	PLURAL
					artifact_type = ingredient_animal5 # Antlers		PLURAL
					artifact_type = ingredient_animal9 # Intestines		PLURAL
				}
			}
			NOT = { society_member_of = hermetics }
		}
	}
	text = {
		localisation_key = String_is_somewhat_pretty
		trigger = {
			OR = {
				any_artifact = {
					has_artifact_flag = selected_ingredient_1
					OR = {
						artifact_type = ingredient_herb1 # Hibiscus
						artifact_type = ingredient_herb7 # Valerian
						artifact_type = ingredient_herb8 # Violet
						artifact_type = ingredient_herb9 # Yarrow
						artifact_type = ingredient_metal_exotic6 # Gold
					}
				}
				AND = {
					society_member_of = hermetics
					any_artifact = {
						has_artifact_flag = selected_ingredient_1
						OR = {
							artifact_type = ingredient_metal_exotic3 # Aqua Regia
							artifact_type = ingredient_metal_exotic4 # Aqua Fortis
						}
					}
				}
			}
		}
	}
	text = {
		localisation_key = String_are_somewhat_pretty
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_animal9 # Intestines		PLURAL
					artifact_type = ingredient_animal3 # Eyeballs		PLURAL
				}
			}
			is_devil_worshiper_trigger = yes
		}
	}
	text = {
		localisation_key = String_makes_me_shiver
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_animal1 # Gallbladder
					artifact_type = ingredient_animal2 # Kidney
					artifact_type = ingredient_animal6 # Snout
					artifact_type = ingredient_animal7 # Heart
					artifact_type = ingredient_animal8 # Liver
					artifact_type = ingredient_metal_exotic3 # Aqua Regia
					artifact_type = ingredient_metal_exotic4 # Aqua Fortis
				}
			}
			is_devil_worshiper_trigger = no
		}
	}
	text = {
		localisation_key = String_make_me_shiver
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_animal3 # Eyeballs		PLURAL
					artifact_type = ingredient_animal4 # Cloven Hooves	PLURAL
					artifact_type = ingredient_animal5 # Antlers		PLURAL
					artifact_type = ingredient_animal9 # Intestines		PLURAL
				}
			}
			is_devil_worshiper_trigger = no
		}
	}
	text = {
		localisation_key = String_might_possess_hidden_uses
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
			}
			society_member_of = hermetics
		}
	}
	text = {
		localisation_key = String_reeks
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_herb6   # Wormwood
					artifact_type = ingredient_animal1 # Gallbladder
					artifact_type = ingredient_animal2 # Kidney
					artifact_type = ingredient_animal6 # Snout
					artifact_type = ingredient_animal7 # Heart
					artifact_type = ingredient_animal8 # Liver
					artifact_type = ingredient_metal_exotic5 # Brimstone
				}
			}
		}
	}
	text = {
		localisation_key = String_reek
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_animal3 # Eyeballs		PLURAL
					artifact_type = ingredient_animal4 # Cloven Hooves	PLURAL
					artifact_type = ingredient_animal5 # Antlers		PLURAL
					artifact_type = ingredient_animal9 # Intestines		PLURAL

				}
			}
		}
	}
	text = {
		localisation_key = String_glitters
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_metal_exotic1 # Silver
					artifact_type = ingredient_metal_exotic2 # Mercury
					artifact_type = ingredient_metal_exotic3 # Aqua Regia
					artifact_type = ingredient_metal_exotic4 # Aqua Fortis
					artifact_type = ingredient_metal_exotic6 # Gold
					artifact_type = ingredient_metal_exotic7 # Copper
					artifact_type = ingredient_metal_exotic8 # Iron
					artifact_type = ingredient_metal_exotic9 # Tin
				}
			}
		}
	}
	text = {
		localisation_key = String_glitter
		trigger = {
			any_artifact = {
				has_artifact_flag = selected_ingredient_1
				OR = {
					artifact_type = ingredient_animal9 # Intestines		PLURAL
					artifact_type = ingredient_animal3 # Eyeballs		PLURAL
				}
			}
			is_devil_worshiper_trigger = yes
		}
	}
}

# Work-around to have dynamic titles in an event - used only in MNM.7855
defined_text = {
	name = GetDemonHuntersEventTitle
	use_first_valid = yes

	text = {
		localisation_key = EVTTITLE_MNM_7855_A
		trigger = { has_character_flag = DW_was_attacked_by_the_slayer }
	}
	text = {
		localisation_key = EVTTITLE_MNM_7855_B
		trigger = { has_character_flag = DW_was_attacked_by_angry_villagers }
	}
	text = {
		localisation_key = EVTTITLE_MNM_7855_C
		trigger = { has_character_flag = DW_was_attacked_by_demon_hunters }
	}
	text = {
		localisation_key = EVTTITLE_MNM_7855_D
		trigger = { has_character_flag = DW_was_attacked_by_lone_demon_hunter }
	}
	text = {
		localisation_key = EVTTITLE_MNM_7855_E
		trigger = { has_character_flag = DW_was_attacked_by_righteous_knights }
	}
	text = {
		localisation_key = EVTTITLE_MNM_7855_A_again
		trigger = { has_character_flag = DW_was_attacked_by_the_slayer_again }
	}
	text = {
		localisation_key = EVTTITLE_MNM_7855_B_again
		trigger = { has_character_flag = DW_was_attacked_by_angry_villagers_again }
	}
	text = {
		localisation_key = EVTTITLE_MNM_7855_C_again
		trigger = { has_character_flag = DW_was_attacked_by_demon_hunters_again }
	}
	text = {
		localisation_key = EVTTITLE_MNM_7855_D_again
		trigger = { has_character_flag = DW_was_attacked_by_lone_demon_hunter_again }
	}
	text = {
		localisation_key = EVTTITLE_MNM_7855_E_again
		trigger = { has_character_flag = DW_was_attacked_by_righteous_knights_again }
	}
}

# Noun, singular
defined_text = {
	name = GetFriendEnjoyableQuirk

	text = {
		localisation_key = String_way_with_words
		trigger = {
			OR = {
				has_pleasant_trait_trigger = yes
				diplomacy >= 20
			}
		}
	}
	text = {
		localisation_key = String_love_of_poetry
		trigger = { trait = poet }
	}
	text = {
		localisation_key = String_sharp_wit
		trigger = { is_smart_trigger = yes }
	}
	text = {
		localisation_key = String_fighting_spirit
		trigger = {
			OR = {
				is_maimed_trigger = yes
				trait = brilliant_strategist
			}
		}
	}
	text = {
		localisation_key = String_fascination_with_plants
		trigger = { trait = gardener }
	}
	text = {
		localisation_key = String_morbid_sense_of_humor
		trigger = { is_evil_trigger = yes }
	}
	text = {
		localisation_key = String_gentle_spirit
		trigger = {
			OR = {
				is_benevolent_trigger = yes
				is_dumb_trigger = yes
			}
		}
	}
	text = {
		localisation_key = String_what_makes_a_good_person
	}
	text = {
		localisation_key = String_mischieveous_sense_of_humor
	}
	text = {
		localisation_key = String_challenging_me
	}
	text = {
		localisation_key = String_infectious_smile
		trigger = {
			OR = {
				has_lifestyle_diplomacy_trigger = yes
				has_education_diplomacy_trigger = yes
				has_attractive_trait_trigger = yes
			}
		}
	}
	text = {
		localisation_key = String_taste_in_music
	}
	text = {
		localisation_key = String_appreciation_for_small_things
		trigger = {
			NOT = { trait = envious }
		}
	}
	text = {
		localisation_key = String_cracking_knuckles
		trigger = { trait = wroth }
	}
	text = {
		localisation_key = String_optimistic_outlook_on_life
		trigger = {
			OR = {
				has_pleasant_trait_trigger = yes
				has_benevolent_trait_trigger = yes
			}
		}
	}
	text = {
		localisation_key = String_innocence
		trigger = {
			has_pleasant_trait_trigger = yes
			practical_age < 40
		}
	}
	text = {
		localisation_key = String_jaded_view_of_romance
		trigger = {
			OR = {
				trait = cynical
				trait = paranoid
				is_evil_trigger = yes
				has_unpleasant_personality_trigger = yes
			}
		}
	}
}

# Noun, singular
defined_text = {
	name = GetLoverEnjoyableQuirk

	text = {
		localisation_key = String_way_with_words
		trigger = {
			OR = {
				has_pleasant_trait_trigger = yes
				diplomacy >= 20
			}
		}
	}
	text = {
		localisation_key = String_love_of_poetry
		trigger = { trait = poet }
	}
	text = {
		localisation_key = String_sharp_wit
		trigger = { is_smart_trigger = yes }
	}
	text = {
		localisation_key = String_boldness
		trigger = {
			OR = {
				trait = brave
				trait = brilliant_strategist
				this_is_sea_raider_trigger = yes
			}
			NOT = { trait = craven }
		}
	}
	text = {
		localisation_key = String_love_of_life
		trigger = {
			NOR = {
				trait = depressed
				trait = stressed
			}
		}
	}
	text = {
		localisation_key = String_morbid_sense_of_humor
		trigger = { is_evil_trigger = yes }
	}
	text = {
		localisation_key = String_gentle_spirit
		trigger = {
			OR = {
				is_benevolent_trigger = yes
				is_dumb_trigger = yes
			}
		}
	}
	text = {
		localisation_key = String_honesty
		trigger = { trait = honest }
	}
	text = {
		localisation_key = String_mischieveous_sense_of_humor
		trigger = {
			OR = {
				has_vice_trigger = yes
				has_impious_trait_trigger= yes
			}
			is_dumb_trigger = no
		}
	}
	text = {
		localisation_key = String_sense_of_humor
	}
	text = {
		localisation_key = String_infectious_smile
		trigger = {
			OR = {
				has_lifestyle_diplomacy_trigger = yes
				has_education_diplomacy_trigger = yes
				has_attractive_trait_trigger = yes
			}
		}
	}
	text = {
		localisation_key = String_seeing_the_best_in_people
		trigger = { trait = trusting }
	}
	text = {
		localisation_key = String_cracking_knuckles
		trigger = { trait = wroth }
	}
	text = {
		localisation_key = String_optimism
		trigger = {
			OR = {
				has_pleasant_trait_trigger = yes
				has_benevolent_trait_trigger = yes
			}
		}
	}
	text = {
		localisation_key = String_innocence
		trigger = {
			has_pleasant_trait_trigger = yes
			practical_age < 40
		}
	}
	text = {
		localisation_key = String_jaded_view_on_romance
		trigger = {
			OR = {
				trait = cynical
				trait = paranoid
				is_evil_trigger = yes
				has_unpleasant_personality_trigger = yes
				is_devil_worshiper_trigger = yes
			}
		}
	}
}

### Chinese flavor

# Note that these are a little dry sounding and don't necessarily mention China by name. How to use in a sentence:
# "As we discuss [adventurous_spirit.GetHerHis] travels to the [the_protector_general.Offmap.GetFullName] [adventurous_spirit.GetSheHe] speaks passionately about [adventurous_spirit.GetChineseConvoTopic]"
defined_text = {
	name = GetChineseConvoTopic

	text = {
		localisation_key = String_such_a_wealthy_realm
		trigger = { china_is_fine_trigger = yes }
	}
	text = {
		localisation_key = String_such_white_papers
		trigger = { trait = poet }
	}
	text = {
		localisation_key = String_so_full_of_life
	}
	text = {
		localisation_key = String_the_street_jugglers
	}
	text = {
		localisation_key = String_the_many_festivals
	}
	text = {
		localisation_key = String_crowded_water_routes
	}
	text = {
		localisation_key = String_artisan_potters
	}
	text = {
		localisation_key = String_the_melody_of_Chinese_language
		trigger = {
			OR = {
				learning >= 15
				has_character_modifier = multilingual
				has_character_modifier = student_of_language
			}
		}
	}
	text = {
		localisation_key = String_the_magnificent_architecture
	}
	text = {
		localisation_key = String_a_religious_ceremony
	}
	text = {
		localisation_key = String_a_pleasure_trip_on_a_lake
	}
	text = {
		localisation_key = String_the_construction_of_Chinese_boats
	}
	text = {
		localisation_key = String_the_Chinese_food
	}
	text = {
		localisation_key = String_the_intricacies_of_Chinese_government
	}
	text = {
		localisation_key = String_the_artistic_sensibility
	}
	text = {
		localisation_key = String_friendly_to_outsiders
		trigger = {
			offmap_china = {
				offmap_ruler = {
					culture = mongol
				}
			}
		}
	}
}

# Must only be used after having visited China, as it talks in past tense and uses pronouns, eg: "When asked about [From.GetHerHis] travels, [From.GetSheHe] just mutters about [adventurous_spirit.GetNegativeChineseConvoTopic]."
defined_text = {
	name = GetNegativeChineseConvoTopic

	text = {
		localisation_key = String_too_much_people
	}
	text = {
		localisation_key = String_firecrackers
	}
	text = {
		localisation_key = String_bad_weather_and_language_barrier
	}
	# Pirates?
	# Disdain for traders
}


# Example: "I had a lovely conversation with myself the other day! I and [Root.GetFirstName] spoke for hours about [GetRootMatchingPersonalityStreak]."
defined_text = {
	name = GetRootMatchingPersonalityStreak

	# General personality groups
	text = {
		localisation_key = String_personality_benevolent
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			is_benevolent_trigger = yes
			ROOT = { is_benevolent_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_evil
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			is_evil_trigger = yes
			ROOT = { is_evil_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_pious
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			is_pious_trigger = yes
			ROOT = { is_pious_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_impious
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			is_impious_trigger = yes
			ROOT = { is_impious_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_pleasant
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_pleasant_personality_trigger = yes
			ROOT = { has_pleasant_personality_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_unpleasant
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_unpleasant_personality_trigger = yes
			ROOT = { has_unpleasant_personality_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_attractive
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			trait = attractive
			ROOT = { trait = attractive }
		}
	}
	text = {
		localisation_key = String_personality_unattractive
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			trait = ugly
			ROOT = { trait = ugly }
		}
	}
	text = {
		localisation_key = String_personality_smart_0
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			is_smart_trigger = yes
			ROOT = { is_smart_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_smart_1
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			is_smart_trigger = yes
			ROOT = { is_smart_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_smart_2
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			is_smart_trigger = yes
			ROOT = { is_smart_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_dumb
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			is_dumb_trigger = yes
			ROOT = { is_dumb_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_strong
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			is_strong_trigger = yes
			ROOT = { is_strong_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_weak
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			is_weak_trigger = yes
			ROOT = { is_weak_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_disease_symptom
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_symptom_trigger = yes
			ROOT = { has_symptom_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_disease
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			is_ill = yes
			ROOT = { is_ill = yes }
		}
	}
	text = {
		localisation_key = String_personality_injury
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_injury_trigger = yes
			ROOT = { has_injury_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_medium_disability
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_medium_disability_trigger = yes
			ROOT = { has_medium_disability_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_stressed_depressed
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			OR = {
				trait = stressed
				trait = depressed
			}
			ROOT = {
				OR = {
					trait = stressed
					trait = depressed
				}
			}
		}
	}

	# Education...
	text = {
		localisation_key = String_personality_top_education
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_top_tier_education_trait_trigger = yes
			ROOT = { has_top_tier_education_trait_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_same_top_education
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_top_tier_education_trait_trigger = yes
			ROOT = { has_top_tier_education_trait_trigger = yes }

			trigger_if = {
				limit = { has_education_diplomacy_trigger = yes }
				ROOT = { has_education_diplomacy_trigger = yes }
			}
			trigger_else_if = {
				limit = { has_education_martial_trigger = yes }
				ROOT = { has_education_martial_trigger = yes }
			}
			trigger_else_if = {
				limit = { has_education_stewardship_trigger = yes }
				ROOT = { has_education_stewardship_trigger = yes }
			}
			trigger_else_if = {
				limit = { has_education_intrigue_trigger = yes }
				ROOT = { has_education_intrigue_trigger = yes }
			}
			trigger_else_if = {
				limit = { has_education_learning_trigger = yes }
				ROOT = { has_education_learning_trigger = yes }
			}
		}
	}
	text = {
		localisation_key = String_personality_education_diplomacy
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_education_diplomacy_trigger = yes
			ROOT = { has_education_diplomacy_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_education_martial
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_education_martial_trigger = yes
			ROOT = { has_education_martial_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_education_stewardship
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_education_stewardship_trigger = yes
			ROOT = { has_education_stewardship_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_education_intrigue
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_education_intrigue_trigger = yes
			ROOT = { has_education_intrigue_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_education_learning
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_education_learning_trigger = yes
			ROOT = { has_education_learning_trigger = yes }
		}
	}

	# Lifestyle/misc
	text = {
		localisation_key = String_personality_gardener
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			trait = gardener
			ROOT = { trait = gardener }
		}
	}
	text = {
		localisation_key = String_personality_hunter
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			trait = hunter
			ROOT = { trait = hunter }
		}
	}
	text = {
		localisation_key = String_personality_poet
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			trait = poet
			ROOT = { trait = poet }
		}
	}
	text = {
		localisation_key = String_personality_falconer
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			trait = falconer
			ROOT = { trait = falconer }
		}
	}
	text = {
		localisation_key = String_personality_mystic
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			trait = mystic
			ROOT = { trait = mystic }
		}
	}
	text = {
		localisation_key = String_personality_learned
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			is_learned_trigger = yes
			ROOT = { is_learned_trigger = yes }
		}
	}
	text = {
		localisation_key = String_personality_council_member
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_job_title = yes
			ROOT = { has_job_title = yes }
		}
	}
	text = {
		localisation_key = String_personality_council_member_same_liege
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			same_liege = ROOT

			OR = {
				has_job_title = yes
				is_voter = yes
			}

			ROOT = {
				OR = {
					has_job_title = yes
					is_voter = yes
				}
			}
		}
	}
	text = {
		localisation_key = String_personality_old_and_wistful
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			age >= 70
			NOT = { trait = cynical }

			ROOT = {
				age >= 70
				NOT = { trait = cynical }
			}
		}
	}
	text = {
		localisation_key = String_personality_young_cynics
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			age < 20
			ROOT = { age < 20 }

			OR = { #at least one must be a cynic
				trait = cynical
				ROOT = { trait = cynical }
			}
		}
	}
	text = {
		localisation_key = String_personality_same_society
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			same_society_as = ROOT
		}
	}
	text = {
		localisation_key = String_personality_same_culture
		weight_multiplier = {
			factor = 1
		}
		trigger = {
			culture_group = ROOT
		}
	}
	text = {
		localisation_key = String_personality_same_religion
		weight_multiplier = {
			factor = 1
		}
		trigger = {
			religion = ROOT
		}
	}
	text = {
		localisation_key = String_personality_landscape
		weight_multiplier = {
			factor = 1
		}
		trigger = {
			same_realm = ROOT
		}
	}
	text = {
		localisation_key = String_personality_artifacts
		weight_multiplier = {
			factor = 1
		}
		trigger = {
			num_of_artifacts >= 1
			ROOT = {
				num_of_artifacts >= 4
			}
		}
	}

	# Same life style focus...
	text = {
		localisation_key = String_personality_focus_war
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_focus = focus_war
			ROOT = { has_focus = focus_war }
		}
	}
	text = {
		localisation_key = String_personality_focus_hunting
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_focus = focus_hunting
			ROOT = { has_focus = focus_hunting }
		}
	}
	text = {
		localisation_key = String_personality_focus_seduction
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_focus = focus_seduction
			ROOT = { has_focus = focus_seduction }
		}
	}
	text = {
		localisation_key = String_personality_focus_intrigue
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_focus = focus_intrigue
			ROOT = { has_focus = focus_intrigue }
		}
	}
	text = {
		localisation_key = String_personality_focus_carousing
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_focus = focus_carousing
			ROOT = { has_focus = focus_carousing }
		}
	}
	text = {
		localisation_key = String_personality_focus_family
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_focus = focus_family
			ROOT = { has_focus = focus_family }
		}
	}
	text = {
		localisation_key = String_personality_focus_theology
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_focus = focus_theology
			ROOT = { has_focus = focus_theology }
		}
	}
	text = {
		localisation_key = String_personality_focus_scholarship
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_focus = focus_scholarship
			ROOT = { has_focus = focus_scholarship }
		}
	}
	text = {
		localisation_key = String_personality_focus_rulership
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_focus = focus_rulership
			ROOT = { has_focus = focus_rulership }
		}
	}
	text = {
		localisation_key = String_personality_focus_business
		weight_multiplier = {
			factor = 10
		}
		trigger = {
			has_focus = focus_business
			ROOT = { has_focus = focus_business }
		}
	}

	fallback_text = {
		localisation_key = String_personality_fallback
	}
}

defined_text = {
	name = GetMediumDisabilityDesc

	text = {
		localisation_key = String_GetMediumDisabilityDesc_one_legged
		trigger = { trait = one_legged }
	}
	text = {
		localisation_key = String_GetMediumDisabilityDesc_one_handed
		trigger = { trait = one_handed }
	}
	text = {
		localisation_key = String_GetMediumDisabilityDesc_one_eyed
		trigger = {	trait = one_eyed }
	}
	text = {
		localisation_key = String_GetMediumDisabilityDesc_clubfooted
		trigger = { trait = clubfooted }
	}
	text = {
		localisation_key = String_GetMediumDisabilityDesc_hunchback
		trigger = { trait = hunchback }
	}
	text = {
		localisation_key = String_GetMediumDisabilityDesc_dwarf
		trigger = { trait = dwarf }
	}
}

### For sending a Eunuch/Concubine to China...

# Gets general impression, depending on how much Grace you gained from it, essentially...
defined_text = {
	name = GetImpressionOfTribute
	use_first_valid = yes

	text = {
		localisation_key = String_negative_impression_eunuch
		trigger = {
			ROOT = {
				has_character_flag = sent_bad_tribute
				has_character_flag = sent_eunuch_tribute
			}
		}
	}
	text = {
		localisation_key = String_decent_impression_eunuch
		trigger = {
			ROOT = {
				has_character_flag = sent_decent_tribute
				has_character_flag = sent_eunuch_tribute
			}
		}
	}
	text = {
		localisation_key = String_positive_impression_eunuch
		trigger = {
			ROOT = {
				has_character_flag = sent_great_tribute
				has_character_flag = sent_eunuch_tribute
			}
		}
	}
	text = {
		localisation_key = String_negative_impression_concubine
		trigger = {
			ROOT = {
				has_character_flag = sent_bad_tribute
				has_character_flag = sent_concubine_tribute
			}
		}
	}
	text = {
		localisation_key = String_decent_impression_concubine
		trigger = {
			ROOT = {
				has_character_flag = sent_decent_tribute
				has_character_flag = sent_concubine_tribute
			}
		}
	}
	text = {
		localisation_key = String_positive_impression_concubine
		trigger = {
			ROOT = {
				has_character_flag = sent_great_tribute
				has_character_flag = sent_concubine_tribute
			}
		}
	}
	fallback_text = {
		localisation_key = String_tribute_impression_fallback
	}
}

#... Eunuch: If the Grace gain was very low...
defined_text = {
	name = GetNegativeImpressionOfEunuch

	text = {
		localisation_key = String_eunuch_is_dumb
		trigger = { is_dumb_trigger = yes }
		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 5
				trait = dull
			}
			mult_modifier = {
				factor = 5
				trait = slow
			}
			mult_modifier = {
				factor = 10
				trait = imbecile
			}
		}
	}
	text = {
		localisation_key = String_eunuch_is_ugly
		trigger = {
			is_unattractive_trigger = yes
		}
		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 10
				trait = ugly
			}
			mult_modifier = {
				factor = 1.5
				is_weak_trigger = yes
			}
		}
	}
	text = {
		localisation_key = String_eunuch_is_uncharming
		trigger = {
			is_adult = yes
			OR = {
				is_impious_trigger = yes
				is_evil_trigger = yes
				has_unpleasant_personality_trigger = yes
			}
		}
		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 0.5
				is_smart_trigger = yes
			}
			mult_modifier = {
				factor = 0.1
				is_strong_trigger = yes
			}
			mult_modifier = {
				factor = 2
				is_impious_trigger = yes
				is_evil_trigger = yes
			}
			mult_modifier = {
				factor = 2
				is_evil_trigger = yes
				has_unpleasant_personality_trigger = yes
			}
			mult_modifier = {
				factor = 2
				is_impious_trigger = yes
				has_unpleasant_personality_trigger = yes
			}
		}
	}
	text = {
		localisation_key = String_eunuch_has_bad_education
		trigger = {
			has_bottom_tier_education_trait_trigger = yes
		}
		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 0.5
				is_smart_trigger = yes
			}
		}
	}
	text = {
		localisation_key = String_eunuch_has_bad_stats_adult
		trigger = {
			is_adult = yes
			diplomacy < 6
			martial < 6
			stewardship < 6
			intrigue < 6
			learning < 6
		}
		weight_multiplier = {
			factor = 10
		}
	}
	text = {
		localisation_key = String_eunuch_has_bad_stats_child
		trigger = {
			is_adult = no
			diplomacy < 2
			martial < 2
			stewardship < 2
			intrigue < 2
			learning < 2
		}
		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 0.5
				is_smart_trigger = yes
			}
		}
	}
	fallback_text = {
		localisation_key = String_eunuch_fallback_bad
	}
}

#... Eunuch: If the Grace gain was OK...
defined_text = {
	name = GetDecentImpressionOfEunuch

	text = {
		localisation_key = String_eunuch_has_decent_education
		trigger = { has_medium_education_trait_trigger = yes }
	}
	text = {
		localisation_key = String_eunuch_is_close_relative_decent
		trigger = {	is_close_relative = ROOT }
	}
	text = {
		localisation_key = String_eunuch_has_decent_diplo
		trigger = {	diplomacy >= 10 }
	}
	text = {
		localisation_key = String_eunuch_has_decent_martial
		trigger = {	martial >= 10 }
	}
	text = {
		localisation_key = String_eunuch_has_decent_stewardship
		trigger = {	stewardship >= 10 }
	}
	text = {
		localisation_key = String_eunuch_has_decent_intrigue
		trigger = {	intrigue >= 10 }
	}
	text = {
		localisation_key = String_eunuch_has_decent_learning
		trigger = {	learning >= 10 }
	}
	text = {
		localisation_key = String_eunuch_is_strong_decent
		trigger = {	is_strong_trigger = yes}
	}
	text = {
		localisation_key = String_eunuch_is_smart_decent
		trigger = { is_smart_trigger = yes }
	}
	text = {
		localisation_key = String_eunuch_is_attractive_decent
		trigger = { trait = attractive }
	}
	text = {
		localisation_key = String_eunuch_is_architect_decent
		trigger = { trait = architect }
	}
	text = {
		localisation_key = String_eunuch_is_strategist_decent
		trigger = { trait = strategist }
	}
	text = {
		localisation_key = String_eunuch_is_scholar_decent
		trigger = { trait = scholar }
	}
	text = {
		localisation_key = String_eunuch_is_faqih_decent
		trigger = { trait = faqih }
	}
	fallback_text = {
		localisation_key = String_eunuch_fallback_decent
	}
}

#... Eunuch: If the Grace gain was great...!
defined_text = {
	name = GetPositiveImpressionOfEunuch

	text = {
		localisation_key = String_eunuch_has_top_education
		trigger = { has_top_tier_education_trait_trigger = yes }
	}
	text = {
		localisation_key = String_eunuch_is_close_relative
		trigger = {	is_close_relative = ROOT }
	}
	text = {
		localisation_key = String_eunuch_has_high_diplo
		trigger = {	diplomacy >= 16 }
	}
	text = {
		localisation_key = String_eunuch_has_high_martial
		trigger = {	martial >= 16 }
	}
	text = {
		localisation_key = String_eunuch_has_high_stewardship
		trigger = {	stewardship >= 16 }
	}
	text = {
		localisation_key = String_eunuch_has_high_intrigue
		trigger = {	intrigue >= 16 }
	}
	text = {
		localisation_key = String_eunuch_has_high_learning
		trigger = {	learning >= 16 }
	}
	text = {
		localisation_key = String_eunuch_is_strong
		trigger = {	is_strong_trigger = yes}
	}
	text = {
		localisation_key = String_eunuch_is_smart
		trigger = { is_smart_trigger = yes }
	}
	text = {
		localisation_key = String_eunuch_is_attractive
		trigger = { trait = attractive }
	}
	text = {
		localisation_key = String_eunuch_is_architect
		trigger = { trait = architect }
	}
	text = {
		localisation_key = String_eunuch_is_strategist
		trigger = { trait = strategist }
	}
	text = {
		localisation_key = String_eunuch_is_scholar
		trigger = { trait = scholar }
	}
	text = {
		localisation_key = String_eunuch_is_faqih
		trigger = { trait = faqih }
	}
	fallback_text = {
		localisation_key = String_eunuch_fallback_great
	}
}

#... Concubine: If the Grace gain was very low...
defined_text = {
	name = GetNegativeImpressionOfConcubine

	text = {
		localisation_key = String_concubine_is_dumb
		trigger = { is_dumb_trigger = yes }
	}
	text = {
		localisation_key = String_concubine_is_ugly
		trigger = {
			is_unattractive_trigger = yes
		}
	}
	text = {
		localisation_key = String_concubine_is_uncharming
		trigger = {
			is_adult = yes
			OR = {
				is_impious_trigger = yes
				is_evil_trigger = yes
				has_unpleasant_personality_trigger = yes
			}
		}
	}
	text = {
		localisation_key = String_concubine_has_bad_education
		trigger = {	has_bottom_tier_education_trait_trigger = yes }
	}
	text = {
		localisation_key = String_concubine_has_bad_stats_adult
		trigger = {
			is_adult = yes
			diplomacy < 6
			martial < 6
			stewardship < 6
			intrigue < 6
			learning < 6
		}
	}
	text = {
		localisation_key = String_concubine_has_bad_stats_child
		trigger = {
			is_adult = no
			diplomacy < 2
			martial < 2
			stewardship < 2
			intrigue < 2
			learning < 2
		}
	}
	fallback_text = {
		localisation_key = String_concubine_fallback_bad
	}
}

#... Concubine: If the Grace gain was OK...
defined_text = {
	name = GetDecentImpressionOfConcubine

	text = {
		localisation_key = String_concubine_has_decent_education
		trigger = { has_medium_education_trait_trigger = yes }
	}
	text = {
		localisation_key = String_concubine_is_close_relative_decent
		trigger = {	is_close_relative = ROOT }
	}
	text = {
		localisation_key = String_concubine_has_decent_diplo
		trigger = {	diplomacy >= 10 }
	}
	text = {
		localisation_key = String_concubine_has_decent_martial
		trigger = {	martial >= 10 }
	}
	text = {
		localisation_key = String_concubine_has_decent_stewardship
		trigger = {	stewardship >= 10 }
	}
	text = {
		localisation_key = String_concubine_has_decent_intrigue
		trigger = {	intrigue >= 10 }
	}
	text = {
		localisation_key = String_concubine_has_decent_learning
		trigger = {	learning >= 10 }
	}
	text = {
		localisation_key = String_concubine_is_strong_decent
		trigger = {	is_strong_trigger = yes}
	}
	text = {
		localisation_key = String_concubine_is_smart_decent
		trigger = { is_smart_trigger = yes }
	}
	text = {
		localisation_key = String_concubine_is_attractive_decent
		trigger = { trait = attractive }
	}
	text = {
		localisation_key = String_concubine_is_architect_decent
		trigger = { trait = architect }
	}
	text = {
		localisation_key = String_concubine_is_strategist_decent
		trigger = { trait = strategist }
	}
	text = {
		localisation_key = String_concubine_is_scholar_decent
		trigger = { trait = scholar }
	}
	text = {
		localisation_key = String_concubine_is_faqih_decent
		trigger = { trait = faqih }
	}
	fallback_text = {
		localisation_key = String_concubine_fallback_decent
	}
}

#... Eunuch: If the Grace gain was great...!
defined_text = {
	name = GetPositiveImpressionOfConcubine

	text = {
		localisation_key = String_concubine_has_top_education
		trigger = { has_top_tier_education_trait_trigger = yes }
	}
	text = {
		localisation_key = String_concubine_is_close_relative
		trigger = {	is_close_relative = ROOT }
	}
	text = {
		localisation_key = String_concubine_has_high_diplo
		trigger = {	diplomacy >= 16 }
	}
	text = {
		localisation_key = String_concubine_has_high_martial
		trigger = {	martial >= 16 }
	}
	text = {
		localisation_key = String_concubine_has_high_stewardship
		trigger = {	stewardship >= 16 }
	}
	text = {
		localisation_key = String_concubine_has_high_intrigue
		trigger = {	intrigue >= 16 }
	}
	text = {
		localisation_key = String_concubine_has_high_learning
		trigger = {	learning >= 16 }
	}
	text = {
		localisation_key = String_concubine_is_strong
		trigger = {	is_strong_trigger = yes}
	}
	text = {
		localisation_key = String_concubine_is_smart
		trigger = { is_smart_trigger = yes }
	}
	text = {
		localisation_key = String_concubine_is_attractive
		trigger = { trait = attractive }
	}
	text = {
		localisation_key = String_concubine_is_architect
		trigger = { trait = architect }
	}
	text = {
		localisation_key = String_concubine_is_strategist
		trigger = { trait = strategist }
	}
	text = {
		localisation_key = String_concubine_is_scholar
		trigger = { trait = scholar }
	}
	text = {
		localisation_key = String_concubine_is_faqih
		trigger = { trait = faqih }
	}
	fallback_text = {
		localisation_key = String_concubine_fallback_great
	}
}

# Description of Chinese activity when Isolationist
defined_text = {
	name = GetChinaIsolationPastime

	text = {
		localisation_key = String_Iso_Peach_Gardens
	}
	text = {
		localisation_key = String_Iso_Giant_Mausoleum
	}
	text = {
		localisation_key = String_Iso_Calligraphy
	}
	text = {
		localisation_key = String_Iso_Lao_Tse
	}
	text = {
		localisation_key = String_Iso_I_Ching
	}
	text = {
		localisation_key = String_Iso_Great_Wall
	}
}

# Description of the end of a Chinese Status
defined_text = {
	name = GetChinaPreviousStatusEnd
	use_first_valid = yes

	text = {
		localisation_key = String_End_Stable
		trigger = { prev_status = china_stable }
	}
	text = {
		localisation_key = String_End_Unrest
		trigger = {
			prev_status = china_unrest
			china_is_suffering_trigger = no
		}
	}
	text = {
		localisation_key = String_End_Unrest_Worsened
		trigger = {
			prev_status = china_unrest
			china_is_suffering_trigger = yes
		}
	}
	text = {
		localisation_key = String_End_Famine
		trigger = { prev_status = china_famine }
	}
	text = {
		localisation_key = String_End_Plague
		trigger = { prev_status = china_plague }
	}
	text = {
		localisation_key = String_End_Mongols
		trigger = { prev_status = china_mongol_invasion }
	}
	text = {
		localisation_key = String_End_Jurchen
		trigger = { prev_status = china_jurchen_invasion }
	}
	text = {
		localisation_key = String_End_Civil_War
		trigger = {
			prev_status = china_civil_war
			NOR = {
				has_status = china_mongol_invasion
				has_status = china_jurchen_invasion
			}
		}
	}
	text = {
		localisation_key = String_End_Civil_War_to_Invasion
		trigger = {
			prev_status = china_civil_war
			OR = {
				has_status = china_mongol_invasion
				has_status = china_jurchen_invasion
			}
		}
	}
	text = {
		localisation_key = String_End_Golden_Age
		trigger = { prev_status = china_golden_age }
	}
}

# Names of important Chinese regions off-map
defined_text = {
	name = GetRandomChineseRegion

	text = {
		localisation_key = String_Luoyang
	}
	text = {
		localisation_key = String_Chengdu
	}
	text = {
		localisation_key = String_Datong
	}
	text = {
		localisation_key = String_Guangzhou
	}
	text = {
		localisation_key = String_Hangzhou
	}
	text = {
		localisation_key = String_Kaifeng
	}
	text = {
		localisation_key = String_Nanjing
	}
	text = {
		localisation_key = String_Changan
	}
}

# Names of typical Chinese troublemakers
defined_text = {
	name = GetRandomChineseFaction

	text = {
		localisation_key = String_Militant_Monks
	}
	text = {
		localisation_key = String_Rogue_Mandarins
	}
	text = {
		localisation_key = String_Ambitious_Eunuchs
	}
	text = {
		localisation_key = String_Disgruntled_Officers
	}
}

# Chinese focus
# Read like: we are busy focusing on the [GetRandomChineseFocus] so can not open the Silk Road
defined_text = {
	name = GetRandomChineseFocus
	use_first_valid = yes

	text = {
		localisation_key = String_random_region
		trigger = {
			OR = {
				has_status = china_stable
				has_status = china_golden_age
			}
		}
	}
	text = {
		localisation_key = String_random_faction
		trigger = { has_status = china_unrest }
	}
	text = {
		localisation_key = String_current_invasion
		trigger = {
			OR = {
				has_status = china_mongol_invasion
				has_status = china_jurchen_invasion
			}
		}
	}
	text = {
		localisation_key = String_current_status
		trigger = {
			OR = {
				has_status = china_civil_war
				has_status = china_famine
				has_status = china_plague
			}
		}
	}
}

# Gets the name of the current month
defined_text = {
	name = GetMonth
	use_first_valid = yes

	text = {
		trigger = { month == 0 }
		localisation_key = String_January
	}
	text = {
		trigger = { month == 1 }
		localisation_key = String_February
	}
	text = {
		trigger = { month == 2 }
		localisation_key = String_March
	}
	text = {
		trigger = { month == 3 }
		localisation_key = String_April
	}
	text = {
		trigger = { month == 4 }
		localisation_key = String_May
	}
	text = {
		trigger = { month == 5 }
		localisation_key = String_June
	}
	text = {
		trigger = { month == 6 }
		localisation_key = String_July
	}
	text = {
		trigger = { month == 7 }
		localisation_key = String_August
	}
	text = {
		trigger = { month == 8 }
		localisation_key = String_September
	}
	text = {
		trigger = { month == 9 }
		localisation_key = String_October
	}
	text = {
		trigger = { month == 10 }
		localisation_key = String_November
	}
	text = {
		trigger = { month == 11 }
		localisation_key = String_December
	}
}

# Gets the name of the Chinese refugee's specialty
defined_text = {
	name = GetChineseProfession
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = is_chinese_administrator }
		localisation_key = String_administrator
	}
	text = {
		trigger = { has_character_flag = is_chinese_master_engineer }
		localisation_key = String_engineer
	}
	text = {
		trigger = { has_character_flag = is_chinese_strategist }
		localisation_key = String_strategist
	}
	text = {
		trigger = { has_character_flag = is_chinese_doctor }
		localisation_key = String_physician
	}
	fallback_text = {
		localisation_key = String_chinese_profession_fallback # Chinese refugee
	}
}

# Gets the name of the Chinese courtier's invite reason (for when they die, mostly? Could be used elsewhere though.)
defined_text = {
	name = GetChineseCharacterRole
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = is_chinese_administrator }
		localisation_key = String_administrator
	}
	text = {
		trigger = { has_character_flag = is_chinese_master_engineer }
		localisation_key = String_engineer
	}
	text = {
		trigger = { has_character_flag = is_chinese_siege_engineer }
		localisation_key = String_siege_engineer
	}
	text = {
		trigger = { has_character_flag = is_chinese_strategist }
		localisation_key = String_strategist
	}
	text = {
		trigger = { has_character_flag = is_chinese_doctor }
		localisation_key = String_physician
	}
	text = {
		trigger = { has_character_flag = is_chinese_imperial_marriage }
		localisation_key = String_chinese_royalty
	}
	fallback_text = {
		localisation_key = String_chinese_character_role_fallback # Courtier
	}
}


defined_text = {
	name = GetRegionalBigAnimal
	use_first_valid = yes

	text = {
		localisation_key = String_stag
		trigger = {
			capital_scope = {
				OR = {
					region = world_europe_south
					region = world_europe_west
					region = world_middle_east_asia_minor
				}
			}
		}
	}
	text = {
		localisation_key = String_bear
		trigger = {
			capital_scope = {
				OR = {
					region = world_europe_north
					region = world_europe_east
					region = world_steppe
					region = world_himalayas
				}
			}
		}
	}
	text = {
		localisation_key = String_tiger
		trigger = {
			capital_scope = {
				OR = {
					region = world_india
					region = world_middle_east_persia
				}
			}
		}
	}
	text = {
		localisation_key = String_lion
		trigger = {
			capital_scope = {
				OR = {
					region = world_middle_east
					region = world_africa
				}
			}
		}
	}
	fallback_text = {
		localisation_key = String_animal_fallback # Beast
	}
}

defined_text = {
	name = GetRegionalBigAnimalCap
	use_first_valid = yes

	text = {
		localisation_key = String_Stag
		trigger = {
			capital_scope = {
				OR = {
					region = world_europe_south
					region = world_europe_west
					region = world_middle_east_asia_minor
				}
			}
		}
	}
	text = {
		localisation_key = String_Bear
		trigger = {
			capital_scope = {
				OR = {
					region = world_europe_north
					region = world_europe_east
					region = world_steppe
					region = world_himalayas
				}
			}
		}
	}
	text = {
		localisation_key = String_Tiger
		trigger = {
			capital_scope = {
				OR = {
					region = world_india
					region = world_middle_east_persia
				}
			}
		}
	}
	text = {
		localisation_key = String_Lion
		trigger = {
			capital_scope = {
				OR = {
					region = world_middle_east
					region = world_africa
				}
			}
		}
	}
	fallback_text = {
		localisation_key = String_animalCap_fallback # Beast
	}
}

defined_text = {
	name = GetRegionalFerociousAnimal
	use_first_valid = yes

	text = {
		localisation_key = String_bear
		trigger = {
			capital_scope = {
				OR = {
					region = world_europe_north
					region = world_europe_east
					region = world_steppe
					region = world_europe_south
					region = world_europe_west
					region = world_middle_east_asia_minor
				}
			}
		}
	}
	text = {
		localisation_key = String_tiger
		trigger = {
			capital_scope = {
				OR = {
					region = world_india
					region = world_middle_east_persia
				}
			}
		}
	}
	text = {
		localisation_key = String_lion
		trigger = {
			capital_scope = {
				OR = {
					region = world_middle_east
					region = world_africa
				}
			}
		}
	}
	fallback_text = {
		localisation_key = String_animal_fallback # Beast
	}
}

defined_text = {
	name = GetPublicOpinionOfWork

	# Vices
	text = {
		trigger = { trait = lustful }

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 10
				OR = {
					has_focus = focus_seduction
					has_lifestyle_diplomacy_trigger = yes
				}
			}
		}
		localisation_key = String_suggestive
	}
	text = {
		trigger = { trait = gluttonous }

		weight_multiplier = {
			factor = 10

			mult_modifier = {
				factor = 10
				has_focus = focus_carousing
			}
		}
		localisation_key = String_over_indulgent
	}
	text = {
		trigger = { trait = greedy }
		weight_multiplier = { factor = 10 }
		localisation_key = String_lackluster
	}
	text = {
		trigger = { trait = slothful }
		weight_multiplier = { factor = 10 }
		localisation_key = String_stale
	}
	text = {
		trigger = { trait = wroth }
		weight_multiplier = { factor = 10 }
		localisation_key = String_indignant
	}
	text = {
		trigger = { trait = envious }
		weight_multiplier = { factor = 10 }
		localisation_key = String_belligerent
	}
	text = {
		trigger = { trait = proud }
		weight_multiplier = { factor = 10 }
		localisation_key = String_pompous
	}

	# Virtues
	text = {
		trigger = { trait = chaste }
		weight_multiplier = { factor = 10 }
		localisation_key = String_dull
	}
	text = {
		trigger = { trait = temperate }
		weight_multiplier = { factor = 10 }
		localisation_key = String_uninspired
	}
	text = {
		trigger = { trait = charitable }
		weight_multiplier = { factor = 10 }
		localisation_key = String_too_accommodating
	}
	text = {
		trigger = { trait = diligent }
		weight_multiplier = { factor = 10 }
		localisation_key = String_too_detailed
	}
	text = {
		trigger = { trait = patient }
		weight_multiplier = { factor = 10 }
		localisation_key = String_dreary
	}
	text = {
		trigger = { trait = kind }
		weight_multiplier = { factor = 10 }
		localisation_key = String_ceremonious
	}
	text = {
		trigger = { trait = humble }
		weight_multiplier = { factor = 10 }
		localisation_key = String_soft_spoken
	}

	# Other
	text = {
		trigger = { trait = deceitful }
		weight_multiplier = { factor = 10 }
		localisation_key = String_confusing
	}
	text = {
		trigger = { trait = honest }
		weight_multiplier = { factor = 10 }
		localisation_key = String_misguided
	}
	text = {
		trigger = { trait = craven }
		weight_multiplier = { factor = 10 }
		localisation_key = String_timid
	}
	text = {
		trigger = { trait = brave }
		weight_multiplier = { factor = 10 }
		localisation_key = String_bold
	}
	text = {
		trigger = { trait = shy }
		weight_multiplier = { factor = 10 }
		localisation_key = String_trite
	}
	text = {
		trigger = { trait = gregarious }
		weight_multiplier = { factor = 10 }
		localisation_key = String_entertaining
	}
	text = {
		trigger = { trait = ambitious }
		weight_multiplier = { factor = 10 }
		localisation_key = String_ambitious
	}
	text = {
		trigger = { trait = content }
		weight_multiplier = { factor = 10 }
		localisation_key = String_mundane
	}
	text = {
		trigger = { trait = arbitrary }
		weight_multiplier = { factor = 10 }
		localisation_key = String_random
	}
	text = {
		trigger = { trait = just }
		weight_multiplier = { factor = 10 }
		localisation_key = String_dispassionate
	}
	text = {
		trigger = { trait = cynical }
		weight_multiplier = { factor = 10 }
		localisation_key = String_contemptuous
	}
	text = {
		trigger = { trait = zealous }
		weight_multiplier = { factor = 10 }
		localisation_key = String_uptight
	}
	text = {
		trigger = { trait = paranoid }
		weight_multiplier = { factor = 10 }
		localisation_key = String_paranoid
	}
	text = {
		trigger = { trait = trusting }
		weight_multiplier = { factor = 10 }
		localisation_key = String_naive
	}
	text = {
		trigger = { trait = cruel }
		weight_multiplier = { factor = 10 }
		localisation_key = String_callous
	}
	text = {
		trigger = { trait = erudite }
		weight_multiplier = { factor = 10 }
		localisation_key = String_pedantic
	}
	text = {
		trigger = { trait = stubborn }
		weight_multiplier = { factor = 10 }
		localisation_key = String_narrow_minded
	}

	# Scripted groups (should be prioritized)
	text = {
		trigger = { is_benevolent_trigger = yes }
		weight_multiplier = { factor = 100 }
		localisation_key = String_too_much
	}
	text = {
		trigger = { is_evil_trigger = yes }
		weight_multiplier = { factor = 100 }
		localisation_key = String_petty
	}
	text = {
		trigger = { is_pious_trigger = yes }
		weight_multiplier = { factor = 100 }
		localisation_key = String_judgmental
	}
	text = {
		trigger = { is_impious_trigger = yes }
		weight_multiplier = { factor = 100 }
		localisation_key = String_spiteful
	}
	text = {
		trigger = { is_smart_trigger = yes }
		weight_multiplier = { factor = 100 }
		localisation_key = String_convoluted
	}
	text = {
		trigger = { is_dumb_trigger = yes }
		weight_multiplier = { factor = 100 }
		localisation_key = String_amusing
	}

	fallback_text = {
		localisation_key = String_opinion_fallback # Decent
	}
}

# NOTE: only used when writing a book (due to event_target:new_book)!
defined_text = {
	name = GetExpectationOfWork
	use_first_valid = yes

	# Fast writers...
	text = {
		trigger = {
			event_target:new_book = {
				quality == 1
			}
			has_character_flag = currently_working_on_a_book
			had_character_flag = {
				flag = currently_working_on_a_book
				years < 5
			}
		}
		localisation_key = String_disappointed_in_my_scribes # Wrote lowest quality book, fast
	}
	text = {
		trigger = {
			event_target:new_book = {
				quality == 2
			}
			has_character_flag = currently_working_on_a_book
			had_character_flag = {
				flag = currently_working_on_a_book
				years < 5
			}
		}
		localisation_key = String_pleased_with_scribes # Wrote medium quality book, fast
	}
	text = {
		trigger = {
			event_target:new_book = {
				quality == 3
			}
			has_character_flag = currently_working_on_a_book
			had_character_flag = {
				flag = currently_working_on_a_book
				years < 5
			}
		}
		localisation_key = String_in_awe_of_my_scribes_as_well_as_myself # Wrote great quality book, fast
	}

	# Slower writers...
	text = {
		trigger = {
			event_target:new_book = {
				quality == 1
			}
			had_character_flag = {
				flag = currently_working_on_a_book
				years >= 5
			}
			had_character_flag = {
				flag = currently_working_on_a_book
				years < 10
			}
		}
		localisation_key = String_disappointed_in_myself_and_my_scribes # Wrote lowest quality book, medium speed
	}
	text = {
		trigger = {
			event_target:new_book = {
				quality == 2
			}
			had_character_flag = {
				flag = currently_working_on_a_book
				years >= 5
			}
			had_character_flag = {
				flag = currently_working_on_a_book
				years < 10
			}
		}
		localisation_key = String_not_disappointed_in_my_scribes # Wrote medium quality book, medium speed
	}
	text = {
		trigger = {
			event_target:new_book = {
				quality == 3
			}
			had_character_flag = {
				flag = currently_working_on_a_book
				years >= 5
			}
			had_character_flag = {
				flag = currently_working_on_a_book
				years < 10
			}
		}
		localisation_key = String_grateful_to_my_scribes # Wrote great quality book, medium speed
	}

	# The slowest of all...
	text = {
		trigger = {
			event_target:new_book = {
				quality == 1
			}
			had_character_flag = {
				flag = currently_working_on_a_book
				years >= 10
			}
			had_character_flag = {
				flag = currently_working_on_a_book
				years < 20
			}
		}
		localisation_key = String_having_trouble_understanding_what_I_could_have_done_differently # Wrote lowest quality book, over a long time
	}
	text = {
		trigger = {
			event_target:new_book = {
				quality == 2
			}
			had_character_flag = {
				flag = currently_working_on_a_book
				years >= 10
			}
			had_character_flag = {
				flag = currently_working_on_a_book
				years < 20
			}
		}
		localisation_key = String_almost_surprised_it_was_finally_finished # Wrote medium quality book, over a long time
	}
	text = {
		trigger = {
			event_target:new_book = {
				quality == 3
			}
			had_character_flag = {
				flag = currently_working_on_a_book
				years >= 10
			}
			had_character_flag = {
				flag = currently_working_on_a_book
				years < 20
			}
		}
		localisation_key = String_filled_with_a_sense_of_well_deserved_pride # Wrote great quality book, over a long time
	}
	fallback_text = {
		localisation_key = String_expectation_of_work_fallback # Decent
	}
}

defined_text = {
	name = GetTimeItTookToWriteBook
	use_first_valid = yes

	text = {
		trigger = {
			has_character_flag = currently_working_on_a_book
			had_character_flag = {
				flag = currently_working_on_a_book
				years < 3
			}
		}
		weight_multiplier = { factor = 100 }
		localisation_key = String_most_of_my_spare_time
	}
	text = {
		trigger = {
			had_character_flag = {
				flag = currently_working_on_a_book
				years >= 3
			}
			had_character_flag = {
				flag = currently_working_on_a_book
				years < 8
			}
		}
		weight_multiplier = { factor = 100 }
		localisation_key = String_several_years
	}
	text = {
		trigger = {
			had_character_flag = {
				flag = currently_working_on_a_book
				years >= 8
			}
			had_character_flag = {
				flag = currently_working_on_a_book
				years < 12
			}
		}
		weight_multiplier = { factor = 100 }
		localisation_key = String_years_and_years
	}
	text = {
		trigger = {
			had_character_flag = {
				flag = currently_working_on_a_book
				years >= 12
			}
			had_character_flag = {
				flag = currently_working_on_a_book
				years < 18
			}
		}
		weight_multiplier = { factor = 100 }
		localisation_key = String_over_a_decade
	}
	text = {
		trigger = {
			had_character_flag = {
				flag = currently_working_on_a_book
				years >= 18
			}
			had_character_flag = {
				flag = currently_working_on_a_book
				years < 20
			}
		}
		weight_multiplier = { factor = 100 }
		localisation_key = String_the_better_part_of_a_lifetime
	}
	text = {
		trigger = {
			had_character_flag = {
				flag = currently_working_on_a_book
				years >= 20
			}
		}
		weight_multiplier = { factor = 100 }
		localisation_key = String_most_of_my_life
	}
	fallback_text = {
		localisation_key = String_what_feels_like_forever
	}
}

# Has to be in an artifact scope!!
defined_text = {
	name = GetArtifactDescriptor
	use_first_valid = yes

	text = {
		localisation_key = String_valuable
		trigger = {
			has_artifact_flag = chinese
			has_artifact_flag = book
		}
	}
	text = {
		localisation_key = String_dangerous
		trigger = {
			has_artifact_flag = chinese
			has_artifact_flag = combat_weapon
		}
	}
	text = {
		localisation_key = String_beautiful
		trigger = {
			has_artifact_flag = chinese
			has_artifact_flag = decor
		}
	}
	fallback_text = {
		localisation_key = String_lovely
	}
}

defined_text = {
	name = GetMourningBehavior

	text = {
		localisation_key = String_still_distraught
		trigger = {
			trait = depressed
			OR = {
				AND = {
					is_married = no
					has_character_flag = mourner_is_spouse
				}
				has_character_flag = mourner_is_grown_child
			}
		}
	}
	text = {
		localisation_key = String_still_dont_understand
		trigger = { has_character_flag = mourner_is_small_child }
	}
	text = {
		localisation_key = String_done_my_best_to_accept_it
		trigger = {
			NOT = { trait = depressed }
			is_evil_trigger = no
			has_character_flag = mourner_is_spouse
			OR = {
				is_married = yes
				trait = content
			}
		}
	}
	text = {
		localisation_key = String_hate_to_admit_it
		trigger = {
			has_benevolent_trait_trigger = no
			has_character_flag = mourner_is_spouse
		}
	}
	text = {
		localisation_key = String_feel_angry
		trigger = {
			trait = wroth
			OR = {
				has_character_flag = mourner_is_spouse
				has_character_flag = mourner_is_grown_child
			}
		}
	}
	text = {
		localisation_key = String_i_miss_them
		trigger = { has_character_flag = mourner_is_grown_child }
	}
	text = {
		localisation_key = String_i_see_them_everywhere
		trigger = { trait = lunatic }
	}
	fallback_text = {
		localisation_key = String_still_saddens_me
	}
}

defined_text = {
	name = GetCapitalLocation
	use_first_valid = yes

	text = {
		localisation_key = String_capital_name
		trigger = { is_feudal = yes }
	}
	text = {
		localisation_key = String_capital_location
	}
	#fallback_text = {
	#	localisation_key = String_capital_province
	#}
}

defined_text = {
	name = GetHonorific
	use_first_valid = yes

	text = {
		localisation_key = Imperial_majesty
		trigger = {
			OR = {
				real_tier = EMPEROR
				any_spouse = { real_tier = EMPEROR }
			}
		}
	}
	text = {
		localisation_key = Majesty
		trigger = {
			OR = {
				real_tier = KING
				any_spouse = { real_tier = KING }
			}
		}
	}
	text = {
		localisation_key = Highness
		trigger = {
			OR = {
				has_minor_title = title_prince
				any_spouse = { has_minor_title = title_prince }
			}
		}
	}
	text = {
		localisation_key = Excellency
		trigger = {
			OR = {
				real_tier = DUKE
				any_spouse = { real_tier = DUKE }
			}
		}
	}
	text = {
		localisation_key = Grace
		trigger = {
			OR = {
				real_tier = COUNT
				spouse = { real_tier = COUNT }
			}
		}
	}
	text = {
		localisation_key = Lordship
		trigger = {
			OR = {
				real_tier = BARON
				any_spouse = { real_tier = BARON }
			}
		}
	}
	text = {
		localisation_key = Honorable
		trigger = {
			is_ruler = no
			NOT = {
				any_spouse = { is_ruler = yes }
			}
		}
	}
	fallback_text = {
		localisation_key = Excellency
	}
}

defined_text = {
	name = GetCoronationTimer

	text = {
		trigger = { has_character_modifier = coronation_request_cooldown }
		localisation_key = string_coronation_timer
	}
}

defined_text = {
	name = GetBaptismTimer

	text = {
		trigger = { has_character_modifier = baptism_request_cooldown }
		localisation_key = string_baptism_timer
	}
}

# Dead Emperors forget their Popes
defined_text = {
	name = GetCrownedByName
	use_first_valid = yes

	text = {
		trigger = {
			NOT = { persistent_event_target:coronation_priest_per = { always = yes } }
			FROM = {
				trait = crowned_by_pope
				is_alive = yes
			}
		}
		localisation_key = string_from_crowned_by_pope_aliveop
	}
	text = {
		trigger = {
			NOT = { persistent_event_target:coronation_priest_per = { always = yes } }
			FROM = {
				trait = crowned_by_bishop
				is_alive = yes
			}
		}
		localisation_key = string_from_crowned_by_bishop_aliveop
	}
	text = {
		trigger = {
			NOT = { persistent_event_target:coronation_priest_per = { always = yes } }
			FROM = {
				trait = crowned_by_priest
				is_alive = yes
			}
		}
		localisation_key = string_from_crowned_by_priest_aliveop
	}
	text = {
		trigger = {
			trait = crowned_by_pope
			is_alive = yes
		}
		localisation_key = string_crowned_by_pope_alive
	}
	text = {
		trigger = {
			trait = crowned_by_pope
			is_alive = no
		}
		localisation_key = string_crowned_by_pope_dead
	}
	text = {
		trigger = {
			trait = crowned_by_bishop
			is_alive = yes
		}
		localisation_key = string_crowned_by_bishop_alive
	}
	text = {
		trigger = {
			trait = crowned_by_bishop
			is_alive = no
		}
		localisation_key = string_crowned_by_bishop_dead
	}
	text = {
		trigger = {
			trait = crowned_by_priest
			is_alive = yes
		}
		localisation_key = string_crowned_by_priest_alive
	}
	text = {
		trigger = {
			trait = crowned_by_priest
			is_alive = no
		}
		localisation_key = string_crowned_by_priest_dead
	}
}

# Only used for Prince-Bishops' descriptions
defined_text = {
	name = GetCrownedByDesc
	use_first_valid = yes

	text = {
		trigger = {
			is_alive = yes
			persistent_event_target:coronation_priest_per = { is_alive = yes }
		}
		localisation_key = string_crowned_by_bishop_alive_desc
	}
	text = {
		localisation_key = string_crowned_by_bishop_dead_desc
	}
}

defined_text = {
	name = GetHouse
	use_first_valid = yes

	text = {
		trigger = {
			is_tribal = yes
		}
		localisation_key = string_longhouse
	}
	text = {
		trigger = {
			is_nomadic = yes
		}
		localisation_key = string_pavillion
	}
	text = {
		localisation_key = string_palace
	}
}

defined_text = {
	name = GetWildernessWeather
	use_first_valid = yes

	text = {
		trigger = {
			capital_scope = { region = world_africa }
		}
		localisation_key = string_violent_sandstorm_paragraph
	}
	text = {
		localisation_key = string_violent_storm_paragraph
	}
}

defined_text = {
	name = GetExcomAtBehest
	use_first_valid = yes

	text = {
		trigger = {
			FROM = {
				character = FROMFROM
			}
		}
		localisation_key = ""
	}
	fallback_text = {
		localisation_key = EXCOM_AT_BEHEST
	}
}

# Dynamic Troubled Pregnancy Tooltips

# Asthma
# Vomiting
# Hair and Rashes
# Metalmouth
# Fever and Sweath
# Amnesia
# Panic attack
# Undernourishment
# Epilectic episode
# Blood and cramps
# Teeth hurting and falling
# Insomnia
# Hallucinations
# Sleepwalking

# Asthma
defined_text = {
	name = GetTroubledHelpA522

	text = {
		trigger = {
			persistent_event_target:pregnancy_mother_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_mother_physician_helps_522
	}
}

defined_text = {
	name = GetTroubledHelpB522

	text = {
		trigger = {
			persistent_event_target:pregnancy_spouse_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_spouse_physician_helps_522
	}
}

defined_text = {
	name = GetTroubledHelpC522

	text = {
		trigger = {
			persistent_event_target:pregnancy_regent_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_regent_physician_helps_522
	}
}

defined_text = {
	name = GetTroubledHelpE522

	text = {
		trigger = { has_character_flag = pregnancy_priest_comfort }
		localisation_key = string_priest_comfort_522
	}
}

defined_text = {
	name = GetTroubledHelpD522

	text = {
		trigger = { has_character_flag = pregnancy_healer_help }
		localisation_key = string_generic_physician_helps_522
	}
}

defined_text = {
	name = GetTroubledHelpF522

	text = {
		trigger = { has_character_flag = pregnancy_shaman_comfort }
		localisation_key = string_shaman_comfort_522
	}
}

defined_text = {
	name = GetTroubledHelpG522

	text = {
		trigger = { has_character_flag = pregnancy_spouse_comfort }
		localisation_key = string_spouse_comfort_522
	}
}

# Vomiting
defined_text = {
	name = GetTroubledHelpA523

	text = {
		trigger = {
			persistent_event_target:pregnancy_mother_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_mother_physician_helps_523
	}
}

defined_text = {
	name = GetTroubledHelpB523

	text = {
		trigger = {
			persistent_event_target:pregnancy_spouse_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_spouse_physician_helps_523
	}
}

defined_text = {
	name = GetTroubledHelpC523

	text = {
		trigger = {
			persistent_event_target:pregnancy_regent_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_regent_physician_helps_523
	}
}

defined_text = {
	name = GetTroubledHelpD523

	text = {
		trigger = { has_character_flag = pregnancy_healer_help }
		localisation_key = string_generic_physician_helps_523
	}
}

defined_text = {
	name = GetTroubledHelpE523

	text = {
		trigger = { has_character_flag = pregnancy_priest_comfort }
		localisation_key = string_priest_comfort_523
	}
}

defined_text = {
	name = GetTroubledHelpF523

	text = {
		trigger = { has_character_flag = pregnancy_shaman_comfort }
		localisation_key = string_shaman_comfort_523
	}
}

defined_text = {
	name = GetTroubledHelpG523

	text = {
		trigger = { has_character_flag = pregnancy_spouse_comfort }
		localisation_key = string_spouse_comfort_523
	}
}

# Hair and Rashes
defined_text = {
	name = GetTroubledHelpA524

	text = {
		trigger = {
			persistent_event_target:pregnancy_mother_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_mother_physician_helps_524
	}
}

defined_text = {
	name = GetTroubledHelpB524

	text = {
		trigger = {
			persistent_event_target:pregnancy_spouse_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_spouse_physician_helps_524
	}
}

defined_text = {
	name = GetTroubledHelpC524

	text = {
		trigger = {
			persistent_event_target:pregnancy_regent_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_regent_physician_helps_524
	}
}

defined_text = {
	name = GetTroubledHelpD524

	text = {
		trigger = { has_character_flag = pregnancy_healer_help }
		localisation_key = string_generic_physician_helps_524
	}
}

defined_text = {
	name = GetTroubledHelpE524

	text = {
		trigger = { has_character_flag = pregnancy_priest_comfort }
		localisation_key = string_priest_comfort_524
	}
}

defined_text = {
	name = GetTroubledHelpF524

	text = {
		trigger = { has_character_flag = pregnancy_shaman_comfort }
		localisation_key = string_shaman_comfort_524
	}
}

defined_text = {
	name = GetTroubledHelpG524

	text = {
		trigger = { has_character_flag = pregnancy_spouse_comfort }
		localisation_key = string_spouse_comfort_524
	}
}

# Metalmouth
defined_text = {
	name = GetTroubledHelpA525

	text = {
		trigger = {
			persistent_event_target:pregnancy_mother_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_mother_physician_helps_525
	}
}

defined_text = {
	name = GetTroubledHelpB525

	text = {
		trigger = {
			persistent_event_target:pregnancy_spouse_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_spouse_physician_helps_525
	}
}

defined_text = {
	name = GetTroubledHelpC525

	text = {
		trigger = {
			persistent_event_target:pregnancy_regent_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_regent_physician_helps_525
	}
}

defined_text = {
	name = GetTroubledHelpD525

	text = {
		trigger = { has_character_flag = pregnancy_healer_help }
		localisation_key = string_generic_physician_helps_525
	}
}

defined_text = {
	name = GetTroubledHelpE525

	text = {
		trigger = { has_character_flag = pregnancy_priest_comfort }
		localisation_key = string_priest_comfort_525
	}
}

defined_text = {
	name = GetTroubledHelpF525

	text = {
		trigger = { has_character_flag = pregnancy_shaman_comfort }
		localisation_key = string_shaman_comfort_525
	}
}

defined_text = {
	name = GetTroubledHelpG525

	text = {
		trigger = { has_character_flag = pregnancy_spouse_comfort }
		localisation_key = string_spouse_comfort_525
	}
}

# Fever and Sweath
defined_text = {
	name = GetTroubledHelpA526

	text = {
		trigger = {
			persistent_event_target:pregnancy_mother_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_mother_physician_helps_526
	}
}

defined_text = {
	name = GetTroubledHelpB526

	text = {
		trigger = {
			persistent_event_target:pregnancy_spouse_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_spouse_physician_helps_526
	}
}

defined_text = {
	name = GetTroubledHelpC526

	text = {
		trigger = {
			persistent_event_target:pregnancy_regent_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_regent_physician_helps_526
	}
}

defined_text = {
	name = GetTroubledHelpD526

	text = {
		trigger = { has_character_flag = pregnancy_healer_help }
		localisation_key = string_generic_physician_helps_526
	}
}

defined_text = {
	name = GetTroubledHelpE526

	text = {
		trigger = { has_character_flag = pregnancy_priest_comfort }
		localisation_key = string_priest_comfort_526
	}
}

defined_text = {
	name = GetTroubledHelpF526

	text = {
		trigger = { has_character_flag = pregnancy_shaman_comfort }
		localisation_key = string_shaman_comfort_526
	}
}

defined_text = {
	name = GetTroubledHelpG526

	text = {
		trigger = { has_character_flag = pregnancy_spouse_comfort }
		localisation_key = string_spouse_comfort_526
	}
}

# Amnesia
defined_text = {
	name = GetTroubledHelpA527

	text = {
		trigger = {
			persistent_event_target:pregnancy_mother_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_mother_physician_helps_527
	}
}

defined_text = {
	name = GetTroubledHelpB527

	text = {
		trigger = {
			persistent_event_target:pregnancy_spouse_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_spouse_physician_helps_527
	}
}

defined_text = {
	name = GetTroubledHelpC527

	text = {
		trigger = {
			persistent_event_target:pregnancy_regent_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_regent_physician_helps_527
	}
}

defined_text = {
	name = GetTroubledHelpD527

	text = {
		trigger = { has_character_flag = pregnancy_healer_help }
		localisation_key = string_generic_physician_helps_527
	}
}

defined_text = {
	name = GetTroubledHelpE527

	text = {
		trigger = { has_character_flag = pregnancy_priest_comfort }
		localisation_key = string_priest_comfort_527
	}
}

defined_text = {
	name = GetTroubledHelpF527

	text = {
		trigger = { has_character_flag = pregnancy_shaman_comfort }
		localisation_key = string_shaman_comfort_527
	}
}

defined_text = {
	name = GetTroubledHelpG527

	text = {
		trigger = { has_character_flag = pregnancy_spouse_comfort }
		localisation_key = string_spouse_comfort_527
	}
}

# Panic attack
defined_text = {
	name = GetTroubledHelpA528

	text = {
		trigger = {
			persistent_event_target:pregnancy_mother_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_mother_physician_helps_528
	}
}

defined_text = {
	name = GetTroubledHelpB528

	text = {
		trigger = {
			persistent_event_target:pregnancy_spouse_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_spouse_physician_helps_528
	}
}

defined_text = {
	name = GetTroubledHelpC528

	text = {
		trigger = {
			persistent_event_target:pregnancy_regent_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_regent_physician_helps_528
	}
}

defined_text = {
	name = GetTroubledHelpD528

	text = {
		trigger = { has_character_flag = pregnancy_healer_help }
		localisation_key = string_generic_physician_helps_528
	}
}

defined_text = {
	name = GetTroubledHelpE528

	text = {
		trigger = { has_character_flag = pregnancy_priest_comfort }
		localisation_key = string_priest_comfort_528
	}
}

defined_text = {
	name = GetTroubledHelpF528

	text = {
		trigger = { has_character_flag = pregnancy_shaman_comfort }
		localisation_key = string_shaman_comfort_528
	}
}

defined_text = {
	name = GetTroubledHelpG528

	text = {
		trigger = { has_character_flag = pregnancy_spouse_comfort }
		localisation_key = string_spouse_comfort_528
	}
}

# Undernourishment
defined_text = {
	name = GetTroubledHelpA529

	text = {
		trigger = {
			persistent_event_target:pregnancy_mother_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_mother_physician_helps_529
	}
}

defined_text = {
	name = GetTroubledHelpB529

	text = {
		trigger = {
			persistent_event_target:pregnancy_spouse_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_spouse_physician_helps_529
	}
}

defined_text = {
	name = GetTroubledHelpC529

	text = {
		trigger = {
			persistent_event_target:pregnancy_regent_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_regent_physician_helps_529
	}
}

defined_text = {
	name = GetTroubledHelpD529

	text = {
		trigger = { has_character_flag = pregnancy_healer_help }
		localisation_key = string_generic_physician_helps_529
	}
}

defined_text = {
	name = GetTroubledHelpE529

	text = {
		trigger = { has_character_flag = pregnancy_priest_comfort }
		localisation_key = string_priest_comfort_529
	}
}

defined_text = {
	name = GetTroubledHelpF529

	text = {
		trigger = { has_character_flag = pregnancy_shaman_comfort }
		localisation_key = string_shaman_comfort_529
	}
}

defined_text = {
	name = GetTroubledHelpG529

	text = {
		trigger = { has_character_flag = pregnancy_spouse_comfort }
		localisation_key = string_spouse_comfort_529
	}
}

# Epilectic episode
defined_text = {
	name = GetTroubledHelpA530

	text = {
		trigger = {
			persistent_event_target:pregnancy_mother_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_mother_physician_helps_530
	}
}

defined_text = {
	name = GetTroubledHelpB530

	text = {
		trigger = {
			persistent_event_target:pregnancy_spouse_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_spouse_physician_helps_530
	}
}

defined_text = {
	name = GetTroubledHelpC530

	text = {
		trigger = {
			persistent_event_target:pregnancy_regent_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_regent_physician_helps_530
	}
}

defined_text = {
	name = GetTroubledHelpD530

	text = {
		trigger = { has_character_flag = pregnancy_healer_help }
		localisation_key = string_generic_physician_helps_530
	}
}

defined_text = {
	name = GetTroubledHelpE530

	text = {
		trigger = { has_character_flag = pregnancy_priest_comfort }
		localisation_key = string_priest_comfort_530
	}
}

defined_text = {
	name = GetTroubledHelpF530

	text = {
		trigger = { has_character_flag = pregnancy_shaman_comfort }
		localisation_key = string_shaman_comfort_530
	}
}

defined_text = {
	name = GetTroubledHelpG530

	text = {
		trigger = { has_character_flag = pregnancy_spouse_comfort }
		localisation_key = string_spouse_comfort_530
	}
}

# Blood and cramps
defined_text = {
	name = GetTroubledHelpA531

	text = {
		trigger = {
			persistent_event_target:pregnancy_mother_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_mother_physician_helps_531
	}
}

defined_text = {
	name = GetTroubledHelpB531

	text = {
		trigger = {
			persistent_event_target:pregnancy_spouse_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_spouse_physician_helps_531
	}
}

defined_text = {
	name = GetTroubledHelpC531

	text = {
		trigger = {
			persistent_event_target:pregnancy_regent_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_regent_physician_helps_531
	}
}

defined_text = {
	name = GetTroubledHelpD531

	text = {
		trigger = { has_character_flag = pregnancy_healer_help }
		localisation_key = string_generic_physician_helps_531
	}
}

defined_text = {
	name = GetTroubledHelpE531

	text = {
		trigger = { has_character_flag = pregnancy_priest_comfort }
		localisation_key = string_priest_comfort_531
	}
}

defined_text = {
	name = GetTroubledHelpF531

	text = {
		trigger = { has_character_flag = pregnancy_shaman_comfort }
		localisation_key = string_shaman_comfort_531
	}
}

defined_text = {
	name = GetTroubledHelpG531

	text = {
		trigger = { has_character_flag = pregnancy_spouse_comfort }
		localisation_key = string_spouse_comfort_531
	}
}

# Teeth hurting and falling
defined_text = {
	name = GetTroubledHelpA532

	text = {
		trigger = {
			persistent_event_target:pregnancy_mother_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_mother_physician_helps_532
	}
}

defined_text = {
	name = GetTroubledHelpB532

	text = {
		trigger = {
			persistent_event_target:pregnancy_spouse_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_spouse_physician_helps_532
	}
}

defined_text = {
	name = GetTroubledHelpC532

	text = {
		trigger = {
			persistent_event_target:pregnancy_regent_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_regent_physician_helps_532
	}
}

defined_text = {
	name = GetTroubledHelpD532

	text = {
		trigger = { has_character_flag = pregnancy_healer_help }
		localisation_key = string_generic_physician_helps_532
	}
}

defined_text = {
	name = GetTroubledHelpE532

	text = {
		trigger = { has_character_flag = pregnancy_priest_comfort }
		localisation_key = string_priest_comfort_532
	}
}

defined_text = {
	name = GetTroubledHelpF532

	text = {
		trigger = { has_character_flag = pregnancy_shaman_comfort }
		localisation_key = string_shaman_comfort_532
	}
}

defined_text = {
	name = GetTroubledHelpG532

	text = {
		trigger = { has_character_flag = pregnancy_spouse_comfort }
		localisation_key = string_spouse_comfort_532
	}
}

# Insomnia
defined_text = {
	name = GetTroubledHelpA533

	text = {
		trigger = {
			persistent_event_target:pregnancy_mother_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_mother_physician_helps_533
	}
}

defined_text = {
	name = GetTroubledHelpB533

	text = {
		trigger = {
			persistent_event_target:pregnancy_spouse_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_spouse_physician_helps_533
	}
}

defined_text = {
	name = GetTroubledHelpC533

	text = {
		trigger = {
			persistent_event_target:pregnancy_regent_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_regent_physician_helps_533
	}
}

defined_text = {
	name = GetTroubledHelpD533

	text = {
		trigger = { has_character_flag = pregnancy_healer_help }
		localisation_key = string_generic_physician_helps_533
	}
}

defined_text = {
	name = GetTroubledHelpE533

	text = {
		trigger = { has_character_flag = pregnancy_priest_comfort }
		localisation_key = string_priest_comfort_533
	}
}

defined_text = {
	name = GetTroubledHelpF533

	text = {
		trigger = { has_character_flag = pregnancy_shaman_comfort }
		localisation_key = string_shaman_comfort_533
	}
}

defined_text = {
	name = GetTroubledHelpG533

	text = {
		trigger = { has_character_flag = pregnancy_spouse_comfort }
		localisation_key = string_spouse_comfort_533
	}
}

# Hallucinations
defined_text = {
	name = GetTroubledHelpA534

	text = {
		trigger = {
			persistent_event_target:pregnancy_mother_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_mother_physician_helps_534
	}
}

defined_text = {
	name = GetTroubledHelpB534

	text = {
		trigger = {
			persistent_event_target:pregnancy_spouse_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_spouse_physician_helps_534
	}
}

defined_text = {
	name = GetTroubledHelpC534

	text = {
		trigger = {
			persistent_event_target:pregnancy_regent_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_regent_physician_helps_534
	}
}

defined_text = {
	name = GetTroubledHelpD534

	text = {
		trigger = { has_character_flag = pregnancy_healer_help }
		localisation_key = string_generic_physician_helps_534
	}
}

defined_text = {
	name = GetTroubledHelpE534

	text = {
		trigger = { has_character_flag = pregnancy_priest_comfort }
		localisation_key = string_priest_comfort_534
	}
}

defined_text = {
	name = GetTroubledHelpF534

	text = {
		trigger = { has_character_flag = pregnancy_shaman_comfort }
		localisation_key = string_shaman_comfort_534
	}
}

defined_text = {
	name = GetTroubledHelpG534

	text = {
		trigger = { has_character_flag = pregnancy_spouse_comfort }
		localisation_key = string_spouse_comfort_534
	}
}

# Sleepwalking
defined_text = {
	name = GetTroubledHelpA535

	text = {
		trigger = {
			persistent_event_target:pregnancy_mother_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_mother_physician_helps_535
	}
}

defined_text = {
	name = GetTroubledHelpB535

	text = {
		trigger = {
			persistent_event_target:pregnancy_spouse_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_spouse_physician_helps_535
	}
}

defined_text = {
	name = GetTroubledHelpC535

	text = {
		trigger = {
			persistent_event_target:pregnancy_regent_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_regent_physician_helps_535
	}
}

defined_text = {
	name = GetTroubledHelpD535

	text = {
		trigger = { has_character_flag = pregnancy_healer_help }
		localisation_key = string_generic_physician_helps_535
	}
}

defined_text = {
	name = GetTroubledHelpE535

	text = {
		trigger = { has_character_flag = pregnancy_priest_comfort }
		localisation_key = string_priest_comfort_535
	}
}

defined_text = {
	name = GetTroubledHelpF535

	text = {
		trigger = { has_character_flag = pregnancy_shaman_comfort }
		localisation_key = string_shaman_comfort_535
	}
}

defined_text = {
	name = GetTroubledHelpG535

	text = {
		trigger = { has_character_flag = pregnancy_spouse_comfort }
		localisation_key = string_spouse_comfort_535
	}
}

## Post-labor
# Fever
defined_text = {
	name = GetTroubledHelpA541

	text = {
		trigger = {
			persistent_event_target:pregnancy_mother_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_mother_physician_helps_541
	}
}

defined_text = {
	name = GetTroubledHelpB541

	text = {
		trigger = {
			persistent_event_target:pregnancy_spouse_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_spouse_physician_helps_541
	}
}

defined_text = {
	name = GetTroubledHelpC541

	text = {
		trigger = {
			persistent_event_target:pregnancy_regent_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_regent_physician_helps_541
	}
}

defined_text = {
	name = GetTroubledHelpD541

	text = {
		trigger = { has_character_flag = pregnancy_healer_help }
		localisation_key = string_generic_physician_helps_541
	}
}

defined_text = {
	name = GetTroubledHelpE541

	text = {
		trigger = { has_character_flag = pregnancy_priest_comfort }
		localisation_key = string_priest_comfort_541
	}
}

defined_text = {
	name = GetTroubledHelpF541

	text = {
		trigger = { has_character_flag = pregnancy_shaman_comfort }
		localisation_key = string_shaman_comfort_541
	}
}

defined_text = {
	name = GetTroubledHelpG541

	text = {
		trigger = { has_character_flag = pregnancy_spouse_comfort }
		localisation_key = string_spouse_comfort_541
	}
}

# Hair loss
defined_text = {
	name = GetTroubledHelpA542

	text = {
		trigger = {
			persistent_event_target:pregnancy_mother_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_mother_physician_helps_542
	}
}

defined_text = {
	name = GetTroubledHelpB542

	text = {
		trigger = {
			persistent_event_target:pregnancy_spouse_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_spouse_physician_helps_542
	}
}

defined_text = {
	name = GetTroubledHelpC542

	text = {
		trigger = {
			persistent_event_target:pregnancy_regent_physician_per = {
				is_alive = yes
				is_incapable = no
				prisoner = no
			}
		}
		localisation_key = string_regent_physician_helps_542
	}
}

defined_text = {
	name = GetTroubledHelpD542

	text = {
		trigger = { has_character_flag = pregnancy_healer_help }
		localisation_key = string_generic_physician_helps_542
	}
}

defined_text = {
	name = GetTroubledHelpE542

	text = {
		trigger = { has_character_flag = pregnancy_priest_comfort }
		localisation_key = string_priest_comfort_542
	}
}

defined_text = {
	name = GetTroubledHelpF542

	text = {
		trigger = { has_character_flag = pregnancy_shaman_comfort }
		localisation_key = string_shaman_comfort_542
	}
}

defined_text = {
	name = GetTroubledHelpG542

	text = {
		trigger = { has_character_flag = pregnancy_spouse_comfort }
		localisation_key = string_spouse_comfort_542
	}
}

#blood - uses same tooltips as pre-partum blood.
#defined_text = {
#	name = GetTroubledHelpA543
#
#	text = {
#		trigger = {
#			persistent_event_target:pregnancy_mother_physician_per = {
#				is_alive = yes
#				is_incapable = no
#				prisoner = no
#			}
#		}
#		localisation_key = string_mother_physician_helps_543
#	}
#}
#
#defined_text = {
#	name = GetTroubledHelpB543
#
#	text = {
#		trigger = {
#			persistent_event_target:pregnancy_spouse_physician_per = {
#				is_alive = yes
#				is_incapable = no
#				prisoner = no
#			}
#		}
#		localisation_key = string_spouse_physician_helps_543
#	}
#}

#defined_text = {
#	name = GetTroubledHelpC543
#
#	text = {
#		trigger = {
#			persistent_event_target:pregnancy_regent_physician_per = {
#				is_alive = yes
#				is_incapable = no
#				prisoner = no
#			}
#		}
#		localisation_key = string_regent_physician_helps_543
#	}
#}

#defined_text = {
#	name = GetTroubledHelpD543
#
#	text = {
#		trigger = {
#			has_character_flag = pregnancy_healer_help
#		}
#		localisation_key = string_generic_physician_helps_543
#	}
#}

#defined_text = {
#	name = GetTroubledHelpE543
#
#	text = {
#		trigger = {
#			has_character_flag = pregnancy_priest_comfort
#		}
#		localisation_key = string_priest_comfort_543
#	}
#}

#defined_text = {
#	name = GetTroubledHelpF543
#
#	text = {
#		trigger = {
#			has_character_flag = pregnancy_shaman_comfort
#		}
#		localisation_key = string_shaman_comfort_543
#	}
#}

#defined_text = {
#	name = GetTroubledHelpG543
#
#	text = {
#		trigger = {
#			has_character_flag = pregnancy_spouse_comfort
#		}
#		localisation_key = string_spouse_comfort_543
#	}
#}

# Used in HF.20237
defined_text = {
	name = GetPapalOrgyIntro
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = flag_papal_orgy_drunk }
		localisation_key = string_papal_orgy_drunk
	}
	text = {
		trigger = { has_character_flag = flag_papal_orgy_lustful }
		localisation_key = string_papal_orgy_lustful
	}
	text = {
		trigger = { has_character_flag = flag_papal_orgy_glutton }
		localisation_key = string_papal_orgy_glutton
	}
}

defined_text = {
	name = GetFertilityGoddess
	use_first_valid = yes

	text = {
		trigger = {
			religion_openly_norse_or_reformed_trigger = yes
		}
		localisation_key = string_goddess_freyja
	}
	text = {
		trigger = {
			religion_openly_baltic_or_reformed_trigger = yes
		}
		localisation_key = string_goddess_zemyna
	}
	text = {
		trigger = {
			religion_openly_finnish_or_reformed_trigger = yes
		}
		localisation_key = string_goddess_akka
	}
	fallback_text = {
		localisation_key = string_fallback_old_goddess
	}
}

#"the [GetAgeAdjective] [From.GetManWoman]" would read "the old man", for instance
defined_text = {
	name = GetAgeAdjective

	text = {
		localisation_key = String_very_young # Below 16
		trigger = {
			OR = {
				is_adult = no

				# Or this character is younger than ROOT, by at least 40 years...
				ROOT = {
					is_older_than = PREV

					age_diff = {
						who = PREV
						years >= 40
					}
				}
			}
		}
	}
	text = {
		localisation_key = String_young # Between 16-50 (with some modifiers in mind)
		trigger = {
			OR = {
				# Either this character is a very young person, talking about themselves
				trigger_if = {
					limit = { character = ROOT }
					OR = {
						is_child_age_trigger = yes
						is_adolescent_age_trigger = yes
					}
				}
				trigger_else_if = {
					limit = { is_adult = yes }

					is_senior_age_trigger = no

					OR = { # Or this character is younger than ROOT (by at least 9 years)...
						ROOT = {
							is_older_than = PREV
							age_diff = {
								who = PREV
								years >= 9
							}
						}
						#... or it *is* ROOT (can refer to themselves as young)
						character = ROOT
					}
				}
				# Or this character is younger than ROOT, by at least 30 years...
				trigger_else = {
					ROOT = {
						is_older_than = PREV
						age_diff = {
							who = PREV
							years >= 30
						}
					}
				}
			}
		}
	}
	text = {
		localisation_key = String_middle_aged # Between 40-65
		trigger = { is_middle_aged_trigger = yes }
	}
	text = {
		localisation_key = String_old # Between 50-70
		trigger = {
			is_senior_age_trigger = yes
			is_elder_age_trigger = no
		}
	}
	text = {
		localisation_key = String_elderly
		trigger = { is_elder_age_trigger = yes }
	}

	fallback_text = {
		localisation_key = string_fallback_GetAgeAdjective # Fetches GetCharacterLook
	}
}

# Simple use, describing a character's immediate countenance/appearance
defined_text = {
	name = GetCharacterLook

	text = {
		localisation_key = string_ugly
		trigger = { trait = ugly }
	}
	text = {
		localisation_key = String_handsome
		trigger = {
			trait = attractive
			is_female = no
		}
		weight_multiplier = { factor = 100 }
	}
	text = {
		localisation_key = String_well_kept
		trigger = {
			trait = groomed
		}
		weight_multiplier = { factor = 100 }
	}
	text = {
		localisation_key = string_uncouth
		trigger = {
			trait = uncouth
		}
		weight_multiplier = { factor = 100 }
	}
	text = {
		localisation_key = string_stunning
		trigger = {
			trait = attractive
			is_female = yes
		}
		weight_multiplier = { factor = 100 }
	}
	text = {
		localisation_key = string_seasoned
		trigger = {
			OR = {
				has_instances_of_character_modifier = {
					modifier = duel_experience
					amount >= 5
				}
				leader_traits > 1
			}
		}
		weight_multiplier = { factor = 100 }
	}
	text = {
		localisation_key = string_staunch
		trigger = {
			OR = {
				trait = sturdy
				trait = fat
				NOT = { trait = giant }
			}
		}
		weight_multiplier = { factor = 100 }
	}
	text = {
		localisation_key = string_big
		trigger = {
			OR = {
				trait = sturdy
				trait = fat
			}
		}
		weight_multiplier = { factor = 100 }
	}
	text = {
		localisation_key = string_tall
		trigger = { trait = giant }
		weight_multiplier = { factor = 100 }
	}
	text = {
		localisation_key = string_tired
		trigger = {
			OR = {
				is_weak_trigger = yes
				trait = malnourished
			}
		}
		weight_multiplier = { factor = 100 }
	}
	text = {
		localisation_key = string_short
		trigger = {
			OR = {
				trait = dwarf
				trait = hunchback
			}
		}
		weight_multiplier = { factor = 100 }
	}
	text = {
		localisation_key = string_malnourished
		trigger = { trait = malnourished }
		weight_multiplier = { factor = 10 }
	}
	text = {
		localisation_key = String_robust
		trigger = { is_strong_trigger = yes }
		weight_multiplier = { factor = 100 }
	}
	text = {
		localisation_key = string_smirking
		trigger = {
			OR = {
				is_smart_trigger = yes
				trait = gregarious
				trait = master_seducer
				trait = master_seductress
				trait = socializer
			}
		}
	}
	text = {
		localisation_key = string_smiling
		trigger = {
			OR = {
				is_benevolent_trigger = yes
				trait = gregarious
				trait = socializer
			}
		}
		weight_multiplier = { factor = 10 }
	}
	text = {
		localisation_key = string_menacing
		trigger = {
			OR = {
				is_evil_trigger = yes
				is_devil_worshiper_trigger = yes
			}
		}
		weight_multiplier = { factor = 100 }
	}
	text = {
		localisation_key = string_crestfallen
		trigger = { trait = depressed }
	}
	text = {
		localisation_key = string_innocent
		trigger = { is_virgin_trigger = yes }
		weight_multiplier = { factor = 100 }
	}
	text = {
		localisation_key = String_wounded
		trigger = { trait = wounded }
		weight_multiplier = { factor = 10 }
	}
	text = {
		localisation_key = String_tough_looking
		trigger = { trait = tough_soldier }
		weight_multiplier = { factor = 10 }
	}
	text = {
		localisation_key = String_slouching
		trigger = { trait = slothful }
		weight_multiplier = { factor = 10 }
	}
	fallback_text = {
		localisation_key = string_grinning
	}
}

# Stand-alone sentence, to follow a negative statement. Example:
# "Why would they want me? [event_target.GetRootRomanticWorry]."
# "I can't tell her/him! [event_target.GetRootRomanticWorry]."
# It's never happening. [event_target.GetRootRomanticWorry]."
defined_text = {
	name = GetRootRomanticWorry

	text = {
		localisation_key = String_they_are_married
		trigger = {
			is_married = yes
			NOR = {
				is_married = ROOT
				is_lover = ROOT
			}
		}
	}
	text = {
		localisation_key = String_we_are_married
		trigger = {
			is_married = ROOT
			NOR = {
				is_lover = ROOT
				reverse_has_opinion_modifier = {
					name = opinion_former_lover
					who = ROOT
				}
			}
		}
	}
	text = {
		localisation_key = String_they_prefer_being_alone
		trigger = {
			is_married = no
			has_lover = no
		}
	}
	text = {
		localisation_key = String_they_are_older
		trigger = {
			age_diff = {
				who = ROOT
				years > 25
			}
			is_older_than = ROOT
			NOR = {
				is_married = ROOT
				is_lover = ROOT
			}
		}
	}
	text = {
		localisation_key = String_they_are_younger
		trigger = {
			age_diff = {
				who = ROOT
				years = 25
			}
			NOR = {
				is_older_than = ROOT
				is_married = ROOT
				is_lover = ROOT
			}
		}
	}
	text = {
		localisation_key = String_they_already_have_lovers
		trigger = {
			has_lover = yes
			NOT = { is_lover = ROOT }
		}
	}
	text = {
		localisation_key = String_they_are_higher_tier
		trigger = {
			higher_tier_than = ROOT
			NOR = {
				is_married = ROOT
				is_lover = ROOT
			}
		}
	}
	text = {
		localisation_key = String_they_are_my_former_lover
		trigger = {
			reverse_has_opinion_modifier = {
				name = opinion_former_lover
				who = ROOT
			}
			NOR = {
				is_married = ROOT
				is_lover = ROOT
			}
		}
	}
	text = {
		localisation_key = String_we_are_friends
		trigger = { is_friend = ROOT }
	}
	text = {
		localisation_key = String_we_were_enemies_in_war
		weight_multiplier = { factor = 100 }
		trigger = { has_character_flag = was_battlefield_duel@event_target:other_combatant }
	}
	fallback_text = {
		localisation_key = String_we_have_nothing_in_common
	}
}

# Stand-alone sentence, to follow a negative statement. Example:
# "Why would they want me? [event_target.GetRomanticObstacle]."
# "I can't tell her/him! [event_target.GetRomanticObstacle]."
# It's never happening. [event_target.GetRomanticObstacle]."
defined_text = {
	name = GetRomanticObstacle

	text = {
		localisation_key = String_they_are_married_to_someone_else
		trigger = {
			is_married = yes
			NOR = {
				is_married = ROOT
				is_lover = ROOT
			}
		}
	}
	text = {
		localisation_key = String_we_are_married_for_practical_reason
		trigger = {
			is_married = ROOT
			NOR = {
				is_lover = ROOT
				reverse_has_opinion_modifier = {
					name = opinion_former_lover
					who = ROOT
				}
			}
		}
	}
	text = {
		localisation_key = String_Im_used_to_being_alone
		trigger = {
			ROOT = {
				is_married = no
				has_lover = no
			}
		}
	}
	text = {
		localisation_key = String_they_might_find_me_young
		trigger = {
			age_diff = {
				who = ROOT
				years >= 25
			}
			is_older_than = ROOT
			NOR = {
				is_married = ROOT
				is_lover = ROOT
			}
		}
	}
	text = {
		localisation_key = String_they_might_find_me_old
		trigger = {
			age_diff = {
				who = ROOT
				years >= 25
			}
			NOR = {
				is_older_than = ROOT
				is_married = ROOT
				is_lover = ROOT
			}
		}
	}
	text = {
		localisation_key = String_they_are_popular
		trigger = {
			has_lover = yes
			NOT = { is_lover = ROOT }
		}
	}
	text = {
		localisation_key = String_a_lowly_offer
		trigger = {
			higher_tier_than = ROOT
			NOR = {
				is_married = ROOT
				is_lover = ROOT
			}
		}
	}
	text = {
		localisation_key = String_we_parted_ways_once
		trigger = {
			reverse_has_opinion_modifier = {
				name = opinion_former_lover
				who = ROOT
			}
			NOR = {
				is_married = ROOT
				is_lover = ROOT
			}
		}
	}
	text = {
		localisation_key = String_could_risk_friendship
		trigger = { is_friend = ROOT }
	}
	text = {
		localisation_key = String_they_were_my_enemy
		weight_multiplier = { factor = 100 }
		trigger = {
			FROM = {
				has_character_flag = was_battlefield_duel@event_target:other_combatant
			}
		}
	}
	fallback_text = {
		localisation_key = String_we_have_little_in_common
	}
}

# Dead Christians forget their Popes
defined_text = {
	name = GetBaptizedByName
	use_first_valid = yes

	text = {
		trigger = {
			ROOT = { persistent_event_target:baptizing_pope_per = { always = yes } }
			is_alive = yes
			OR = {
				trait = baptized_by_pope
				trait = baptized_by_patriarch
			}
		}
		localisation_key = string_baptized_by_pope_alive
	}
	text = {
		trigger = {
			FROM = {
				persistent_event_target:baptizing_pope_per = { always = yes }
				is_alive = yes

				OR = {
					trait = baptized_by_pope
					trait = baptized_by_patriarch
				}
			}
		}
		localisation_key = string_from_baptized_by_pope_aliveop
	}
	text = {
		trigger = {
			is_alive = no
			trait = baptized_by_pope
		}
		localisation_key = string_baptized_by_pope_dead
	}
	text = {
		trigger = {
			is_alive = no
			trait = baptized_by_patriarch
		}
		localisation_key = string_baptized_by_patriarch_dead
	}
	text = {
		trigger = {
			ROOT = { persistent_event_target:baptizing_bishop_per = { always = yes } }
			is_alive = yes
			trait = baptized_by_bishop
		}
		localisation_key = string_baptized_by_bishop_alive
	}
	text = {
		trigger = {
			FROM = {
				persistent_event_target:baptizing_bishop_per = { always = yes }

				is_alive = yes
				trait = baptized_by_bishop
			}
		}
		localisation_key = string_from_baptized_by_bishop_aliveop
	}
	text = {
		trigger = {
			is_alive = no
			trait = baptized_by_bishop
		}
		localisation_key = string_baptized_by_bishop_dead
	}
	text = {
		trigger = {
			is_alive = yes
			persistent_event_target:baptizing_satanist_per = { is_female = no }
			trait = baptized_by_satan
		}
		localisation_key = string_baptized_by_satan_alive_male
	}
	text = {
		trigger = {
			FROM = {
				persistent_event_target:baptizing_satanist_per = { is_female = no }

				is_alive = yes
				trait = baptized_by_satan
			}
		}
		localisation_key = string_from_baptized_by_satan_male_aliveop
	}
	text = {
		trigger = {
			is_alive = yes
			persistent_event_target:baptizing_satanist_per = { is_female = yes }
			trait = baptized_by_satan
		}
		localisation_key = string_baptized_by_satan_alive_female
	}
	text = {
		trigger = {
			FROM = {
				persistent_event_target:baptizing_satanist_per = { always = yes }

				is_alive = yes
				trait = baptized_by_satan
			}
		}
		localisation_key = string_from_baptized_by_satan_female_aliveop
	}
	text = {
		trigger = {
			is_alive = no
			trait = baptized_by_satan
		}
		localisation_key = string_baptized_by_satan_dead
	}
}

# Response to visit of new Vassal of a Crowned Catholic/Fraticelli King
defined_text = {
	name = GetHomageReaction
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = flag_homage_play_success }
		localisation_key = string_homage_play_success
	}
	text = {
		trigger = { has_character_flag = flag_homage_play_failure }
		localisation_key = string_homage_play_failure
	}
	text = {
		trigger = { has_character_flag = flag_homage_seduce_success }
		localisation_key = string_homage_seduce_success
	}
	text = {
		trigger = { has_character_flag = flag_homage_seduce_failure }
		localisation_key = string_homage_seduce_failure
	}
	text = {
		trigger = { has_character_flag = flag_homage_mock_success }
		localisation_key = string_homage_mock_success
	}
	text = {
		trigger = { has_character_flag = flag_homage_mock_failure }
		localisation_key = string_homage_mock_failure
	}
	text = {
		trigger = { has_character_flag = flag_homage_formal_success }
		localisation_key = string_homage_formal_success
	}
	text = {
		trigger = { has_character_flag = flag_homage_formal_failure }
		localisation_key = string_homage_formal_failure
	}
	text = {
		trigger = { has_character_flag = flag_homage_informal_success }
		localisation_key = string_homage_informal_success
	}
	text = {
		trigger = { has_character_flag = flag_homage_informal_failure }
		localisation_key = string_homage_informal_failure
	}
}

# Intro for the Appeased's response event
defined_text = {
	name = GetSwayVisitIntro
	use_first_valid = yes

	text = {
		trigger = {
			FROM = { has_character_flag = flag_appease_visit_relative }
		}
		localisation_key = string_appease_visit_relative
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_appease_visit_religion }
		}
		localisation_key = string_appease_visit_religion
	}
	text = {
		trigger = {
			FROM = {
				trait = hedonist
				has_character_flag = flag_appease_visit_inside
			}
		}
		localisation_key = string_appease_visit_inside_hedonist
	}
	text = {
		trigger = {
			FROM = {
				trait = game_master
				has_character_flag = flag_appease_visit_inside
			}
		}
		localisation_key = string_appease_visit_inside_gamer
	}
	text = {
		trigger = {
			FROM = {
				trait = socializer
				has_character_flag = flag_appease_visit_inside
			}
		}
		localisation_key = string_appease_visit_inside_socializer
	}
	text = {
		trigger = {
			FROM = {
				trait = mystic
				has_character_flag = flag_appease_visit_inside
			}
		}
		localisation_key = string_appease_visit_inside_mystic
	}
	text = {
		trigger = {
			FROM = {
				trait = scholar
				has_character_flag = flag_appease_visit_inside
			}
		}
		localisation_key = string_appease_visit_inside_scholar
	}
	text = {
		trigger = {
			FROM = {
				has_character_flag = flag_appease_visit_inside

				NOR = {
					trait = scholar
					trait = mystic
					trait = socializer
					trait = game_master
					trait = hedonist
				}
			}
		}
		localisation_key = string_appease_visit_inside_default
	}
	text = {
		trigger = {
			FROM = {
				trait = hunter
				has_character_flag = flag_appease_visit_outside
			}
		}
		localisation_key = string_appease_visit_outside_hunter
	}
	text = {
		trigger = {
			FROM = {
				trait = falconer
				has_character_flag = flag_appease_visit_outside
			}
		}
		localisation_key = string_appease_visit_outside_falconer
	}
	text = {
		trigger = {
			FROM = {
				trait = gardener
				has_character_flag = flag_appease_visit_outside
			}
		}
		localisation_key = string_appease_visit_outside_gardener
	}
	text = {
		trigger = {
			FROM = {
				trait = duelist
				has_character_flag = flag_appease_visit_outside
			}
		}
		localisation_key = string_appease_visit_outside_duelist
	}
	text = {
		trigger = {
			FROM = {
				trait = architect
				has_character_flag = flag_appease_visit_outside
			}
		}
		localisation_key = string_appease_visit_outside_architect
	}
	text = {
		trigger = {
			FROM = {
				has_character_flag = flag_appease_visit_outside

				NOR = {
					trait = hunter
					trait = falconer
					trait = gardener
					trait = duelist
					trait = architect
				}
			}
		}
		localisation_key = string_appease_visit_outside_default
	}
}

# Outro for the Appeased's response event
defined_text = {
	name = GetSwayVisitOutro
	use_first_valid = yes

	text = {
		trigger = {
			FROM = { has_character_flag = flag_appease_visit_swayed_3 }
		}
		localisation_key = string_appease_visit_swayed_2
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_appease_visit_swayed_2 }
		}
		localisation_key = string_appease_visit_swayed_3
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_appease_visit_swayed_1 }
		}
		localisation_key = string_appease_visit_swayed_1
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_appease_visit_swayed_0 }
		}
		localisation_key = string_appease_visit_swayed_0
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_appease_visit_failure_1 }
		}
		localisation_key = string_appease_visit_failure_1
	}
}
defined_text = {
	name = GetLeechRank
	use_first_valid = yes

	text = {
		trigger = {
			is_female = no
			lower_real_tier_than = KING
		}
		localisation_key = string_leech_lord
	}
	text = {
		trigger = {
			is_female = yes
			lower_real_tier_than = KING
		}
		localisation_key = string_leech_lady
	}
	text = {
		trigger = {
			higher_real_tier_than = KING
		}
		localisation_key = string_leech_ruler
	}
	fallback_text = {
		localisation_key = string_leech_ruler
	}
}

# Custom loc for Main Antagonize slander event
defined_text = {
	name = GetRandomSlanderDesc
	use_first_valid = yes

	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_kinslayer }
		}
		localisation_key = string_antagonized_desc_kinslayer
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_excommunicated }
		}
		localisation_key = string_antagonized_desc_excommunicated
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_eunuch }
		}
		localisation_key = string_antagonized_desc_eunuch
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_mystic }
		}
		localisation_key = string_antagonized_desc_mystic
	}
	text = {
		trigger = {
			FROM = {
				is_female = no
				has_character_flag = flag_antagonized_option_seducer
			}
		}
		localisation_key = string_antagonized_desc_seducer
	}
	text = {
		trigger = {
			FROM = {
				is_female = yes
				has_character_flag = flag_antagonized_option_seducer
			}
		}
		localisation_key = string_antagonized_desc_seductress
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_schemer }
		}
		localisation_key = string_antagonized_desc_schemer
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_impaler }
		}
		localisation_key = string_antagonized_desc_impaler
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_hedonist }
		}
		localisation_key = string_antagonized_desc_hedonist
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_bastard }
		}
		localisation_key = string_antagonized_desc_bastard
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_maimed }
		}
		localisation_key = string_antagonized_desc_maimed
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_infirm }
		}
		localisation_key = string_antagonized_desc_infirm
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_malnourished }
		}
		localisation_key = string_antagonized_desc_malnourished
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_fat }
		}
		localisation_key = string_antagonized_desc_fat
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_depressed }
		}
		localisation_key = string_antagonized_desc_depressed
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_drunkard }
		}
		localisation_key = string_antagonized_desc_drunkard
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_lunatic }
		}
		localisation_key = string_antagonized_desc_lunatic
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_possessed }
		}
		localisation_key = string_antagonized_desc_possessed
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_ugly }
		}
		localisation_key = string_antagonized_desc_ugly
	}
	text = {
		trigger = {
			FROM = {
				is_female = no
				has_character_flag = flag_antagonized_option_chaste
			}
		}
		localisation_key = string_antagonized_desc_chaste
	}
	text = {
		trigger = {
			FROM = {
				is_female = yes
				has_character_flag = flag_antagonized_option_chaste
			}
		}
		localisation_key = string_antagonized_desc_chaste_f
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_temperate }
		}
		localisation_key = string_antagonized_desc_temperate
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_charitable }
		}
		localisation_key = string_antagonized_desc_charitable
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_diligent }
		}
		localisation_key = string_antagonized_desc_diligent
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_patient }
		}
		localisation_key = string_antagonized_desc_patient
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_kind }
		}
		localisation_key = string_antagonized_desc_kind
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_humble }
		}
		localisation_key = string_antagonized_desc_humble
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_lustful }
		}
		localisation_key = string_antagonized_desc_lustful
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_gluttonous }
		}
		localisation_key = string_antagonized_desc_gluttonous
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_greedy }
		}
		localisation_key = string_antagonized_desc_greedy
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_slothful }
		}
		localisation_key = string_antagonized_desc_slothful
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_wroth }
		}
		localisation_key = string_antagonized_desc_wroth
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_envious }
		}
		localisation_key = string_antagonized_desc_envious
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_proud }
		}
		localisation_key = string_antagonized_desc_proud
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_ambitious }
		}
		localisation_key = string_antagonized_desc_ambitious
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_arbitrary }
		}
		localisation_key = string_antagonized_desc_arbitrary
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_brave }
		}
		localisation_key = string_antagonized_desc_brave
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_content }
		}
		localisation_key = string_antagonized_desc_content
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_craven }
		}
		localisation_key = string_antagonized_desc_craven
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_cruel }
		}
		localisation_key = string_antagonized_desc_cruel
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_cynical }
		}
		localisation_key = string_antagonized_desc_cynical
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_deceitful }
		}
		localisation_key = string_antagonized_desc_deceitful
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_erudite }
		}
		localisation_key = string_antagonized_desc_erudite
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_gregarious }
		}
		localisation_key = string_antagonized_desc_gregarious
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_honest }
		}
		localisation_key = string_antagonized_desc_honest
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_just }
		}
		localisation_key = string_antagonized_desc_just
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_paranoid }
		}
		localisation_key = string_antagonized_desc_paranoid
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_shy }
		}
		localisation_key = string_antagonized_desc_shy
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_dull }
		}
		localisation_key = string_antagonized_desc_dull
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_trusting }
		}
		localisation_key = string_antagonized_desc_trusting
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_zealous }
		}
		localisation_key = string_antagonized_desc_zealous
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_hunchback }
		}
		localisation_key = string_antagonized_desc_hunchback
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_relative }
		}
		localisation_key = string_antagonized_desc_relative
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_infidel }
		}
		localisation_key = string_antagonized_desc_infidel
	}
	text = {
		trigger = {
			FROM = { has_character_flag = flag_antagonized_option_heretic }
		}
		localisation_key = string_antagonized_desc_heretic
	}
	fallback_text = { # Fallback for occasional desyncronized multiplayer
		localisation_key = string_antagonized_desc_fallback
	}
}

# Custom loc for Main Antagonize slander event (for Antagonized reaction event)
defined_text = {
	name = GetRandomSlanderReactionDesc
	use_first_valid = yes

	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_kinslayer }
		}
		localisation_key = string_antagonized_reaction_kinslayer
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_excommunicated }
		}
		localisation_key = string_antagonized_reaction_excommunicated
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_eunuch }
		}
		localisation_key = string_antagonized_reaction_eunuch
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_mystic }
		}
		localisation_key = string_antagonized_reaction_mystic
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_seducer }
		}
		localisation_key = string_antagonized_reaction_seducer
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_schemer }
		}
		localisation_key = string_antagonized_reaction_schemer
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_impaler }
		}
		localisation_key = string_antagonized_reaction_impaler
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_hedonist }
		}
		localisation_key = string_antagonized_reaction_hedonist
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_bastard }
		}
		localisation_key = string_antagonized_reaction_bastard
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_maimed }
		}
		localisation_key = string_antagonized_reaction_maimed
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_infirm }
		}
		localisation_key = string_antagonized_reaction_infirm
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_malnourished }
		}
		localisation_key = string_antagonized_reaction_malnourished
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_fat }
		}
		localisation_key = string_antagonized_reaction_fat
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_depressed }
		}
		localisation_key = string_antagonized_reaction_depressed
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_drunkard }
		}
		localisation_key = string_antagonized_reaction_drunkard
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_lunatic }
		}
		localisation_key = string_antagonized_reaction_lunatic
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_possessed }
		}
		localisation_key = string_antagonized_reaction_possessed
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_ugly }
		}
		localisation_key = string_antagonized_reaction_ugly
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_chaste }
		}
		localisation_key = string_antagonized_reaction_chaste
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_temperate }
		}
		localisation_key = string_antagonized_reaction_temperate
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_charitable }
		}
		localisation_key = string_antagonized_reaction_charitable
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_diligent }
		}
		localisation_key = string_antagonized_reaction_diligent
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_patient }
		}
		localisation_key = string_antagonized_reaction_patient
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_kind }
		}
		localisation_key = string_antagonized_reaction_kind
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_humble }
		}
		localisation_key = string_antagonized_reaction_humble
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_lustful }
		}
		localisation_key = string_antagonized_reaction_lustful
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_gluttonous }
		}
		localisation_key = string_antagonized_reaction_gluttonous
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_greedy }
		}
		localisation_key = string_antagonized_reaction_greedy
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_slothful }
		}
		localisation_key = string_antagonized_reaction_slothful
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_wroth }
		}
		localisation_key = string_antagonized_reaction_wroth
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_envious }
		}
		localisation_key = string_antagonized_reaction_envious
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_proud }
		}
		localisation_key = string_antagonized_reaction_proud
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_ambitious }
		}
		localisation_key = string_antagonized_reaction_ambitious
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_arbitrary }
		}
		localisation_key = string_antagonized_reaction_arbitrary
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_brave }
		}
		localisation_key = string_antagonized_reaction_brave
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_content }
		}
		localisation_key = string_antagonized_reaction_content
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_craven }
		}
		localisation_key = string_antagonized_reaction_craven
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_cruel }
		}
		localisation_key = string_antagonized_reaction_cruel
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_cynical }
		}
		localisation_key = string_antagonized_reaction_cynical
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_deceitful }
		}
		localisation_key = string_antagonized_reaction_deceitful
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_erudite }
		}
		localisation_key = string_antagonized_reaction_erudite
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_gregarious }
		}
		localisation_key = string_antagonized_reaction_gregarious
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_honest }
		}
		localisation_key = string_antagonized_reaction_honest
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_just }
		}
		localisation_key = string_antagonized_reaction_just
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_paranoid }
		}
		localisation_key = string_antagonized_reaction_paranoid
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_shy }
		}
		localisation_key = string_antagonized_reaction_shy
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_dull }
		}
		localisation_key = string_antagonized_reaction_dull
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_trusting }
		}
		localisation_key = string_antagonized_reaction_trusting
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_zealous }
		}
		localisation_key = string_antagonized_reaction_zealous
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_hunchback }
		}
		localisation_key = string_antagonized_reaction_hunchback
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_relative }
		}
		localisation_key = string_antagonized_reaction_relative
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_infidel }
		}
		localisation_key = string_antagonized_reaction_infidel
	}
	text = {
		trigger = {
			ROOT = { has_character_flag = flag_antagonized_option_heretic }
		}
		localisation_key = string_antagonized_reaction_heretic
	}
	text = {
		localisation_key = string_antagonized_reaction_fallback
	}
}


defined_text = {
	name = GetHaruspexName
	use_first_valid = yes

	text = {
		trigger = {
			FROMFROM = {
				is_alive = yes
				NOT = { character = ROOT }
			}
		}
		localisation_key = string_named_diviner
	}
	text = {
		localisation_key = string_cheap_diviner
	}
}

defined_text = {
	name = GetReformationNature
	use_first_valid = yes

	text = {
		trigger = {
			ROOT = {
				has_religion_feature = religion_peaceful
			}
		}
		localisation_key = string_reformed_religion_peaceful
	}
	text = {
		trigger = {
			ROOT = {
				has_religion_feature = religion_warlike
			}
		}
		localisation_key = string_reformed_religion_warlike
	}
	text = {
		trigger = {
			ROOT = {
				has_religion_feature = religion_defensive
			}
		}
		localisation_key = string_reformed_religion_defensive
	}
	text = {
		trigger = {
			ROOT = {
				has_religion_feature = religion_proselytizing
			}
		}
		localisation_key = string_reformed_religion_proselytizing
	}
	text = {
		trigger = {
			ROOT = {
				has_religion_feature = religion_dogmatic
			}
		}
		localisation_key = string_reformed_religion_dogmatic
	}
	text = {
		trigger = {
			ROOT = {
				has_religion_feature = religion_cosmopolitan
			}
		}
		localisation_key = string_reformed_religion_cosmopolitan
	}
}

defined_text = {
	name = GetReformationReligion
	use_first_valid = yes

	text = {
		trigger = {
			ROOT = {
				religion = norse_pagan_reformed
				NOR = {
					has_religion_feature = religion_matriarchal
					has_religion_feature = religion_equal
				}
			}
		}
		localisation_key = string_reformed_religion_norse
	}
	text = {
		trigger = {
			ROOT = {
				religion = norse_pagan_reformed
				OR = {
					has_religion_feature = religion_matriarchal
					has_religion_feature = religion_equal
				}
			}
		}
		localisation_key = string_reformed_religion_norse_equal
	}
	text = {
		trigger = {
			ROOT = {
				religion = tengri_pagan_reformed
			}
		}
		localisation_key = string_reformed_religion_tengri
	}
	text = {
		trigger = {
			ROOT = {
				religion = slavic_pagan_reformed
			}
		}
		localisation_key = string_reformed_religion_slavic
	}
	text = {
		trigger = {
			ROOT = {
				religion = baltic_pagan_reformed
			}
		}
		localisation_key = string_reformed_religion_baltic
	}
	text = {
		trigger = {
			ROOT = {
				religion = finnish_pagan_reformed
			}
		}
		localisation_key = string_reformed_religion_finnish
	}
	text = {
		trigger = {
			ROOT = {
				religion = west_african_pagan_reformed
			}
		}
		localisation_key = string_reformed_religion_west_african
	}
	text = {
		trigger = {
			ROOT = {
				religion = zun_pagan_reformed
			}
		}
		localisation_key = string_reformed_religion_zunist
	}
	text = {
		trigger = {
			ROOT = {
				religion = bon_pagan_reformed
			}
		}
		localisation_key = string_reformed_religion_bon
	}
	text = {
		trigger = {
			ROOT = {
				religion = aztec_pagan_reformed
			}
		}
		localisation_key = string_reformed_religion_aztec
	}
	text = {
		trigger = {
			ROOT = {
				religion = hellenic_pagan_reformed
			}
		}
		localisation_key = string_reformed_religion_hellenic
	}
}

defined_text = {
	name = GetReformationLeadership
	use_first_valid = yes

	text = {
		trigger = {
			ROOT = {
				has_religion_feature = religion_temporal_head
			}
		}
		localisation_key = string_reformed_religion_temporal_head
	}
	text = {
		trigger = {
			ROOT = {
				has_religion_feature = religion_theocratic_head
			}
		}
		localisation_key = string_reformed_religion_theocratic_head
	}
	text = {
		trigger = {
			ROOT = {
				has_religion_feature = religion_autocephaly
			}
		}
		localisation_key = string_reformed_religion_autocephaly
	}
	text = {
		trigger = {
			ROOT = {
				has_religion_feature = religion_no_leader
			}
		}
		localisation_key = string_reformed_religion_no_leader
	}
}

defined_text = {
	name = GetReformationOutro
	use_first_valid = yes

	text = {
		trigger = {
			ROOT = {
				religion = aztec_pagan_reformed
			}
		}
		localisation_key = string_reformed_religion_aztec_outro
	}
	text = {
		trigger = {
			ROOT = {
				religion = hellenic_pagan_reformed
			}
		}
		localisation_key = string_reformed_religion_hellenic_outro
	}
	text = {
		trigger = {
			ROOT = {
				OR = {
					religion = zun_pagan_reformed
					religion = bon_pagan_reformed
				}
			}
		}
		localisation_key = string_reformed_religion_eastern_outro
	}
	text = {
		localisation_key = string_reformed_religion_default_outro
	}
}

defined_text = {
	name = GoldOwedToJews
	use_first_valid = yes

	text = {
		trigger = {
			any_owned_bloodline = {
	    		has_bloodline_flag = jewish_saintly_bloodline
	    	}
		}
		localisation_key = string_friendly_jewish_amount
	}

	text = {
		localisation_key = string_unfriendly_jewish_amount
	}
}

defined_text = {
	name = JewishGoldInterests
	use_first_valid = yes

	text = {
		trigger = {
			any_owned_bloodline = {
				has_bloodline_flag = jewish_saintly_bloodline
			}
		}
		localisation_key = string_friendly_jewish_interest
	}

	text = {
		localisation_key = string_unfriendly_jewish_interest
	}
}

defined_text = {
	name = GetMiracleShort
	use_first_valid = yes

	text = {
		localisation_key = ShortMiracle01
		trigger = {
			check_variable = {
				which = global_miracle
				value == 1
			}
		}
	}
	text = {
		localisation_key = ShortMiracle02
		trigger = {
			check_variable = {
				which = global_miracle
				value == 2
			}
		}
	}
	text = {
		localisation_key = ShortMiracle03
		trigger = {
			check_variable = {
				which = global_miracle
				value == 3
			}
		}
	}
	text = {
		localisation_key = ShortMiracle04
		trigger = {
			check_variable = {
				which = global_miracle
				value == 4
			}
		}
	}
	text = {
		localisation_key = ShortMiracle05
		trigger = {
			check_variable = {
				which = global_miracle
				value == 5
			}
		}
	}
	text = {
		localisation_key = ShortMiracle06
		trigger = {
			check_variable = {
				which = global_miracle
				value == 6
			}
		}
	}
	text = {
		localisation_key = ShortMiracle07
		trigger = {
			check_variable = {
				which = global_miracle
				value == 7
			}
		}
	}
	text = {
		localisation_key = ShortMiracle08
		trigger = {
			check_variable = {
				which = global_miracle
				value == 8
			}
		}
	}
	text = {
		localisation_key = ShortMiracle09
		trigger = {
			check_variable = {
				which = global_miracle
				value == 9
			}
		}
	}
	text = {
		localisation_key = ShortMiracle10
		trigger = {
			check_variable = {
				which = global_miracle
				value == 10
			}
		}
	}
	text = {
		localisation_key = ShortMiracle11
		trigger = {
			check_variable = {
				which = global_miracle
				value == 11
			}
		}
	}
	text = {
		localisation_key = ShortMiracle12
		trigger = {
			check_variable = {
				which = global_miracle
				value == 12
			}
		}
	}
	text = {
		localisation_key = ShortMiracle13
		trigger = {
			check_variable = {
				which = global_miracle
				value == 13
			}
		}
	}
	text = {
		localisation_key = ShortMiracle14
		trigger = {
			check_variable = {
				which = global_miracle
				value == 14
			}
		}
	}
	text = {
		localisation_key = ShortMiracle15
		trigger = {
			check_variable = {
				which = global_miracle
				value == 15
			}
		}
	}
	text = {
		localisation_key = ShortMiracle16
		trigger = {
			check_variable = {
				which = global_miracle
				value == 16
			}
		}
	}
}

defined_text = {
	name = RandomSaintMiracle
	use_first_valid = yes

	## Common Ones
	# Stigmata
	text = {
		localisation_key = random_miracle_01
		trigger = {
			check_variable = {
				which = global_miracle
				value == 1
			}
		}
	}

	# Not Decaying after death
	text = {
		localisation_key = random_miracle_02
		trigger = {
			check_variable = {
				which = global_miracle
				value == 2
			}
		}
	}

	# Miraculous Healing
	text = {
		localisation_key = random_miracle_03
		trigger = {
			check_variable = {
				which = global_miracle
				value == 3
			}
		}
	}

	## Regular Ones
	# Prophecy
	text = {
		localisation_key = random_miracle_04
		trigger = {
			check_variable = {
				which = global_miracle
				value == 4
			}
		}
	}

	# Mindreading
	text = {
		localisation_key = random_miracle_05
		trigger = {
			check_variable = {
				which = global_miracle
				value == 5
			}
		}
	}

	# Exorcism
	text = {
		localisation_key = random_miracle_06
		trigger = {
			check_variable = {
				which = global_miracle
				value == 6
			}
		}
	}

	# Angel Encounter
	text = {
		localisation_key = random_miracle_07
		trigger = {
			check_variable = {
				which = global_miracle
				value == 7
			}
		}
	}

	## Rare Ones
	# Walking on water
	text = {
		localisation_key = random_miracle_08
		trigger = {
			check_variable = {
				which = global_miracle
				value == 8
			}
		}
	}

	# Heard after death
	text = {
		localisation_key = random_miracle_09
		trigger = {
			check_variable = {
				which = global_miracle
				value == 9
			}
		}
	}

	# Create fire
	text = {
		localisation_key = random_miracle_10
		trigger = {
			check_variable = {
				which = global_miracle
				value == 10
			}
		}
	}

	# Moving heavy objects with prayers
	text = {
		localisation_key = random_miracle_11
		trigger = {
			check_variable = {
				which = global_miracle
				value == 11
			}
		}
	}

	## Obscure Ones
	# Walk around with own head
	text = {
		localisation_key = random_miracle_12
		trigger = {
			check_variable = {
				which = global_miracle
				value == 12
			}
		}
	}

	# Give water the power of love
	text = {
		localisation_key = random_miracle_13
		trigger = {
			check_variable = {
				which = global_miracle
				value == 13
			}
		}
	}

	# Broker peace with rats
	text = {
		localisation_key = random_miracle_14
		trigger = {
			check_variable = {
				which = global_miracle
				value == 14
			}
		}
	}

	# Talking dog
	text = {
		localisation_key = random_miracle_15
		trigger = {
			check_variable = {
				which = global_miracle
				value == 15
			}
		}
	}

	# Flying
	text = {
		localisation_key = random_miracle_16
		trigger = {
			check_variable = {
				which = global_miracle
				value == 16
			}
		}
	}
}

# Needs a province scope
defined_text = {
	name = GetTerrain
	use_first_valid = yes

	text = {
		trigger = { terrain = forest }
		localisation_key = string_forest
	}
	text = {
		trigger = { terrain = hills }
		localisation_key = string_hills
	}
	text = {
		trigger = { terrain = mountain }
		localisation_key = string_mountains
	}
	text = {
		trigger = { terrain = plains }
		localisation_key = string_plains
	}
	text = {
		trigger = { terrain = farmlands }
		localisation_key = string_farmlands
	}
	text = {
		trigger = { terrain = steppe }
		localisation_key = string_steppe
	}
	text = {
		trigger = { terrain = desert }
		localisation_key = string_desert
	}
	text = {
		trigger = { terrain = jungle }
		localisation_key = string_jungle
	}
	text = {
		trigger = { terrain = arctic }
		localisation_key = string_arctic
	}
	fallback_text = {
		localisation_key = string_terrain
	}
}

# Needs a province scope
defined_text = {
	name = GetTerrainCap
	use_first_valid = yes

	text = {
		trigger = { terrain = forest }
		localisation_key = string_Forest
	}
	text = {
		trigger = { terrain = hills }
		localisation_key = string_Hills
	}
	text = {
		trigger = { terrain = mountain }
		localisation_key = string_Mountains
	}
	text = {
		trigger = { terrain = plains }
		localisation_key = string_Plains
	}
	text = {
		trigger = { terrain = farmlands }
		localisation_key = string_Farmlands
	}
	text = {
		trigger = { terrain = steppe }
		localisation_key = string_Steppe
	}
	text = {
		trigger = { terrain = desert }
		localisation_key = string_Desert
	}
	text = {
		trigger = { terrain = jungle }
		localisation_key = string_Jungle
	}
	text = {
		trigger = { terrain = arctic }
		localisation_key = string_Arctic
	}
	fallback_text = {
		localisation_key = string_Terrain
	}
}

### Needs a province scope - USE ONLY TOGETHER WITH GetTerrain! ###
defined_text = {
	name = GetInOn
	use_first_valid = yes

	text = {
		trigger = {
			OR = {
				terrain = plains
				terrain = farmlands
				terrain = steppe
			}
		}
		localisation_key = string_on
	}
	text = { # All others
		localisation_key = string_in
	}
}

### Needs a province scope - USE ONLY TOGETHER WITH GetTerrain! ###
defined_text = {
	name = GetInOnCap

	text = {
		trigger = {
			OR = {
				terrain = plains
				terrain = farmlands
				terrain = steppe
			}
		}
		localisation_key = string_On
	}
	text = { # All others
		localisation_key = string_In
	}
}

### Needs a province scope - USE ONLY TOGETHER WITH GetTerrain! ###
defined_text = {
	name = GetThroughOver
	use_first_valid = yes

	text = {
		trigger = {
			OR = {
				terrain = hills
				terrain = plains
				terrain = plains
			}
		}
		localisation_key = string_over
	}
	text = {
		localisation_key = string_through
	}
}

# Needs a province scope
defined_text = {
	name = GetTreeRockFence

	text = {
		trigger = { terrain = forest }
		localisation_key = string_tree
	}
	text = {
		trigger = { terrain = forest }
		localisation_key = string_fallen_tree
	}
	text = {
		trigger = { terrain = forest }
		localisation_key = string_hollow_tree
	}
	text = {
		trigger = { terrain = hills }
		localisation_key = string_fallen_tree
	}
	text = {
		trigger = { terrain = mountain }
		localisation_key = string_dried_up_tree
	}
	text = {
		trigger = { terrain = mountain }
		localisation_key = string_fallen_tree
	}
	text = {
		trigger = { terrain = plains }
		localisation_key = string_large_rock
	}
	text = {
		trigger = { terrain = farmlands }
		localisation_key = string_old_fence
	}
	text = {
		trigger = { terrain = steppe }
		localisation_key = string_fallen_tree
	}
	text = {
		trigger = { terrain = steppe }
		localisation_key = string_dried_up_tree
	}
	text = {
		trigger = { terrain = desert }
		localisation_key = string_dried_up_tree
	}
	text = {
		trigger = { terrain = desert }
		localisation_key = string_dead_tree
	}
	text = {
		trigger = { terrain = jungle }
		localisation_key = string_tree_trunk
	}
	text = {
		trigger = { terrain = arctic }
		localisation_key = string_frozen_rock
	}
	fallback_text = {
		localisation_key = string_rock
	}
}


defined_text = {
	name = GetNature

	text = {
		trigger = { trait = kind }
		localisation_key = GetNatureKind
	}
	text = {
		trigger = { trait = humble }
		localisation_key = GetNatureHumble
	}
	text = {
		trigger = { trait = temperate }
		localisation_key = GetNatureTemperate
	}
	text = {
		trigger = { trait = chaste }
		localisation_key = GetNatureChaste
	}
	text = {
		trigger = { trait = diligent }
		localisation_key = GetNatureDiligent
	}
	text = {
		trigger = { trait = patient }
		localisation_key = GetNaturePatient
	}
	text = {
		trigger = { trait = charitable }
		localisation_key = GetNatureCharitable
	}
	text = {
		trigger = { trait = lunatic }
		localisation_key = GetNatureLunatic
	}
	text = {
		trigger = { trait = zealous }
		localisation_key = GetNatureZealous
	}
	text = {
		trigger = { trait = honest }
		localisation_key = GetNatureHonest
	}
	fallback_text = {
		localisation_key = GetGenericNature
	}
}

defined_text = {
	name = GetConsortSex
	use_first_valid = yes

	text = {
		trigger = { is_female = yes }
		localisation_key = string_concubine
	}
	text = {
		localisation_key = string_consort
	}
}

defined_text = {
	name = GetConsortSexCap
	use_first_valid = yes

	text = {
		trigger = { is_female = yes }
		localisation_key = string_concubine_cap
	}
	text = {
		localisation_key = string_consort_cap
	}
}

defined_text = {
	name = GetOppositeConsortSex
	use_first_valid = yes

	text = {
		trigger = { is_female = no }
		localisation_key = string_concubine
	}
	text = {
		localisation_key = string_consort
	}
}

defined_text = {
	name = GetOppositeConsortSexCap
	use_first_valid = yes

	text = {
		trigger = { is_female = no }
		localisation_key = string_concubine_cap
	}
	text = {
		localisation_key = string_consort_cap
	}
}

# TODO: Incorporate other Plus pagan religions
defined_text = {
	name = GetPreferredReformationAttribute
	use_first_valid = yes

	text = {
		trigger = {
			OR = {
				FROM = {
					OR = {
						religion_openly_norse_or_reformed_trigger = yes
						religion_openly_tengri_or_reformed_trigger = yes
						religion_openly_german_or_reformed_trigger = yes
					}
				}
				ROOT = {
					OR = {
						religion_openly_norse_or_reformed_trigger = yes
						religion_openly_tengri_or_reformed_trigger = yes
						religion_openly_german_or_reformed_trigger = yes
					}
				}
			}
		}
		localisation_key = tooltip_religion_feature_martial
	}
	text = {
		trigger = {
			OR = {
				FROM = {
					OR = {
						religion_openly_slavic_or_reformed_trigger = yes
						religion_openly_baltic_or_reformed_trigger = yes
						religion_openly_celtic_or_reformed_trigger = yes
					}
				}
				ROOT = {
					OR = {
						religion_openly_slavic_or_reformed_trigger = yes
						religion_openly_baltic_or_reformed_trigger = yes
						religion_openly_celtic_or_reformed_trigger = yes
					}
				}
			}
		}
		localisation_key = tooltip_religion_feature_diplomacy
	}
	text = {
		trigger = {
			OR = {
				FROM = {
					religion_openly_finnish_or_reformed_trigger = yes
				}
				ROOT = {
					religion_openly_finnish_or_reformed_trigger = yes
				}
			}
		}
		localisation_key = tooltip_religion_feature_intrigue
	}
	text = {
		trigger = {
			OR = {
				FROM = {
					OR = {
						religion_openly_west_african_or_reformed_trigger = yes
						religion_openly_zun_or_reformed_trigger = yes
					}
				}
				ROOT = {
					OR = {
						religion_openly_west_african_or_reformed_trigger = yes
						religion_openly_zun_or_reformed_trigger = yes
					}
				}
			}
		}
		localisation_key = tooltip_religion_feature_stewardship
	}
	text = {
		trigger = {
			OR = {
				FROM = {
					OR = {
						religion_openly_hellenic_or_reformed_trigger = yes
						religion_openly_bon_or_reformed_trigger = yes
					}
				}
				ROOT = {
					OR = {
						religion_openly_hellenic_or_reformed_trigger = yes
						religion_openly_bon_or_reformed_trigger = yes
					}
				}
			}
		}
		localisation_key = tooltip_religion_feature_learning
	}
}

defined_text = {
	name = GetRandomMythologicalCreature

	text = {
		localisation_key = random_mythological_creature_dragon
	}
	text = {
		localisation_key = random_mythological_creature_giant_snail
	}
	text = {
		localisation_key = random_mythological_creature_hydra
	}
	text = {
		localisation_key = random_mythological_creature_gorgon
	}
	text = {
		localisation_key = random_mythological_creature_harpy
	}
	text = {
		localisation_key = random_mythological_creature_siren
	}
	text = {
		localisation_key = random_mythological_creature_giant
	}
	text = {
		localisation_key = random_mythological_creature_kraken
	}
	text = {
		localisation_key = random_mythological_creature_griffin
	}
	text = {
		localisation_key = random_mythological_creature_basilisk
	}
	text = {
		localisation_key = random_mythological_creature_manticore
	}
	text = {
		localisation_key = random_mythological_creature_cyclops
	}
	text = {
		trigger = { culture = norse }
		localisation_key = random_mythological_creature_sleipnir
	}
	text = {
		trigger = { culture = norse }
		localisation_key = random_mythological_creature_fenrir
	}
	text = {
		trigger = { culture = norse }
		localisation_key = random_mythological_creature_jörmungandr
	}
	text = {
		trigger = { culture = norse }
		localisation_key = random_mythological_creature_nidhogg
	}
	text = {
		trigger = { culture = norse }
		localisation_key = random_mythological_creature_draugr
	}
	text = {
		localisation_key = random_mythological_creature_chimera
	}
	text = {
		localisation_key = random_mythological_creature_dryad
	}
}

defined_text = {
	name = GetJizyaName
	use_first_valid = yes

	text = {
		trigger = { religion_group = muslim }
		localisation_key = key_jizya
	}
	text = {
		localisation_key = key_infidel
	}
}

defined_text = {
	name = GetJizyaNameCap
	use_first_valid = yes

	text = {
		trigger = { owner = { religion_group = muslim } }
		localisation_key = key_jizya
	}
	text = {
		localisation_key = key_infidel_cap
	}
}

defined_text = {
	name = GetJizyaDesc
	use_first_valid = yes

	text = {
		trigger = { owner = { religion_group = muslim } }
		localisation_key = key_jizya_desc
	}
	text = {
		localisation_key = key_jizya_pagan_desc
	}
}

defined_text = {
	name = GetByzCrownDesc
	use_first_valid = yes

	text = {
		trigger = {
			NOR = {
				is_random_world = yes
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
		localisation_key = key_real_byz_crown_desc
	}
	text = {
		localisation_key = key_random_byz_crown_desc
	}
}
defined_text = {
	name = GetHRECrownDesc
	use_first_valid = yes

	text = {
		trigger = {
			NOR = {
				is_random_world = yes
				has_alternate_start_parameter = {
					key = religion_names
					value = random
				}
			}
		}
		localisation_key = key_real_hre_crown_desc
	}
	text = {
		localisation_key = key_random_hre_crown_desc
	}
}

defined_text = {
	name = GetReformPaganismDesc
	use_first_valid = yes

	text = {
		trigger = { has_dlc = "Holy Fury" }
		localisation_key = key_new_pagan_reformation_desc
	}
	text = {
		localisation_key = key_old_pagan_reformation_desc
	}
}

defined_text = {
	name = GetMonkOrder
	use_first_valid = yes

	text = {
		trigger = { is_heretic = yes }
		localisation_key = string_getmonk_generic
	}
	text = {
		trigger = {
			OR = {
				religion = catholic
				religion = fraticelli
			}
		}
		localisation_key = string_getmonk_benedictine
	}
	text = {
		trigger = {
			OR = {
				religion = orthodox
				religion = paulician
				religion = iconoclast
				religion = monothelite
			}
		}
		localisation_key = string_getmonk_orthodox
	}
	text = {
		trigger = {
			religion = nestorian
		}
		localisation_key = string_getmonk_nestorian
	}
	text = {
		trigger = {
			OR = {
				religion = miaphysite
				religion = monophysite
			}
		}
		localisation_key = string_getmonk_monophysite
	}
}

defined_text = {
	name = GetCrusaderWeaponName

	text = {
		localisation_key = string_crusader_culture_weapon_cross
	}
	text = {
		localisation_key = string_crusader_positive_weapon_cross
	}
	text = {
		localisation_key = string_crusader_culture_weapon_crusader
	}
	text = {
		localisation_key = string_crusader_positive_weapon_crusader
	}
	text = {
		localisation_key = string_crusader_culture_weapon_cross_pope
	}
	text = {
		localisation_key = string_crusader_culture_weapon_crusader_pope
	}
}

defined_text = {
	name = GetAlternateCrusaderWeaponName

	text = {
		localisation_key = string_alternate_weapon
	}
}

defined_text = {
	name = GetAlternateCrusadeNameForArtifacts

	text = {
		trigger = { has_character_flag = alternate_crusade_artifact_name_teutonic }
		localisation_key = string_alternate_teutonic_crusade
	}
}

defined_text = {
	name = GetWeaponName

	text = {
		localisation_key = string_culture_weapon
	}

	text = {
		localisation_key = string_dynasty_weapon
	}

	text = {
		localisation_key = string_silver_weapon
	}

	text = {
		localisation_key = string_first_name_weapon
	}

	text = {
		localisation_key = string_royal_title_weapon
	}
}

defined_text = {
	name = GetPositiveWeaponAttribute

	text = {
		trigger = {
			OR = {
				has_character_flag = sword_tier_2
				has_character_flag = scimitar_tier_2
				has_character_flag = lance_tier_2
				has_character_flag = axe_tier_2
				has_character_flag = mace_tier_2
				has_character_flag = bow_tier_2
			}
		}
		localisation_key = string_royal
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = sword_tier_2
				has_character_flag = scimitar_tier_2
				has_character_flag = lance_tier_2
				has_character_flag = axe_tier_2
				has_character_flag = mace_tier_2
				has_character_flag = bow_tier_2
			}
		}
		localisation_key = string_majestic
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = sword_tier_2
				has_character_flag = scimitar_tier_2
				has_character_flag = lance_tier_2
				has_character_flag = axe_tier_2
				has_character_flag = mace_tier_2
				has_character_flag = bow_tier_2
			}
		}
		localisation_key = string_magnificent
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = sword_tier_2
				has_character_flag = scimitar_tier_2
				has_character_flag = lance_tier_2
				has_character_flag = axe_tier_2
				has_character_flag = mace_tier_2
				has_character_flag = bow_tier_2
			}
		}
		localisation_key = string_impervious
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = sword_tier_2
				has_character_flag = scimitar_tier_2
				has_character_flag = lance_tier_2
				has_character_flag = axe_tier_2
				has_character_flag = mace_tier_2
				has_character_flag = bow_tier_2
			}
		}
		localisation_key = string_illustrious
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = sword_tier_2
				has_character_flag = scimitar_tier_2
				has_character_flag = lance_tier_2
				has_character_flag = axe_tier_2
				has_character_flag = mace_tier_2
				has_character_flag = bow_tier_2
			}
		}
		localisation_key = string_august
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = sword_tier_2
				has_character_flag = scimitar_tier_2
				has_character_flag = lance_tier_2
				has_character_flag = axe_tier_2
				has_character_flag = mace_tier_2
				has_character_flag = bow_tier_2
			}
		}
		localisation_key = string_regal
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = sword_tier_2
				has_character_flag = scimitar_tier_2
				has_character_flag = lance_tier_2
				has_character_flag = axe_tier_2
				has_character_flag = mace_tier_2
				has_character_flag = bow_tier_2
			}
		}
		localisation_key = string_renowned
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = sword_tier_2
				has_character_flag = scimitar_tier_2
				has_character_flag = lance_tier_2
				has_character_flag = axe_tier_2
				has_character_flag = mace_tier_2
				has_character_flag = bow_tier_2
			}
		}
		localisation_key = string_imposing
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = sword_tier_2
				has_character_flag = scimitar_tier_2
				has_character_flag = lance_tier_2
				has_character_flag = axe_tier_2
				has_character_flag = mace_tier_2
				has_character_flag = bow_tier_2
			}
		}
		localisation_key = string_noble
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = sword_tier_2
				has_character_flag = scimitar_tier_2
				has_character_flag = lance_tier_2
				has_character_flag = axe_tier_2
				has_character_flag = mace_tier_2
				has_character_flag = bow_tier_2
			}
		}
		localisation_key = String_exalted
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = sword_tier_2
				has_character_flag = scimitar_tier_2
				has_character_flag = lance_tier_2
				has_character_flag = axe_tier_2
				has_character_flag = mace_tier_2
				has_character_flag = bow_tier_2
			}
		}
		localisation_key = string_elegant
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = sword_tier_2
				has_character_flag = scimitar_tier_2
				has_character_flag = lance_tier_2
				has_character_flag = axe_tier_2
				has_character_flag = mace_tier_2
				has_character_flag = bow_tier_2
			}
		}
		localisation_key = string_supreme
	}
}

defined_text = {
	name = GetWeaponType

	text = {
		trigger = { has_character_flag = sword_tier_1 }
		localisation_key = string_sword
	}

	text = {
		trigger = { has_character_flag = sword_tier_1 }
		localisation_key = string_blade
	}

	text = {
		trigger = { has_character_flag = sword_tier_1 }
		localisation_key = string_falchion
	}

	text = {
		trigger = { has_character_flag = sword_tier_2 }
		localisation_key = string_longsword
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = sword_tier_2
				has_character_flag = zweihanded_sword
			}
		}
		localisation_key = string_greatsword
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = scimitar_tier_1
				has_character_flag = scimitar_tier_2
			}
		}
		localisation_key = string_scimitar
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = scimitar_tier_1
				has_character_flag = scimitar_tier_2
			}
		}
		localisation_key = string_shamshir
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = lance_tier_1
				has_character_flag = lance_tier_2
			}
		}
		localisation_key = string_lance
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = lance_tier_1
				has_character_flag = lance_tier_2
			}
		}
		localisation_key = string_spear
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = axe_tier_1
				has_character_flag = axe_tier_2
			}
		}
		localisation_key = string_axe
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = axe_tier_1
				has_character_flag = axe_tier_2
			}
		}
		localisation_key = string_battleaxe
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = axe_tier_1
				has_character_flag = axe_tier_2
			}
		}
		localisation_key = string_waraxe
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = mace_tier_1
				has_character_flag = mace_tier_2
			}
		}
		localisation_key = string_mace
	}

	text = {
		trigger = {
			OR = {
				has_character_flag = mace_tier_1
				has_character_flag = mace_tier_2
			}
		}
		localisation_key = string_warhammer
	}

	text = {
		trigger = { has_character_flag = bow_tier_1 }
		localisation_key = string_bow
	}

	text = {
		trigger = { has_character_flag = bow_tier_2 }
		localisation_key = string_longbow
	}

	text = {
		trigger = { has_character_flag = bow_tier_2 }
		localisation_key = string_compositebow
	}

	text = {
		trigger = { has_character_flag = armor_tier_2 }
		localisation_key = string_armor
	}
}

defined_text = {
	name = GetSeaQueenKing
	use_first_valid = yes

	text = {
		trigger = { is_female = yes }
		localisation_key = string_sea_queen
	}
	text = {
		localisation_key = string_sea_king
	}
}

defined_text = {
	name = GetJesus
	use_first_valid = yes

	text = {
		trigger = {
			has_alternate_start_parameter = {
				key = religion_names
				value = random
			}
		}
		localisation_key = string_not_jesus_christ
	}
	text = {
		localisation_key = string_jesus_christ
	}
}

# Gets your dogs name (if one of the following flags were set upon getting the dog)
defined_text = {
	name = GetDogName
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = dog_name_faithful }
		localisation_key = string_Faithful
	}
	text = {
		trigger = { has_character_flag = dog_name_hunter }
		localisation_key = string_Hunter
	}
	text = {
		trigger = { has_character_flag = dog_name_tricky }
		localisation_key = string_Tricky
	}
	text = {
		trigger = { has_character_flag = dog_name_lucifer }
		localisation_key = string_Lucifer
	}
	text = {
		trigger = { has_character_flag = dog_name_shaytan }
		localisation_key = string_Shaytan
	}
	text = {
		trigger = { has_character_flag = dog_name_fenrir }
		localisation_key = String_Fenrir # Already exists (note the Capital S)
	}
	text = {
		trigger = { has_character_flag = dog_name_erlik }
		localisation_key = string_Erlik
	}
	text = {
		trigger = { has_character_flag = dog_name_velnias }
		localisation_key = string_Velnias
	}
	text = {
		trigger = { has_character_flag = dog_name_tuoni }
		localisation_key = string_Tuoni
	}
	text = {
		trigger = { has_character_flag = dog_name_xolotl }
		localisation_key = string_Xolotl
	}
	text = {
		trigger = { has_character_flag = dog_name_veles }
		localisation_key = string_Veles
	}
	text = {
		trigger = { has_character_flag = dog_name_guruhi }
		localisation_key = string_Guruhi
	}
	text = {
		trigger = { has_character_flag = dog_name_darkness }
		localisation_key = string_Darkness
	}
	text = {
		trigger = { has_character_flag = dog_name_ahriman }
		localisation_key = string_ahriman
	}
	text = {
		trigger = { has_character_flag = dog_name_satan }
		localisation_key = String_Satan # Already exists (note the Capital S)
	}
	text = {
		trigger = { has_character_flag = dog_name_vinayaka }
		localisation_key = string_Vinayaka
	}
	text = {
		trigger = { has_character_flag = dog_name_mara }
		localisation_key = string_Mara
	}
	text = {
		trigger = { has_character_flag = dog_name_punisher }
		localisation_key = string_Punisher
	}
	fallback_text = {
		localisation_key = string_sweetpea
	}
}

defined_text = {
	name = GetHuntingQuarry
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = white_bear }
		localisation_key = String_bear
	}
	text = {
		trigger = { has_character_flag = white_lion }
		localisation_key = String_lion
	}
	text = {
		trigger = { has_character_flag = white_stag }
		localisation_key = String_stag
	}
	text = {
		trigger = { has_character_flag = white_tiger }
		localisation_key = String_tiger
	}
}

defined_text = {
	name = GetHuntingQuarryCap
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = white_bear }
		localisation_key = String_Bear
	}
	text = {
		trigger = { has_character_flag = white_lion }
		localisation_key = String_Lion
	}
	text = {
		trigger = { has_character_flag = white_stag }
		localisation_key = String_Stag
	}
	text = {
		trigger = { has_character_flag = white_tiger }
		localisation_key = String_Tiger
	}
}

defined_text = {
	name = GetAltStartDefaultReformationHeadDesc
	use_first_valid = yes

	text = {
		trigger = {
			OR = {
				FROM = {
					religion = catholic
				}
				ROOT = {
					religion = catholic
				}
			}
		}
		localisation_key = tooltip_religion_feature_default_head_catholic
	}
	text = {
		trigger = {
			OR = {
				FROM = {
					OR = {
						religion = hindu
						religion = buddhist
					}
				}
				ROOT = {
					OR = {
						religion = hindu
						religion = buddhist
					}
				}
			}
		}
		localisation_key = tooltip_religion_feature_default_head_eastern
	}
	text = {
		trigger = {
			OR = {
				FROM = {
					OR = {
						religion = jain
						religion = taoist
					}
				}
				ROOT = {
					OR = {
						religion = jain
						religion = taoist
					}
				}
			}
		}
		localisation_key = tooltip_religion_feature_default_head_eastern_pacifist
	}
	text = {
		trigger = {
			OR = {
				FROM = {
					OR = {
						religion = shiite
						religion = sunni
					}
				}
				ROOT = {
					OR = {
						religion = shiite
						religion = sunni
					}
				}
			}
		}
		localisation_key = tooltip_religion_feature_default_head_muslim
	}
	text = {
		trigger = {
			OR = {
				FROM = {
					religion_group = jewish_group
				}
				ROOT = {
					religion_group = jewish_group
				}
			}
		}
		localisation_key = tooltip_religion_feature_default_head_jewish
	}
	text = {
		trigger = {
			OR = {
				FROM = {
					religion = zoroastrian
				}
				ROOT = {
					religion = zoroastrian
				}
			}
		}
		localisation_key = tooltip_religion_feature_default_head_zoroastrian
	}
	text = {
		trigger = {
			OR = {
				FROM = {
					religion_group = pagan_group
				}
				ROOT = {
					religion_group = pagan_group
				}
			}
		}
		localisation_key = tooltip_religion_feature_default_head_pagan
	}
}

defined_text = {
	name = GetAltStartDefaultReformationAutocephalyDesc

	text = {
		trigger = {
			OR = {
				FROM = {
					OR = {
						religion = orthodox
						religion = monothelite
						religion = iconoclast
						religion = paulician
						religion = miaphysite
						religion = monophysite
					}
				}
				ROOT = {
					OR = {
						religion = orthodox
						religion = monothelite
						religion = iconoclast
						religion = paulician
						religion = miaphysite
						religion = monophysite
					}
				}
			}
		}
		localisation_key = tooltip_religion_feature_default_autocephaly
	}
}

defined_text = {
	name = GetAltStartDefaultReformationExcommunicationDesc

	text = {
		trigger = {
			OR = {
				FROM = {
					religion_group = christian
				}
				ROOT = {
					religion_group = christian
				}
			}
		}
		localisation_key = tooltip_religion_feature_default_excommunication
	}
}

defined_text = {
	name = GetAltStartDefaultReformationDivorceDesc

	text = {
		trigger = {
			OR = {
				FROM = {
					OR = {
						religion_group = christian
						religion_group = zoroastrian_group
						religion_group = jewish_group
					}
					NOR = {
						religion = cathar
						religion = waldensian
						religion = lollard
						religion = bogomilist
						religion = messalian
					}
				}
				ROOT = {
					OR = {
						religion_group = christian
						religion_group = zoroastrian_group
						religion_group = jewish_group
					}
					NOR = {
						religion = cathar
						religion = waldensian
						religion = lollard
						religion = bogomilist
						religion = messalian
					}
				}
			}
		}
		localisation_key = tooltip_religion_feature_default_divorce
	}
}

defined_text = {
	name = GetAltStartDefaultReformationInvasionDesc

	text = {
		trigger = {
			OR = {
				FROM = {
					OR = {
						religion = catholic
						religion = fraticelli
						religion = orthodox
						religion = miaphysite
						religion = monophysite
						religion = monothelite
						religion = iconoclast
						religion = paulician
						religion = nestorian
						religion_group = zoroastrian_group
						religion_group = jewish_group
					}
				}
				ROOT = {
					OR = {
						religion = catholic
						religion = fraticelli
						religion = orthodox
						religion = miaphysite
						religion = monophysite
						religion = monothelite
						religion = iconoclast
						religion = paulician
						religion = nestorian
						religion_group = zoroastrian_group
						religion_group = jewish_group
					}
				}
			}
		}
		localisation_key = tooltip_religion_feature_default_invasion
	}
}

defined_text = {
	name = GetAltStartDefaultReformationClaimDesc

	text = {
		trigger = {
			OR = {
				FROM = {
					OR = {
						religion = catholic
						religion = fraticelli
					}
				}
				ROOT = {
					OR = {
						religion = catholic
						religion = fraticelli
					}
				}
			}
		}
		localisation_key = tooltip_religion_feature_default_claim
	}
}

defined_text = {
	name = GetRandomWeapon

	text = {
		localisation_key = String_sword
	}
	text = {
		localisation_key = String_axe
	}
	text = {
		localisation_key = String_mace
	}
	text = {
		localisation_key = String_spear
	}
	text = {
		localisation_key = String_dagger
	}
	text = {
		localisation_key = String_war_hammer
	}
	text = {
		localisation_key = String_great_sword
	}
	text = {
		localisation_key = String_flail
	}
}

defined_text = {
	name = GetBeautifulHandsome
	use_first_valid = yes

	text = {
		trigger = { is_female = yes }
		localisation_key = String_beautiful
	}
	text = {
		localisation_key = String_handsome
	}
}

defined_text = {
	name = GetAlcohol
	use_first_valid = yes

	text = {
		trigger = { is_tribal = yes }
		localisation_key = string_ale
	}
	text = {
		trigger = { is_nomadic = yes }
		localisation_key = string_airag
	}
	text = {
		trigger = {
			OR = {
				culture_group = gallo_roman
				culture_group = italian_group
				culture_group = latin
				culture_group = iberian
				culture_group = byzantine
				culture_group = south_slavic
				culture_group = iranian
				culture_group = arabic
				culture_group = chinese_group
				culture_group = dravidian_group
				culture_group = indo_aryan_group
			}
		}
		localisation_key = string_wine
	}
	text = { # Everyone else
		localisation_key = string_beer
	}
}

defined_text = {
	name = GetAlcoholCap
	use_first_valid = yes

	text = {
		trigger = { is_tribal = yes }
		localisation_key = String_Ale
	}
	text = {
		trigger = { is_nomadic = yes }
		localisation_key = String_Airag
	}
	text = {
		trigger = {
			OR = {
				culture_group = gallo_roman
				culture_group = italian_group
				culture_group = latin
				culture_group = iberian
				culture_group = byzantine
				culture_group = south_slavic
				culture_group = iranian
				culture_group = arabic
				culture_group = chinese_group
				culture_group = dravidian_group
				culture_group = indo_aryan_group
			}
		}
		localisation_key = String_Wine
	}
	text = {
		localisation_key = String_Beer
	}
}

defined_text = {
	name = GetRegionalSmallGameAnimal
	use_first_valid = yes

	text = {
		localisation_key = String_rabbit
		trigger = {
			capital_scope = {
				OR = {
					region = world_europe_north
					region = world_europe_east
					region = world_europe_south
					region = world_europe_west
				}
			}
		}
	}
	text = {
		localisation_key = String_hare
		trigger = {
			capital_scope = {
				OR = {
					region = world_middle_east
					region = world_africa
					region = world_steppe
					region = world_middle_east_asia_minor
				}
			}
		}
	}
	text = {
		localisation_key = String_small_deer
		trigger = {
			capital_scope = {
				region = world_india
			}
		}
	}
	fallback_text = {
		localisation_key = String_small_animal_fallback # Beast
	}
}
defined_text = {
	name = GetCulturalPirate
	use_first_valid = yes

	text = {
		trigger = {
			religion_openly_norse_or_reformed_trigger = yes
		}
		localisation_key = tooltip_cultural_pirate_viking
	}
	text = {
		localisation_key = tooltip_cultural_pirate_pirate
	}
}
defined_text = {
	name = GetPiratingFeature

	text = {
		trigger = {
			OR = {
				FROM = {
					NOT = { has_selected_religion_feature = religion_peaceful }
					has_selected_religion_feature = religion_seafaring
				}
				ROOT = {
					NOT = { has_selected_religion_feature = religion_peaceful }
					has_selected_religion_feature = religion_seafaring
				}
			}
			NOR = {
				FROM = {
					religion_openly_norse_or_reformed_trigger = yes
				}
				ROOT = {
					religion_openly_norse_or_reformed_trigger = yes
				}
			}
		}
		localisation_key = tooltip_religion_feature_pirating_desc
	}
}

defined_text = {
	name = GetSocietyLeaderDesc

	text = {
		localisation_key = society_leader_desc
	}
}

defined_text = {
	name = GetCrusadeReligionDescription
	use_first_valid = yes

	text = {
		trigger = { religion_group = christian }
		localisation_key = string_crusade_christian_description
	}
	text = {
		trigger = { religion_group = muslim }
		localisation_key = string_crusade_muslim_description
	}
	text = {
		trigger = { religion_group = jewish_group }
		localisation_key = string_crusade_jewish_description
	}
	fallback_text = {
		localisation_key = string_crusade_other_description
	}
}

defined_text = {
	name = GetCrusadeLaunchAnother
	use_first_valid = yes

	text = {
		trigger = {
			crusade_target_title = {
				has_title_flag = crusaded_against_before
			}
		}
		localisation_key = string_crusade_another
	}

	fallback_text = {
		localisation_key = string_crusade_first
	}
}

defined_text = {
	name = GetCrusadeLaunchFirstPart
	use_first_valid = yes

	text = {
		trigger = {
			crusade_target_title = {
				NOT = { has_title_flag = crusaded_against_before }
				has_title_flag = crusade_inherently_christian
			}
		}
		localisation_key = string_crusade_firstpart_inherently_christian_1
	}

	text = {
		trigger = {
			crusade_target_title = {
				has_title_flag = crusaded_against_before
				has_title_flag = crusade_inherently_christian
			}
		}
		localisation_key = string_crusade_firstpart_inherently_christian_2
	}

	text = {
		trigger = {
			crusade_target_title = {
				NOT = { has_title_flag = crusaded_against_before }
				has_title_flag = crusade_fringe_christian
			}
		}
		localisation_key = string_crusade_firstpart_fringe_christian_1
	}

	text = {
		trigger = {
			crusade_target_title = {
				has_title_flag = crusaded_against_before
				has_title_flag = crusade_fringe_christian
			}
		}
		localisation_key = string_crusade_firstpart_fringe_christian_2
	}

	text = {
		trigger = {
			crusade_target_title = {
				NOT = { has_title_flag = crusaded_against_before }
				has_title_flag = crusade_outside_christian
			}
		}
		localisation_key = string_crusade_firstpart_outside_christian_1
	}

	text = {
		trigger = {
			crusade_target_title = {
				has_title_flag = crusaded_against_before
				has_title_flag = crusade_outside_christian
			}
		}
		localisation_key = string_crusade_firstpart_outside_christian_2
	}

	fallback_text = {
		localisation_key = string_crusade_firstpart_fallback
	}
}

defined_text = {
	name = GetCrusadeLaunchSecondPart
	use_first_valid = yes

	text = {
		trigger = {
			event_target:crusade_character = {
				religion_group = christian
			}
		}
		localisation_key = string_crusade_secondpart_christian
	}

	text = {
		trigger = {
			event_target:crusade_character = {
				religion_group = muslim
			}
		}
		localisation_key = string_crusade_secondpart_muslim
	}

	text = {
		trigger = {
			event_target:crusade_character = {
				religion_group = jewish_group
			}
		}
		localisation_key = string_crusade_secondpart_jewish
	}

	fallback_text = {
		localisation_key = string_crusade_secondpart_other
	}
}

defined_text = {
	name = GetRandomSaintName

	text = {
		localisation_key = string_saint_paul
	}
	text = {
		localisation_key = string_saint_christopher
	}
	text = {
		localisation_key = string_saint_valentine
	}
	text = {
		localisation_key = string_saint_joseph
	}
	text = {
		localisation_key = string_saint_cecilia
	}
}

defined_text = {
	name = GetCurrentCrusadeStance
	use_first_valid = yes

	text = {
		trigger = { has_character_flag = crusade_papal_stance }
		localisation_key = string_crusade_papal_stance
	}
	text = {
		trigger = { has_character_flag = crusade_beneficiary_stance }
		localisation_key = string_crusade_beneficiary_stance
	}
	text = {
		trigger = { has_character_flag = crusade_selfish_stance }
		localisation_key = string_crusade_selfish_stance
	}
	text = {
		localisation_key = string_crusade_receiver_stance
	}
}

defined_text = {
	name = GetRandomCrusaderStateName

	text = {
		localisation_key = string_dynasty_crusader_state_name
	}
	text = {
		localisation_key = string_culture_crusader_state_name
	}
	text = {
		localisation_key = string_adjective_crusader_state_name
	}
}

defined_text = {
	name = GetWLDieName
	use_first_valid = yes

	text = {
		trigger = {
			society_member_of = warrior_lodge_hellenic
			has_character_flag = flag_warrior_lodge_die_is_krita
		}
		localisation_key = string_warrior_lodge_die_is_apollo
	}

	text = {
		trigger = {
			NOT = { society_member_of = warrior_lodge_hellenic }
			has_character_flag = flag_warrior_lodge_die_is_krita
		}
		localisation_key = string_warrior_lodge_die_is_krita
	}
	text = {
		trigger = {
			society_member_of = warrior_lodge_hellenic
			has_character_flag = flag_warrior_lodge_die_is_treta
		}
		localisation_key = string_warrior_lodge_die_is_athena
	}
	text = {
		trigger = {
			NOT = { society_member_of = warrior_lodge_hellenic }
			has_character_flag = flag_warrior_lodge_die_is_treta
		}
		localisation_key = string_warrior_lodge_die_is_treta
	}
	text = {
		trigger = {
			society_member_of = warrior_lodge_hellenic
			has_character_flag = flag_warrior_lodge_die_is_dwapara
		}
		localisation_key = string_warrior_lodge_die_is_hermes
	}
	text = {
		trigger = {
			NOT = { society_member_of = warrior_lodge_hellenic }
			has_character_flag = flag_warrior_lodge_die_is_dwapara
		}
		localisation_key = string_warrior_lodge_die_is_dwapara
	}
	text = {
		trigger = {
			society_member_of = warrior_lodge_hellenic
			has_character_flag = flag_warrior_lodge_die_is_kali
		}
		localisation_key = string_warrior_lodge_die_is_dionysus
	}
	text = {
		trigger = {
			NOT = { society_member_of = warrior_lodge_hellenic }
			has_character_flag = flag_warrior_lodge_die_is_kali
		}
		localisation_key = string_warrior_lodge_die_is_kali
	}
}

defined_text = {
	name = GetWLDieBetName
	use_first_valid = yes

	text = {
		trigger = {
			society_member_of = warrior_lodge_hellenic
			has_character_flag = flag_betting_on_krita
		}
		localisation_key = string_warrior_lodge_die_is_apollo
	}
	text = {
		trigger = {
			NOT = { society_member_of = warrior_lodge_hellenic }
			has_character_flag = flag_betting_on_krita
		}
		localisation_key = string_warrior_lodge_die_is_krita
	}
	text = {
		trigger = {
			society_member_of = warrior_lodge_hellenic
			has_character_flag = flag_betting_on_treta
		}
		localisation_key = string_warrior_lodge_die_is_athena
	}
	text = {
		trigger = {
			NOT = { society_member_of = warrior_lodge_hellenic }
			has_character_flag = flag_betting_on_treta
		}
		localisation_key = string_warrior_lodge_die_is_treta
	}
	text = {
		trigger = {
			society_member_of = warrior_lodge_hellenic
			has_character_flag = flag_betting_on_dwapara
		}
		localisation_key = string_warrior_lodge_die_is_hermes
	}
	text = {
		trigger = {
			NOT = { society_member_of = warrior_lodge_hellenic }
			has_character_flag = flag_betting_on_dwapara
		}
		localisation_key = string_warrior_lodge_die_is_dwapara
	}
	text = {
		trigger = {
			society_member_of = warrior_lodge_hellenic
			has_character_flag = flag_betting_on_kali
		}
		localisation_key = string_warrior_lodge_die_is_dionysus
	}
	text = {
		trigger = {
			NOT = { society_member_of = warrior_lodge_hellenic }
			has_character_flag = flag_betting_on_kali
		}
		localisation_key = string_warrior_lodge_die_is_kali
	}
}

defined_text = {
	name = GetMassBaptismTribalAuthorityHint
	use_first_valid = yes

	text = {
		trigger = { primary_title = { has_law = tribal_organization_4 } }
		localisation_key = String_empty_space
	}
	text = {
		localisation_key = string_baptism_low_tribal_authority
	}
}

defined_text = {
	name = GetByzantineRefugeeText

	text = {
		trigger = {
			event_target:byzantine_refugee = {
				is_alive = yes
			}
		}
		localisation_key = string_42120_extra_text
	}
}

defined_text = {
	name = GetLadiesLords
	use_first_valid = yes

	text = {
		trigger = { is_female = yes }
		localisation_key = string_ladies
	}
	text = {
		localisation_key = string_lords
	}
}

defined_text = {
	name = GetOppositeBoyGirl
	use_first_valid = yes

	text = {
		trigger = { is_female = yes }
		localisation_key = string_boy
	}
	text = {
		localisation_key = string_girl
	}
	#fallback_text = {
	#	localisation_key = string_kid
	#}
}

defined_text = {
	name = GetOppositeBoysGirls
	use_first_valid = yes

	text = {
		trigger = { is_female = yes }
		localisation_key = string_boys
	}
	text = {
		localisation_key = string_girls
	}
	#fallback_text = {
	#	localisation_key = string_kids
	#}
}

defined_text = {
	name = GetBoysGirls
	use_first_valid = yes

	text = {
		trigger = { is_female = no }
		localisation_key = string_boys
	}
	text = {
		localisation_key = string_girls
	}
	#fallback_text = {
	#	localisation_key = string_kids
	#}
}

defined_text = {
	name = GetOppositeManWoman
	use_first_valid = yes

	text = {
		trigger = { is_female = yes }
		localisation_key = String_man
	}
	text = {
		localisation_key = String_woman
	}
	#fallback_text = {
	#	localisation_key = string_people
	#}
}

defined_text = {
	name = GetOppositeMenWomen
	use_first_valid = yes

	text = {
		trigger = { is_female = yes }
		localisation_key = String_men
	}
	text = {
		localisation_key = String_women
	}
	#fallback_text = {
	#	localisation_key = string_people
	#}
}

defined_text = {
	name = GetCrusadeSelfishOrNot
	use_first_valid = yes

	text = {
		trigger = {
			event_target:new_crusade_most_participating_member = {
				character = event_target:new_crusader_king
			}
		}
		localisation_key = string_selfish_participant
	}
	text = {
		localisation_key = string_selfless_participant
	}
}

# Used in any scope with a religion
defined_text = {
	name = GetCrusadeReligiousMinorityGroup
	use_first_valid = yes

	text = {
		trigger = { religion = miaphysite }
		localisation_key = string_crusade_miaphysite_group # coptics
	}
	text = {
		trigger = { religion = nestorian }
		localisation_key = string_crusade_nestorian_group # eastern christians
	}
	text = {
		localisation_key = string_crusade_root_group # [Root.Religion.GetName]s
	}
}

defined_text = {
	name = GetPatriarchalMatriarchal
	use_first_valid = yes

	text = {
		trigger = { has_religion_feature = religion_matriarchal }
		localisation_key = string_Matriarchal
	}
	text = {
		localisation_key = string_Patriarchal
	}
}

defined_text = {
	name = GetCultureArmyNamePlural
	use_first_valid = yes

	text = {
		trigger = { culture = andalusian }
		localisation_key = Culture_Army_Andalusian
	}
	text = {
		trigger = { culture = jurchen }
		localisation_key = Culture_Army_Jurchen
	}
	text = {
		trigger = {
			OR = {
				culture_group = altaic
				culture_group = iranian
			}
		}
		localisation_key = Culture_Army_Altaic
	}
	text = {
		trigger = {
			OR = {
				culture = bedouin
				culture = egyptian
				culture = levantine
			}
		}
		localisation_key = Culture_Army_Bedouin
	}
	text = {
		trigger = {
			OR = {
				culture_group = baltic
				culture_group = finno_ugric
			}
		}
		localisation_key = Culture_Army_Baltic
	}
	text = {
		trigger = { culture = berber }
		localisation_key = Culture_Army_Berber
	}
	text = {
		trigger = {
			OR = {
				culture = greek
				culture = georgian
				culture = armenian
			}
		}
		localisation_key = Culture_Army_Byzantine
	}
	text = {
		trigger = { culture = dutch }
		localisation_key = Culture_Army_Dutch
	}
	text = {
		trigger = { culture_group = east_slavic }
		localisation_key = Culture_Army_EastSlavic
	}
	text = {
		trigger = {
			OR = {
				culture = english
				culture = welsh
			}
		}
		localisation_key = Culture_Army_English
	}
	text = {
		trigger = { culture = ethiopian }
		localisation_key = Culture_Army_Ethiopian
	}
	text = {
		trigger = { culture = french }
		localisation_key = Culture_Army_French
	}
	text = {
		trigger = { culture = scottish }
		localisation_key = Culture_Army_Scottish
	}
	text = {
		trigger = { culture = han }
		localisation_key = Culture_Army_Han
	}
	text = {
		trigger = {
			OR = {
				culture = hungarian
				culture_group = west_slavic
			}
		}
		localisation_key = Culture_Army_Hungarian
	}
	text = {
		trigger = { culture_group = iberian }
		localisation_key = Culture_Army_Iberian
	}
	text = {
		trigger = {
			OR = {
				culture_group = indo_aryan_group
				culture_group = dravidian_group
			}
		}
		localisation_key = Culture_Army_IndoAryan
	}
	text = {
		trigger = { culture = italian }
		localisation_key = Culture_Army_Italian
	}
	text = {
		trigger = {
			OR = {
				culture = lombard_italian
				culture = lombard
			}
		}
		localisation_key = Culture_Army_Lombard
	}
	text = {
		trigger = { culture_group = israelite }
		localisation_key = Culture_Army_Israelite
	}
	text = {
		trigger = { culture = nahua }
		localisation_key = Culture_Army_Nahua
	}
	text = {
		trigger = {
			OR = {
				culture_group = north_germanic
				culture = saxon
				culture = anglo_saxon
				culture = frisian
			}
		}
		localisation_key = Culture_Army_NorthGermanic
	}
	text = {
		trigger = { culture = nubian }
		localisation_key = Culture_Army_Nubian
	}
	text = {
		trigger = { culture = pictish }
		localisation_key = Culture_Army_Pictish
	}
	text = {
		trigger = { culture = somali }
		localisation_key = Culture_Army_Somali
	}
	text = {
		trigger = { culture_group = south_slavic }
		localisation_key = Culture_Army_SouthSlavic
	}
	text = {
		trigger = { culture = suebi }
		localisation_key = Culture_Army_Suebi
	}
	text = {
		trigger = { culture_group = tibetan_group }
		localisation_key = Culture_Army_Tibetan
	}
	text = {
		trigger = { culture_group = west_african }
		localisation_key = Culture_Army_WestAfrica
	}
	text = {
		trigger = {
			OR = {
				culture = norman
				culture = occitan
				culture = alemannic
				culture = breton
			}
		}
		localisation_key = Culture_Army_European
	}
	text = {
		trigger = { culture = irish }
		localisation_key = Culture_Army_Irish
	}
}

defined_text = {
	name = GetHolyOrderName
	use_first_valid = yes

	text = {
		trigger = { religion = catholic }
		localisation_key = Holy_Order_Catholic
	}
	text = {
		trigger = { religion = orthodox }
		localisation_key = Holy_Order_Orthodox
	}
	text = {
		trigger = { religion = miaphysite }
		localisation_key = Holy_Order_Miaphysite
	}
	text = {
		trigger = { religion = nestorian }
		localisation_key = Holy_Order_Nestorian
	}
	text = {
		trigger = { religion = jewish }
		localisation_key = Holy_Order_Jewish
	}
	text = {
		trigger = { religion_group = zoroastrian_group }
		localisation_key = Holy_Order_Zoroastrians
	}
	text = {
		trigger = { religion = manichaean }
		localisation_key = Holy_Order_Manichaean
	}
	text = {
		trigger = { religion_openly_norse_or_reformed_trigger = yes }
		localisation_key = Holy_Order_Germanic
	}
	text = {
		trigger = { religion = tengri_pagan_reformed }
		localisation_key = Holy_Order_ReformedTengri
	}
	text = {
		trigger = { religion = west_african_pagan_reformed }
		localisation_key = Holy_Order_ReformedWestAfrica
	}
	text = {
		trigger = { religion = slavic_pagan_reformed }
		localisation_key = Holy_Order_ReformedSlavic
	}
	text = {
		trigger = { religion = baltic_pagan_reformed }
		localisation_key = Holy_Order_ReformedRomuva
	}
	text = {
		trigger = { religion = finnish_pagan_reformed }
		localisation_key = Holy_Order_ReformedSuomenusko
	}
	text = {
		trigger = { religion = aztec_pagan_reformed }
		localisation_key = Holy_Order_ReformedAztec
	}
}

defined_text = {
	name = GetDukeDuchess
	use_first_valid = yes

	text = {
		trigger = { is_female = no }
		localisation_key = string_duke_duchess_male
	}
	text = {
		localisation_key = string_duke_duchess_female
	}
}

defined_text = {
	name = GetDukeDuchessCap
	use_first_valid = yes

	text = {
		trigger = { is_female = no }
		localisation_key = string_duke_duchess_male_cap
	}
	text = {
		localisation_key = string_duke_duchess_female_cap
	}
}

defined_text = {
	name = GetArchdukeArchduchess
	use_first_valid = yes

	text = {
		trigger = { is_female = no }
		localisation_key = string_archduke_archduchess_male
	}
	text = {
		localisation_key = string_archduke_archduchess_female
	}
}

defined_text = {
	name = GetArchdukeArchduchessCap
	use_first_valid = yes

	text = {
		trigger = { is_female = no }
		localisation_key = string_archduke_archduchess_male_cap
	}
	text = {
		localisation_key = string_archduke_archduchess_female_cap
	}
}

defined_text = {
	name = GetFoundBloodlineKillCounter
	use_first_valid = yes

	text = {
		trigger = { has_ambition = obj_forge_bloodline }
		localisation_key = string_found_bloodline_kill_counter
	}
	text = {
		localisation_key = String_empty_space
	}
}

defined_text = {
	name = GetFoundBloodlineWarCounter
	use_first_valid = yes

	text = {
		trigger = { has_ambition = obj_forge_bloodline }
		localisation_key = string_found_bloodline_war_counter
	}
	text = {
		localisation_key = String_empty_space
	}
}

defined_text = {
	name = GetFoundBloodlinePeaceCounter
	use_first_valid = yes

	text = {
		trigger = { has_ambition = obj_forge_bloodline }
		localisation_key = string_found_bloodline_peace_counter
	}
	text = {
		localisation_key = String_empty_space
	}
}

defined_text = {
	name = GetFoundBloodlineCityCounter
	use_first_valid = yes

	text = {
		trigger = { has_ambition = obj_forge_bloodline }
		localisation_key = string_found_bloodline_city_counter
	}
	text = {
		localisation_key = String_empty_space
	}
}

defined_text = {
	name = GetFoundBloodlineCastleCounter
	use_first_valid = yes

	text = {
		trigger = { has_ambition = obj_forge_bloodline }
		localisation_key = string_found_bloodline_castle_counter
	}
	text = {
		localisation_key = String_empty_space
	}
}

defined_text = {
	name = GetFoundBloodlineTempleCounter
	use_first_valid = yes

	text = {
		trigger = { has_ambition = obj_forge_bloodline }
		localisation_key = string_found_bloodline_temple_counter
	}
	text = {
		localisation_key = String_empty_space
	}
}

defined_text = {
	name = GetFoundBloodlineExecTooltip
	use_first_valid = yes

	text = {
		trigger = {
			is_adult = no
		}
		localisation_key = string_found_bloodline_exec_tooltip
	}
	text = {
		localisation_key = String_empty_space
	}
}

defined_text = {
	name = GetSaintReligionTitle
	use_first_valid = yes

	text = {
		trigger = { religion_group = christian }
		localisation_key = string_saint_in_heaven
	}
	text = {
		trigger = { religion_group = pagan_group }
		localisation_key = string_blessed_ancestor
	}
}

defined_text = {
	name = GetSaintViewTitle
	use_first_valid = yes

	text = {
		trigger = { religion_group = christian }
		localisation_key = string_saint_view_title_christian
	}
	text = {
		trigger = { religion_group = pagan_group }
		localisation_key = string_saint_view_title_pagan
	}
}

defined_text = {
	name = GetIberianFeatures

	text = {
		trigger = {
			has_dlc = "Holy Fury"
			is_alternate_start = no
			NOT = {
				has_game_rule = {
					name = reconquista
					value = off
				}
			}
		}
		localisation_key = string_reconquista_feature
	}

	fallback_text = {
		localisation_key = string_no_feature
	}
}

defined_text = {
	name = GetBasqueFeatures

	text = {
		trigger = {
			has_dlc = "Holy Fury"
			is_alternate_start = no
			NOT = {
				has_game_rule = {
					name = reconquista
					value = off
				}
			}
		}
		localisation_key = string_basque_feature
	}

	fallback_text = {
		localisation_key = string_basque_feature_no_HF
	}
}

defined_text = {
	name = GetBornInPurpleDesc
	use_first_valid = yes

	text = {
		trigger = { is_alternate_start = yes }
		localisation_key = string_born_in_the_purple_altstart_desc
	}
	text = {
		localisation_key = string_born_in_the_purple_desc
	}
}
defined_text = {
	name = GetRestoreRomanEmpireDesc
	use_first_valid = yes

	text = {
		trigger = { is_alternate_start = yes }
		localisation_key = string_restore_roman_empire_altstart_desc
	}
	text = {
		localisation_key = string_restore_roman_empire_desc
	}
}

defined_text = {
	name = GetZeusJupiterName
	use_first_valid = yes

	text = {
		trigger = { has_global_flag = flag_hellenic_greek_reformation }
		localisation_key = GOD_GREEK_JUPITER
	}
	text = {
		localisation_key = GOD_JUPITER
	}
}
defined_text = {
	name = GetPoseidonNeptuneName
	use_first_valid = yes

	text = {
		trigger = { has_global_flag = flag_hellenic_greek_reformation }
		localisation_key = GOD_POSEIDON
	}
	text = {
		localisation_key = GOD_NEPTUNE
	}
}

defined_text = {
	name = GetHadesPlutoName
	use_first_valid = yes

	text = {
		trigger = { has_global_flag = flag_hellenic_greek_reformation }
		localisation_key = GOD_HADES
	}
	text = {
		localisation_key = GOD_PLUTO
	}
}
defined_text = {
	name = GetHeraJunoName
	use_first_valid = yes

	text = {
		trigger = { has_global_flag = flag_hellenic_greek_reformation }
		localisation_key = GOD_HERA
	}
	text = {
		localisation_key = GOD_JUNO
	}
}
defined_text = {
	name = GetDemetraCeresName
	use_first_valid = yes

	text = {
		trigger = { has_global_flag = flag_hellenic_greek_reformation }
		localisation_key = GOD_DEMETRA
	}
	text = {
		localisation_key = GOD_CERES
	}
}
defined_text = {
	name = GetAthenaMinervaName
	use_first_valid = yes

	text = {
		trigger = { has_global_flag = flag_hellenic_greek_reformation }
		localisation_key = GOD_ATHENA
	}
	text = {
		localisation_key = GOD_MINERVA
	}
}
defined_text = {
	name = GetAresMarsName
	use_first_valid = yes

	text = {
		trigger = { has_global_flag = flag_hellenic_greek_reformation }
		localisation_key = GOD_ARES
	}
	text = {
		localisation_key = GOD_MARS
	}
}
defined_text = {
	name = GetHephaestusVulcanName
	use_first_valid = yes

	text = {
		trigger = { has_global_flag = flag_hellenic_greek_reformation }
		localisation_key = GOD_HEPHAESTUS
	}
	text = {
		localisation_key = GOD_VULCAN
	}
}
defined_text = {
	name = GetAphroditeVenusName
	use_first_valid = yes

	text = {
		trigger = { has_global_flag = flag_hellenic_greek_reformation }
		localisation_key = GOD_APHRODITE
	}
	text = {
		localisation_key = GOD_VENUS
	}
}
defined_text = {
	name = GetArtemisDianaName
	use_first_valid = yes

	text = {
		trigger = { has_global_flag = flag_hellenic_greek_reformation }
		localisation_key = GOD_ARTEMIS
	}
	text = {
		localisation_key = GOD_DIANA
	}
}
defined_text = {
	name = GetHestiaVestaName
	use_first_valid = yes

	text = {
		trigger = { has_global_flag = flag_hellenic_greek_reformation }
		localisation_key = GOD_HESTIA
	}
	text = {
		localisation_key = GOD_VESTA
	}
}
defined_text = {
	name = GetKronosSaturnName
	use_first_valid = yes

	text = {
		trigger = { has_global_flag = flag_hellenic_greek_reformation }
		localisation_key = GOD_KRONOS
	}
	text = {
		localisation_key = GOD_SATURN
	}
}
defined_text = {
	name = GetDionysusBacchusName
	use_first_valid = yes

	text = {
		trigger = { has_global_flag = flag_hellenic_greek_reformation }
		localisation_key = GOD_DIONYSUS
	}
	text = {
		localisation_key = GOD_BACCHUS
	}
}

defined_text = {
	name = GetHermesMercuryName
	use_first_valid = yes

	text = {
		trigger = { has_global_flag = flag_hellenic_greek_reformation }
		localisation_key = GOD_HERMES
	}
	text = {
		localisation_key = GOD_MERCURY
	}
}

defined_text = {
	name = GetAltAugustusName
	use_first_valid = yes

	text = {
		trigger = { is_alternate_start = yes }
		localisation_key = string_altstart_augustus_desc
	}
	text = {
		localisation_key = string_vanilla_augustus_desc
	}
}
defined_text = {
	name = GetPrincelyElectorsList
	use_first_valid = yes

	text = {
		trigger = {
			e_hre = {
				persistent_event_target:hre_title_1_per = {
					always = yes # If one of them exists then all of them do
				}
			}
		}
		localisation_key = string_princely_elective_elector_list_desc
	}
	text = {
		localisation_key = String_empty_space
	}
}

defined_text = {
	name = GetGirlWomanBoyMan
	use_first_valid = yes

	text = {
		localisation_key = String_girl
		trigger = {
			is_female = yes
			is_adult = no
		}
	}
	text = {
		localisation_key = String_woman
		trigger = {
			is_female = yes
			is_adult = yes
		}
	}
	text = {
		localisation_key = String_boy
		trigger = {
			is_female = no
			is_adult = no
		}
	}
	text = {
		localisation_key = String_man
		trigger = {
			is_female = no
			is_adult = yes
		}
	}
}


defined_text = {
	name = GetArtifactStorage
	use_first_valid = yes

	text = {
		localisation_key = String_library
		trigger = { has_artifact_flag = book }
	}
	text = {
		localisation_key = String_armory
		trigger = {
			OR = {
				has_artifact_flag = armor
				has_artifact_flag = combat_weapon
			}
			artifact_age < 30
		}
	}
	text = {
		localisation_key = String_old_armory
		trigger = {
			OR = {
				has_artifact_flag = armor
				has_artifact_flag = combat_weapon
			}
			artifact_age >= 30
		}
	}
	text = {
		localisation_key = String_treasury
		trigger = { has_artifact_flag = jewelry }
	}
	text = {
		localisation_key = String_temple
		trigger = {
			has_artifact_flag = saint
			ROOT = { religion_group = christian }
		}
	}
	text = {
		localisation_key = String_temple
		trigger = {
			has_artifact_flag = saint
			has_artifact_flag = bodypart
		}
	}
	text = {
		localisation_key = String_treasury
		trigger = { has_artifact_flag = skull }
	}

	fallback_text = {
		localisation_key = String_treasury
	}
}

defined_text = {
	name = GetScriptedDiseaseName
	use_first_valid = yes

	text = {
		localisation_key = String_consumption
		trigger = { trait = consumption }
	}
	text = {
		localisation_key = String_slow_fever
		trigger = { trait = slow_fever }
	}
	text = {
		localisation_key = String_camp_fever
		trigger = { trait = camp_fever }
	}
	text = {
		localisation_key = String_the_Plague
		trigger = { trait = bubonic_plague }
	}
	text = {
		localisation_key = String_measles
		trigger = { trait = measles }
	}
	text = {
		localisation_key = String_smallpox
		trigger = { trait = smallpox }
	}
	text = {
		localisation_key = String_syphilis
		trigger = { trait = great_pox }
	}
	text = {
		localisation_key = String_flu
		trigger = { trait = flu }
	}
	text = {
		localisation_key = String_dysentery
		trigger = { trait = dysentery }
	}
	text = {
		localisation_key = String_gout
		trigger = { trait = gout }
	}
	text = {
		localisation_key = String_food_poisoning
		trigger = { trait = food_poisoning }
	}
	text = {
		localisation_key = String_rabies
		trigger = { trait = rabies }
	}
	text = {
		localisation_key = cancer
		trigger = { trait = cancer }
	}
	text = {
		localisation_key = string_pneumonia
		trigger = { trait = pneumonic }
	}

	fallback_text = {
		localisation_key = String_disease
	}
}

defined_text = {
	name = GetCrusadeTarget
	use_first_valid = yes

	text = {
		localisation_key = EVTNAME200_NEWCRUSADETARGET
		trigger = {
			event_target:crusade_title = {
				always = yes
			}
		}
	}
	text = {
		localisation_key = EVTNAME200_OLDCRUSADETARGET
	}
}