# shattered_world_county_conquest
# shattered_world_duchy_conquest
# shattered_invasion

shattered_world_county_conquest = {
	name = CB_NAME_SHATTERED_COUNTY_CONQUEST
	war_name = WAR_NAME_SHATTERED_COUNTY_CONQUEST
	sprite = 27
	truce_days = 1825
	infamy_modifier = 2
	sort_priority = 795

	hostile_against_others = yes
	full_hostility = yes
	is_permanent = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	can_ask_to_join_war = no
	allowed_to_target_tributaries = no

	can_use_gui = {
		trigger_if = {
			limit = {
				has_alternate_start_setting = {
					setting = shattered_cbs
					option = on_limited
				}
			}
			total_years_played < 25
		}
		trigger_if = {
			limit = {
				has_alternate_start_setting = {
					setting = shattered_cbs
					option = on_long
				}
			}
			total_years_played < 100
		}

		ROOT = { can_use_cb_preamble = yes }
	}

	can_use = {
		is_shattered_world = yes

		trigger_if = {
			limit = {
				has_alternate_start_setting = {
					setting = shattered_cbs
					option = on_limited
				}
			}
			total_years_played < 25
		}
		trigger_else_if = {
			limit = {
				has_alternate_start_setting = {
					setting = shattered_cbs
					option = on_long
				}
			}
			total_years_played < 100
		}
		trigger_else = {
			NOT = {
				has_alternate_start_setting = {
					setting = shattered_cbs
					option = off
				}
			}
		}

		# Attacker
		ROOT = {
			NOR = {
				is_vassal_or_below_of = FROM
				mercenary = yes
			}

		}
	}

	can_use_title = {
		real_tier = COUNT

		holder_scope = {
			OR = {
				character = FROM
				AND = {
					is_vassal_or_below_of = FROM
					NOT = { same_realm = ROOT }
				}
			}
		}

		# Attacker must share a border or be at most one sea zone away
		location = {
			any_neighbor_province = {
				trigger_if = {
					limit = { has_owner = yes }

					owner = {
						OR = {
							character = ROOT
							is_vassal_or_below_of = ROOT
						}
					}
				}
				trigger_else = {
					is_land = no

					any_neighbor_province = {
						has_owner = yes

						owner = {
							OR = {
								character = ROOT
								is_vassal_or_below_of = ROOT
							}
						}
					}
				}
			}
		}
	}

	is_valid_title = {
		holder_scope = {
			OR = {
				character = FROM
				is_vassal_or_below_of = FROM
			}
		}
	}

	on_add = {
		fire_haruspicy_event_effect = yes
		anger_china_effect = yes
	}

	on_success_title = {
		if = { # Vassalise one county counts
			limit = {
				holder_scope = {
					real_tier = COUNT
					num_of_count_titles == 1
					lower_real_tier_than = attacker
					is_patrician = no
				}
			}

			holder_scope = {
				set_defacto_liege = attacker
			}
		}
		else = { # Usurp title under other circumstances
			usurp_title_plus_barony_if_unlanded = {
				target = attacker
				type = invasion
			}

			# Take all baronies under the one we're fighting for
			any_de_jure_vassal_title = {
				show_scope_change = no

				limit = {
					has_holder = yes
					NOT = { de_facto_liege = PREV }

					holder_scope = {
						is_vassal_or_below_of = defender
					}
				}

				usurp_title_plus_barony_if_unlanded = {
					target = attacker
					type = invasion
				}
			}
		}

		add_pressed_claim = defender

		any_attacker = {
			limit = { NOT = { character = attacker } }
			hidden_effect = { participation_scaled_prestige = 100 }
		}
	}

	on_fail_title = {
		attacker = {
			show_scope_change = no

			prestige = -100
		}

		defender = {
			show_scope_change = no

			participation_scaled_prestige = 50
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 50 }
		}
	}

	on_reverse_demand = {
		attacker = {
			show_scope_change = no

			prestige = -100

			transfer_scaled_wealth = {
				to = defender
				value = 2.0
			}
		}

		defender = {
			show_scope_change = no

			participation_scaled_prestige = 100
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 100 }
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 1

		trigger = {
			ROOT = {
				ai_willing_to_attack = yes
			}
		}

		mult_modifier = {
			factor = 0.1

			ROOT = {
				independent = no
				same_liege = FROM
			}
		}
	}
}

# shattered_world_duchy_conquest = {
#	name = CB_NAME_SHATTERED_DUCHY_CONQUEST
#	war_name = WAR_NAME_SHATTERED_DUCHY_CONQUEST
#	sprite = 8
#	truce_days = 3650
#	infamy_modifier = 2
#
#	is_permanent = yes
#	check_de_jure_tier = DUKE # this scans all dejure duchies for the counties which are held by or vassals (or below) of selected character. Only valid if is_permanent = yes
#	allowed_to_target_tributaries = no
#
#	can_use_gui = {
#		trigger_if = {
#			limit = {
#				has_alternate_start_setting = {
#					setting = shattered_cbs
#					option = on_limited
#				}
#			}
#			total_years_played < 25
#		}
#		trigger_else_if = {
#			limit = {
#				has_alternate_start_setting = {
#					setting = shattered_cbs
#					option = on_long
#				}
#			}
#			total_years_played < 100
#		}
#
#		ROOT = {
#			show_scope_change = no
#
#			prestige >= 500
#			num_of_count_titles < 20
#			lower_real_tier_than = KING
#		}
#	}
#
#	can_use = {
#		is_shattered_world = yes
#
#		NOT = {
#			has_alternate_start_setting = {
#				setting = shattered_cbs
#				option = off
#			}
#		}
#
#		trigger_if = {
#			limit = {
#				has_alternate_start_setting = {
#					setting = shattered_cbs
#					option = on_limited
#				}
#			}
#			total_years_played < 25
#		}
#		trigger_else_if = {
#			limit = {
#				has_alternate_start_setting = {
#					setting = shattered_cbs
#					option = on_long
#				}
#			}
#			total_years_played < 100
#		}
#
#		ROOT = {
#			NOT = { is_vassal_or_below_of = FROM }
#			mercenary = no
#		}
#	}
#
#	can_use_title = {
#		# The attacker needs at least one county in the target kingdom, or a border, or be only two sea zones away from one of your counties
#		any_direct_de_jure_vassal_title = {
#			OR = {
#				holder_scope = {
#					OR = {
#						character = ROOT
#						is_vassal_or_below_of = ROOT
#					}
#				}
#
#				location = {
#					any_neighbor_province = {
#						has_owner = yes
#
#						owner = {
#							OR = {
#								character = ROOT
#								is_vassal_or_below_of = ROOT
#							}
#						}
#					}
#				}
#			}
#		}
#
#		any_de_jure_vassal_title = { # Can only liberate Duchies that are either outside of the Steppe region, or contains a Castle/City/Tribe
#			real_tier = COUNT
#
#			holder_scope = {
#				OR = {
#					character = FROM
#					is_vassal_or_below_of = FROM
#				}
#			}
#
#			location = {
#				trigger_if = {
#					limit = { region = world_steppe }
#
#					OR = {
#						has_city = yes
#						has_castle = yes
#						has_tribal = yes
#					}
#				}
#			}
#		}
#	}
#
#	is_valid = {
#		ROOT = {
#			NOT = { same_realm = FROM }
#			mercenary = no
#		}
#	}
#
#	on_add = {
#		attacker = {
#			show_scope_change = no
#
#			prestige = -500
#		}
#
#		anger_china_effect = yes
#	}
#
#	on_success = {
#		any_attacker = {
#			limit = { NOT = { character = attacker } }
#			hidden_effect = { participation_scaled_prestige = 100 }
#		}
#
#		defender = {
#			show_scope_change = no
#
#			prestige = -100
#		}
#	}
#
#	on_success_title = {
#		attacker = {
#			show_scope_change = no
#
#			vassalize_or_take_under_title = {
#				title = PREV
#				enemy = defender
#				anti_nomad = yes
#				type = invasion
#			}
#		}
#	}
#
#	on_fail = {
#		attacker = {
#			show_scope_change = no
#
#			prestige = -200
#		}
#	}
#
#	on_reverse_demand = {
#		attacker = {
#			show_scope_change = no
#
#			prestige = -200
#
#			transfer_scaled_wealth = {
#				to = defender
#				value = 4.0
#			}
#		}
#
#		defender = {
#			show_scope_change = no
#
#			participation_scaled_prestige = 300
#		}
#
#		any_defender = {
#			limit = { NOT = { character = defender } }
#			hidden_effect = { participation_scaled_prestige = 300 }
#		}
#	}
#
#	attacker_ai_victory_worth = {
#		factor = -1 # always accept
#	}
#
#	attacker_ai_defeat_worth = {
#		factor = 100
#	}
#
#	defender_ai_victory_worth = {
#		factor = -1 # always accept
#	}
#
#	defender_ai_defeat_worth = {
#		factor = 100
#	}
#
#	ai_will_do = {
#		factor = 1
#
#		trigger = {
#			trigger_if = {
#				limit = {
#					ROOT = {
#						is_tribal = no
#					}
#				}
#
#				any_direct_de_jure_vassal_title = { # counties
#					any_direct_de_jure_vassal_title = { # baronies
#						OR = {
#							holding_type = castle
#							holding_type = city
#						}
#					}
#				}
#			}
#			trigger_else = {
#				any_direct_de_jure_vassal_title = { # counties
#					any_direct_de_jure_vassal_title = { # baronies
#						OR = {
#							holding_type = castle
#							holding_type = city
#							holding_type = tribal
#						}
#					}
#				}
#			}
#		}
#	}
# }

shattered_invasion = {
	name = CB_NAME_INVASION
	war_name = WAR_NAME_INVASION
	sprite = 8
	truce_days = 3650
	sort_priority = 1100

	hostile_against_others = yes
	is_permanent = yes
	can_ask_to_join_war = no
	check_de_jure_tier = KING # this scans all de jure kingdoms for the counties which are held by or vassals(or below) of selected character. Only valid if is_permanent = yes

	can_use_gui = {
		ROOT = { can_use_cb_preamble = yes }
	}

	can_use = {
		# Attacker
		ROOT = {
			has_character_flag = great_conqueror
			NOT = { is_vassal_or_below_of = FROM }
			mercenary = no
		}
	}

	can_use_title = {
		# The attacker needs at least one county in the target kingdom, or a border
		any_direct_de_jure_vassal_title = {
			any_direct_de_jure_vassal_title = {
				OR = {
					holder_scope = {
						OR = {
							character = ROOT
							is_vassal_or_below_of = ROOT
						}
					}

					location = {
						any_neighbor_province = {
							owner = {
								OR = {
									character = ROOT
									is_vassal_or_below_of = ROOT
								}
							}
						}
					}
				}
			}
		}
	}

	is_valid_title = {
		# Defender
		FROM = {
			num_of_realm_counties = {
				value >= 1
				title = PREV
			}
		}
	}

	on_add = {
		fire_haruspicy_event_effect = yes
		anger_china_effect = yes
	}

	on_success = {
		attacker = {
			show_scope_change = no

			prestige = 200
			participation_scaled_prestige = 200

			hidden_effect = {
				occupy_minors_of_occupied_settlements = defender

				gain_all_occupied_titles = {
					who = defender
					type = invasion
				}

				if = {
					limit = { has_nickname = no }

					random_list = {
						10 = { give_nickname = nick_the_great }
						10 = { give_nickname = nick_the_magnificent }
						10 = { give_nickname = nick_the_glorious }
						10 = { give_nickname = nick_the_conqueror }
					}
				}
			}

			if = {
				limit = {
					uses_decadence = yes
					defender = { uses_decadence = no }
				}

				participation_scaled_decadence = -20
			}
		}

		any_attacker = {
			limit = { NOT = { character = attacker } }

			hidden_effect = {
				participation_scaled_prestige = 200

				if = {
					limit = {
						uses_decadence = yes
						defender = { uses_decadence = no }
					}

					participation_scaled_decadence = -20
				}
			}
		}

		defender = {
			show_scope_change = no

			prestige = -200
		}
	}

	on_success_title = {
		custom_tooltip = {
			text = tribal_invasion_succ_tip

			attacker = {
				vassalize_or_take_under_title_destroy_duchies = {
					title = PREV
					enemy = defender
					is_crusade = yes # Even if the title holder is not participating in the war, gain holdings occupied by all Crusade participants
					type = invasion
				}
			}
		}
	}

	on_fail = {
		attacker = {
			show_scope_change = no

			prestige = -200
		}

		defender = {
			show_scope_change = no

			prestige = 100
			participation_scaled_prestige = 100
			roman_victory_triumph_effect = yes
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 100 }
		}
	}

	on_reverse_demand = {
		attacker = {
			show_scope_change = no

			prestige = -200
			decadence = 10

			transfer_scaled_wealth = {
				to = defender
				value = 4.0
			}
		}

		defender = {
			show_scope_change = no

			prestige = 200
			participation_scaled_prestige = 200
			roman_victory_triumph_effect = yes
		}

		any_defender = {
			limit = { NOT = { character = defender } }
			hidden_effect = { participation_scaled_prestige = 200 }
		}
	}

	attacker_ai_victory_worth = {
		factor = 100
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 150
	}

	ai_will_do = {
		factor = 20

		trigger = {
			ROOT = {
				ai_willing_to_attack = yes
			}
		}
	}
}