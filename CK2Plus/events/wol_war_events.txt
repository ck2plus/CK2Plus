###########################################
#                                         #
# Way of Life war events                  #
#                                         #
# ID WoL.11000-WoL.11999                  #
#                                         #
###########################################

# Written by Joel Hansson

namespace = WoL

### Duels

# Get challenged
# character_event = {
# 	id = WoL.11000
# 	desc = EVTDESC_WOL_11000
# 	picture = GFX_evt_melee
# 	border = GFX_event_normal_frame_war
#
# 	is_triggered_only = yes
#
# 	immediate = {
# 		if = {
# 			limit = {
# 				trigger_if = {
# 					limit = { has_character_modifier = declined_prestige_duel_timer }
#
# 					NAND = {
# 						is_female = no
# 						event_target:challenger = { is_female = yes }
# 						top_liege = { is_nomadic = no }
# 					}
# 				}
# 			}
#
# 			add_character_modifier = {
# 				name = declined_prestige_duel_timer
# 				years = 3
# 				hidden = yes
# 			}
#
# 			set_character_flag = punish_declining
# 		}
#
# 		if = {
# 			limit = {
# 				NOT = { has_character_modifier = recent_duel_timer }
# 			}
#
# 			add_character_modifier = {
# 				name = recent_duel_timer
# 				years = 1
# 				hidden = yes
# 			}
# 		}
#
# 		FROMFROM = {
# 			if = {
# 				limit = {
# 					NOT = { has_character_modifier = recent_duel_timer }
# 				}
#
# 				add_character_modifier = {
# 					name = recent_duel_timer
# 					years = 1
# 					hidden = yes
# 				}
# 			}
# 		}
# 	}
#
# 	option = { # Challenge accepted
# 		name = EVTOPTA_WOL_11000
#
# 		random = {
# 			chance = 20
# 			remove_trait_silently_craven_effect = yes
# 		}
#
# 		pacifists_lose_piety_effect = yes
#
# 		FROMFROM = {
# 			if = {
# 				limit = {
# 					has_opinion_modifier = {
# 						name = grievously_offended
# 						who = ROOT
# 					}
# 				}
# 			}
#
# 			remove_opinion = {
# 				name = grievously_offended
# 				who = ROOT
# 			}
# 		}
#
# 		save_event_target_as = opponent
#		set_character_flag = wol_focus_duel
#
# 		FROMFROM = {
# 			save_event_target_as = challenger
#			set_character_flag = wol_focus_duel
#
# 			character_event = {
# 				id = WoL.11001
# 				days = 3
# 			}
# 		}
#
# 		clr_character_flag = punish_declining
#
# 		ai_chance = {
# 			factor = 20
#
# 			trigger = {
# 				trigger_if = {
# 					limit = { religion_group = christian }
# 					is_priest = no
# 				}
# 			}
#
# 			mult_modifier = {
# 				factor = 2
# 				trait = proud
# 			}
#
# 			mult_modifier = {
# 				factor = 0.05
# 				trait = craven
# 			}
#
# 			mult_modifier = {
# 				factor = 0.3
# 				religion = jain
# 			}
#
# 			mult_modifier = {
# 				factor = 0.025
#
# 				is_female = no
# 				FROMFROM = { is_female = yes }
# 				top_liege = { is_nomadic = no }
# 			}
# 		}
# 	}
#
# 	option = { # No, that sounds dangerous
# 		name = EVTOPTB_WOL_11000
#
# 		if = {
# 			limit = { has_character_flag = punish_declining }
#
# 			if = {
# 				limit = { trait = brave }
# 				remove_trait = brave
# 			}
# 			else = {
# 				random = {
# 					chance = 30
# 					add_trait_craven_effect = yes
# 				}
# 			}
#
# 			prestige = -50
#
# 			add_character_modifier = {
# 				name = declined_prestige_duel_timer
# 				years = 3
# 				hidden = yes
# 			}
# 		}
#
# 		hidden_effect = {
# 			remove_character_modifier = recent_duel_timer
#
# 			FROMFROM = { # attacker
# 				remove_character_modifier = recent_duel_timer
#
# 				opinion = {
# 					name = opinion_fled_duel
# 					who = ROOT
# 					years = 100
# 				}
#
# 				character_event = {
# 					id = WoL.11002
# 					days = 3
# 				}
# 			}
# 		}
#
# 		clr_character_flag = punish_declining
#
# 		ai_chance = { factor = 1 }
# 	}
# }
#
### calling decision (duel_decision in in way_of_life_decisions) is disabled in vanilla in favour of a 3.0 decision (duel_decision in hf_warrior_lodge_decisions)
### DuelEngine TODO: decide whether to replace with new 3.0 vanilla duels
#
# # Start the duel
# character_event = {
# 	id = WoL.11001
# 	desc = EVTDESC_WOL_11001
# 	picture = GFX_evt_melee
# 	border = GFX_event_normal_frame_war
#
# 	is_triggered_only = yes
#
#	immediate = {
#		if = {
#			limit = { has_character_modifier = recent_duel_victory }
#			remove_character_modifier = recent_duel_victory
#		}
#
#		if = {
#			limit = { NOT = { has_character_modifier = recent_duel_timer } }
#
#			add_character_modifier = {
#				name = recent_duel_timer
#				years = 1
#				hidden = yes
#			}
#		}
#
#		opinion = {
#			name = opinion_fought_duel
#			who = event_target:opponent
#			years = 150
#		}
#
#		event_target:opponent = {
#			if = {
#				limit = { has_character_modifier = recent_duel_victory }
#				remove_character_modifier = recent_duel_victory
#			}
#
#			if = {
#				limit = { NOT = { has_character_modifier = recent_duel_timer } }
#
#				add_character_modifier = {
#					name = recent_duel_timer
#					years = 1
#					hidden = yes
#				}
#			}
#
#			opinion = {
#				name = opinion_fought_duel
#				who = ROOT
#				years = 150
#			}
#		}
#	}
#
# 	option = {
# 		name = EVTOPTA_WOL_11001
#
# 		e_rebels = { holder_scope = { character_event = { id = DuelEngine.0 } } }
# 	}
# }
#
# # Duel rejected
# character_event = {
# 	id = WoL.11002
# 	desc = EVTDESC_WOL_11002
# 	picture = GFX_evt_melee
# 	border = GFX_event_normal_frame_war
#
# 	is_triggered_only = yes
#
# 	option = {
# 		name = EVTOPTA_WOL_11002
# 	}
# }
#
# # Pop-in without dialogue to accept (event_target:opponent and event_target:challenger must be set)
# character_event = {
# 	id = WoL.11003
#
# 	is_triggered_only = yes
# 	hide_window = yes
#
# 	immediate = {
# 		if = {
# 			limit = { NOT = { has_character_modifier = recent_duel_timer } }
#
# 			add_character_modifier = {
# 				name = recent_duel_timer
# 				years = 1
# 				hidden = yes
# 			}
# 		}
#
# 		event_target:opponent = {
# 			if = {
# 				limit = {
# 					NOT = { has_character_modifier = recent_duel_timer }
# 				}
#
# 				add_character_modifier = {
# 					name = recent_duel_timer
# 					years = 1
# 					hidden = yes
# 				}
# 			}
# 		}
#
# 		opinion = {
# 			name = opinion_fought_duel
# 			who = event_target:opponent
# 			years = 150
# 		}
#
# 		if = {
# 			limit = { has_character_modifier = recent_duel_victory }
# 			remove_character_modifier = recent_duel_victory
# 		}
#
# 		event_target:opponent = {
# 			opinion = {
# 				name = opinion_fought_duel
# 				who = ROOT
# 				years = 150
# 			}
#
# 			character_event = { id = WoL.11004 }
# 		}
# 	}
# }
#
# # Opponent bounce for scopes (hidden)
# character_event = {
# 	id = WoL.11004
#
# 	is_triggered_only = yes
# 	hide_window = yes
#
# 	immediate = {
# 		if = {
# 			limit = { has_character_modifier = recent_duel_victory }
# 			remove_character_modifier = recent_duel_victory
# 		}
#
# 		FROM = {
# 			character_event = { id = WoL.11005 }
# 		}
# 	}
# }
#
# ### NO LONGER IN USE (hence why numbers are off) ###
### calling decision (duel_decision in in way_of_life_decisions) is disabled in vanilla in favour of a 3.0  decision (duel_decision in hf_warrior_lodge_decisions)
# # Duel (hidden)
# character_event = {
# 	id = WoL.11005
#
# 	is_triggered_only = yes
# 	hide_window = yes
#
# 	immediate = {
# 	#	log = "WoL.11005: [Root.GetBestName] challenged [From.GetBestName] on a duel"
#
# 		random_list = {
# 			1 = { # double death
# 				mult_modifier = {
# 					factor = 0.2
#
# 					OR = {
# 						combat_rating_diff = {
# 							who = FROM
# 							value >= 4
# 						}
#
# 						combat_rating_diff = {
# 							who = FROM
# 							value <= -4
# 						}
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 2
#
# 					trait = wroth
# 					FROM = { trait = wroth }
# 				}
#
# 				long_character_event = { id = WoL.11009 }
# 				FROM = { long_character_event = { id = WoL.11009 } }
# 			}
#
# 			1 = { # decapitate opponent
# 				trigger = {
# 					combat_rating_diff = {
# 						who = FROM
# 						value >= 1
# 					}
# 				}
#
# 				add_character_modifier = {
# 					name = recent_duel_victory
# 					years = 1
# 				}
#
# 				long_character_event = { id = WoL.11011 }
# 			}
#
# 			1 = { # decapitate challenger
# 				trigger = {
# 					combat_rating_diff = {
# 						who = FROM
# 						value <= -1
# 					}
# 				}
#
# 				FROM = {
# 					add_character_modifier = {
# 						name = recent_duel_victory
# 						years = 1
# 					}
#
# 					long_character_event = { id = WoL.11011 }
# 				}
# 			}
#
# 			200 = { # challenger win
# 				### modifiers
# 				# trigger = {
# 				#	always = no ######### DEBUGGING
# 				# }
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value <= -1
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value <= -2
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value <= -3
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value <= -4
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value <= -5
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value <= -6
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value <= -7
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value <= -8
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value <= -9
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value <= -10
# 					}
# 				}
#
# 				### effects
# 				random_list = {
# 					70 = {
# 						add_character_modifier = {
# 							name = recent_duel_victory
# 							years = 1
# 						}
#
# 						long_character_event = { id = WoL.11006 }
# 					}
#
# 					30 = {
# 						trigger = {
# 							FROM = { is_maimed_trigger = no }
# 						}
#
# 						add_character_modifier = {
# 							name = recent_duel_victory
# 							years = 1
# 						}
#
# 						set_character_flag = duel_maim
# 						long_character_event = { id = WoL.11006 }
# 					}
# 				}
# 			}
#
# 			200 = { # opponent win
# 				### modifiers
# 				# trigger = {
# 				#	always = no ######### DEBUGGING
# 				# }
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value >= 1
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value >= 2
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value >= 3
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value >= 4
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value >= 5
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value >= 6
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value >= 7
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value >= 8
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value >= 9
# 					}
# 				}
#
# 				mult_modifier = {
# 					factor = 0.7
#
# 					combat_rating_diff = {
# 						who = FROM
# 						value >= 10
# 					}
# 				}
#
# 				### effects
# 				random_list = {
# 					70 = {
# 						FROM = {
# 							add_character_modifier = {
# 								name = recent_duel_victory
# 								years = 1
# 							}
#
# 							long_character_event = { id = WoL.11006 }
# 						}
# 					}
#
# 					30 = {
# 						trigger = {
# 							is_maimed_trigger = no
# 						}
#
# 						FROM = {
# 							add_character_modifier = {
# 								name = recent_duel_victory
# 								years = 1
# 							}
#
# 							set_character_flag = duel_maim
# 							long_character_event = { id = WoL.11006 }
# 						}
# 					}
# 				}
# 			}
# 		}
# 	}
# }
#
# # Winner event
# long_character_event = {
# 	id = WoL.11006
# 	title = duel_title
# 	picture = GFX_evt_melee
# 	border = GFX_event_long_frame_war
#
# 	desc = {
# 		text = EVTDESCA_WOL_11006 # Maiming opponent
# 		trigger = {
# 			character = event_target:challenger
# 			has_character_flag = duel_maim
# 		}
# 	}
# 	desc = {
# 		text = EVTDESCB_WOL_11006 # Winning over opponent
# 		trigger = {
# 			character = event_target:challenger
# 			NOT = { has_character_flag = duel_maim }
# 		}
# 	}
# 	desc = {
# 		text = EVTDESCC_WOL_11006 # Maiming challenger
# 		trigger = {
# 			NOT = { character = event_target:challenger }
# 			has_character_flag = duel_maim
# 		}
# 	}
# 	desc = {
# 		text = EVTDESCD_WOL_11006 # Winning over challenger
# 		trigger = {
# 			NOR = {
# 				character = event_target:challenger
# 				has_character_flag = duel_maim
# 			}
# 		}
# 	}
#
# 	is_triggered_only = yes
#
# 	option = {
# 		name = EVTOPTA_WOL_11006
#
# 		trigger = { has_character_flag = duel_maim }
#
# 		prestige = 50
#
# 		if = {
# 			limit = { character = event_target:challenger }
#
# 			event_target:opponent = {
# 				show_scope_change = no
#
# 				tooltip = {
# 					maim_hand_effect = yes
#
# 					if = {
# 						limit = {
# 							NOT = { is_rival = ROOT }
# 						}
#
# 						add_rival = ROOT
# 					}
# 				}
#
# 				long_character_event = { id = WoL.11007 }
# 			}
#
# 			if = {
# 				limit = {
#					OR = {
#						trait = duelist
#						has_focus = focus_war
#					}
#				}
#
# 				random = {
# 					chance = 50
# 					character_event = { id = WoL.11200 }
# 				}
# 			}
# 		}
# 		else = {
# 			event_target:challenger = {
# 				show_scope_change = no
#
# 				tooltip = {
# 					maim_hand_effect = yes
#
# 					if = {
# 						limit = {
# 							NOT = { is_rival = ROOT }
# 						}
#
# 						add_rival = ROOT
# 					}
# 				}
#
# 				long_character_event = { id = WoL.11007 }
# 			}
#
# 			if = {
# 				limit = {
#					OR = {
#						trait = duelist
#						has_focus = focus_war
#					}
#				}
#
# 				random = {
# 					chance = 50
# 					character_event = { id = WoL.11200 }
# 				}
# 			}
# 		}
#
# 		ai_chance = { factor = 60 }
# 	}
#
# 	option = {
# 		name = EVTOPTB_WOL_11006
#
# 		trigger = {
# 			NOT = { has_character_flag = duel_maim }
# 		}
#
# 		prestige = 50
#
# 		if = {
# 			limit = { character = event_target:challenger }
#
# 			tooltip = {
# 				event_target:opponent = {
# 					show_scope_change = no
#
# 					if = {
# 						limit = { is_maimed_trigger = no }
# 						add_trait = wounded
# 					}
# 				}
# 			}
#
# 			hidden_effect = {
# 				event_target:opponent = {
# 					long_character_event = { id = WoL.11007 }
# 				}
#
# 				random = {
# 					chance = 25
# 					character_event = { id = WoL.11200 }
# 				}
# 			}
# 		}
# 		else = {
# 			event_target:challenger = {
# 				tooltip = {
# 					show_scope_change = no
#
# 					if = {
# 						limit = { is_maimed_trigger = no }
# 						add_trait = wounded
# 					}
# 				}
#
# 				long_character_event = { id = WoL.11007 }
# 			}
#
# 			random = {
# 				chance = 25
# 				character_event = { id = WoL.11200 }
# 			}
# 		}
#
# 		ai_chance = { factor = 60 }
# 	}
#
# 	option = {
# 		name = EVTOPTC_WOL_11006
#
# 		prestige = 50
#
# 		custom_tooltip = {
# 			text = EVTTOOLTIPWOL11006
#
# 			hidden_effect = {
# 				generate_tooltip = no
#
# 				any_realm_character = {
# 					opinion = {
# 						name = opinion_ruthless
# 						who = ROOT
# 						years = 5
# 					}
# 				}
# 			}
# 		}
#
# 		if = {
# 			limit = { has_character_modifier = merciless }
#
# 			if = {
# 				limit = { has_nickname = no }
#
# 				give_nickname = nick_the_ruthless
# 				add_blood_splatter_effect = yes
# 			}
# 		}
# 		else = {
# 			add_character_modifier = {
# 				name = merciless
# 				duration = -1
# 			}
# 		}
#
# 		if = {
# 			limit = { character = event_target:challenger }
#
# 			event_target:opponent = {
# 				save_event_target_as = kinslayer_target
# 			}
#
# 			add_kinslayer_trait_effect = yes
#
# 			event_target:opponent = {
# 				show_scope_change = no
#
# 				tooltip = {
# 					death = {
# 						death_reason = death_duel
# 						killer = event_target:challenger
# 					}
# 				}
#
# 				long_character_event = { id = WoL.11008 }
# 			}
#
# 			random = {
# 				chance = 25
# 				character_event = { id = WoL.11200 }
# 			}
# 		}
# 		else = {
# 			event_target:challenger = {
# 				save_event_target_as = kinslayer_target
# 			}
#
# 			add_kinslayer_trait_effect = yes
#
# 			event_target:challenger = {
# 				show_scope_change = no
#
# 				tooltip = {
# 					death = {
# 						death_reason = death_duel
# 						killer = event_target:opponent
# 					}
# 				}
#
# 				long_character_event = { id = WoL.11008 }
# 			}
#
# 			random = {
# 				chance = 25
# 				character_event = { id = WoL.11200 }
# 			}
# 		}
#
# 		ai_chance = {
# 			factor = 1
#
# 			mult_modifier = {
# 				factor = 0.1
# 				trait = kind
# 			}
#
# 			mult_modifier = {
# 				factor = 15
# 				trait = impaler
# 			}
#
# 			mult_modifier = {
# 				factor = 5
# 				trait = cruel
# 			}
#
# 			mult_modifier = {
# 				factor = 10
#
# 				trigger_if = {
# 					limit = { character = event_target:opponent }
# 					is_rival = event_target:challenger
# 				}
# 				trigger_else = {
# 					is_rival = event_target:opponent
# 				}
# 			}
# 		}
# 	}
#
# 	after = {
# 		character_event = { id = steam.021 } # Bring it On achievement check event
# 	}
# }
#
# # Loser event
# long_character_event = {
# 	id = WoL.11007
# 	title = duel_title
# 	picture = GFX_evt_melee
# 	border = GFX_event_long_frame_war
#
# 	is_triggered_only = yes
#
# 	desc = {
# 		text = EVTDESCA_WOL_11007
# 		trigger = {
# 			FROM = {
# 				has_character_flag = duel_maim
# 			}
# 		}
# 	}
# 	desc = {
# 		text = EVTDESCB_WOL_11007
# 		trigger = {
# 			FROM = {
# 				NOT = { has_character_flag = duel_maim }
# 			}
# 		}
# 	}
#
# 	option = {
# 		name = EVTOPTA_WOL_11007
#
# 		prestige = -50
#
# 		if = {
# 			limit = {
# 				FROM = { has_character_flag = duel_maim }
# 			}
#
# 			maim_hand_effect = yes
#
# 			if = {
# 				limit = {
# 					NOT = { is_rival = FROM }
# 				}
#
# 				add_rival = FROM
# 			}
# 		}
# 		else_if = {
# 			limit = { is_maimed_trigger = no }
# 			add_trait = wounded
# 		}
#
# 		FROM = {
# 			clr_character_flag = duel_maim
# 		}
#
# 		random = {
# 			chance = 35
#
# 			character_event = {
# 				id = WoL.11013
# 				days = 3
# 			}
# 		}
# 	}
# }
#
# # Loser event executed
# long_character_event = {
# 	id = WoL.11008
# 	title = duel_title
# 	desc = EVTDESC_WOL_11008
# 	picture = GFX_evt_melee
# 	border = GFX_event_long_frame_war
#
# 	is_triggered_only = yes
#
# 	immediate = {
# 		if = {
# 			limit = { multiplayer = yes }
#
# 			death = {
# 				death_reason = death_duel
# 				killer = FROM
# 			}
# 		}
# 	}
#
# 	option = {
# 		name = EVTOPTA_CM_6303
#
# 		save_event_target_as = kinslayer_target
#
# 		FROM = {
# 			clr_character_flag = duel_maim
# 		}
#
# 		tooltip = {
# 			FROM = {
# 				show_scope_change = no
#
# 				add_kinslayer_trait_effect = yes
# 			}
# 		}
#
# 		if = {
# 			limit = { multiplayer = no }
#
# 			death = {
# 				death_reason = death_duel
# 				killer = FROM
# 			}
# 		}
# 	}
# }
#
# # Double death (challenger)
# long_character_event = {
# 	id = WoL.11009
# 	title = duel_title
# 	picture = GFX_evt_melee
# 	border = GFX_event_long_frame_war
#
# 	desc = {
# 		text = EVTDESCA_WOL_11009 # Challenger desc
# 		trigger = {
# 			character = event_target:challenger
# 		}
# 	}
# 	desc = {
# 		text = EVTDESCB_WOL_11009 # Opponent desc
# 		trigger = {
# 			NOT = { character = event_target:challenger }
# 		}
# 	}
#
# 	is_triggered_only = yes
#
# 	immediate = {
# 		if = {
# 			limit = { multiplayer = yes }
#
# 			if = {
# 				limit = { character = event_target:challenger }
#
# 				event_target:opponent = {
# 					save_event_target_as = kinslayer_target
# 				}
#
# 				add_kinslayer_trait_effect = yes
#
# 				death = {
# 					death_reason = death_duel
# 					killer = event_target:opponent
# 				}
# 			}
# 			else = {
# 				event_target:challenger = {
# 					save_event_target_as = kinslayer_target
# 				}
#
# 				add_kinslayer_trait_effect = yes
#
# 				death = {
# 					death_reason = death_duel
# 					killer = event_target:challenger
# 				}
# 			}
# 		}
# 	}
#
# 	option = {
# 		name = EVTOPTA_CM_6303
#
# 		if = {
# 			limit = { character = event_target:challenger }
#
# 			event_target:opponent = {
# 				save_event_target_as = kinslayer_target
# 			}
# 			add_kinslayer_trait_effect = yes
# 			save_event_target_as = kinslayer_target
#
# 			event_target:opponent = {
# 				show_scope_change = no
#
# 				add_kinslayer_trait_effect = yes
# 			}
#
# 			if = {
# 				limit = { multiplayer = no }
#
# 				death = {
# 					death_reason = death_duel
# 					killer = event_target:opponent
# 				}
# 			}
#
# 			tooltip = {
# 				event_target:opponent = {
# 					show_scope_change = no
#
# 					death = {
# 						death_reason = death_duel
# 						killer = event_target:challenger
# 					}
# 				}
# 			}
# 		}
# 		else = {
# 			event_target:challenger = {
# 				save_event_target_as = kinslayer_target
# 			}
#
# 			add_kinslayer_trait_effect = yes
# 			save_event_target_as = kinslayer_target
#
# 			event_target:challenger = {
# 				show_scope_change = no
#
# 				add_kinslayer_trait_effect = yes
# 			}
#
# 			if = {
# 				limit = { multiplayer = no }
#
# 				death = {
# 					death_reason = death_duel
# 					killer = event_target:challenger
# 				}
# 			}
#
# 			tooltip = {
# 				event_target:challenger = {
# 					show_scope_change = no
#
# 					death = {
# 						death_reason = death_duel
# 						killer = event_target:opponent
# 					}
# 				}
# 			}
# 		}
# 	}
# }
#
# # Winner decap
# long_character_event = {
# 	id = WoL.11011
# 	title = duel_title
# 	picture = GFX_evt_melee
# 	border = GFX_event_long_frame_war
#
# 	desc = {
# 		text = EVTDESCA_WOL_11011
# 		trigger = {
# 			character = event_target:challenger
# 		}
# 	}
# 	desc = {
# 		text = EVTDESCB_WOL_11011
# 		trigger = {
# 			NOT = { character = event_target:challenger }
# 		}
# 	}
#
# 	is_triggered_only = yes
#
# 	option = {
# 		name = EVTOPTA_WOL_11011
#
# 		trigger = { character = event_target:challenger }
#
# 		prestige = 100
#
# 		event_target:opponent = {
# 			show_scope_change = no
#
# 			if = {
# 				limit = { has_nickname = no }
# 				give_nickname = nick_the_headless
# 			}
# 		}
#
# 		if = {
# 			limit = { has_nickname = no }
#
# 			give_nickname = nick_the_beheader
# 			add_blood_splatter_effect = yes
# 		}
#
# 		event_target:opponent = {
# 			save_event_target_as = kinslayer_target
# 		}
#
# 		add_kinslayer_trait_effect = yes
#
# 		event_target:opponent = {
# 			show_scope_change = no
#
# 			tooltip = {
# 				death = {
# 					death_reason = death_duel
# 					killer = ROOT
# 				}
# 			}
#
# 			long_character_event = { id = WoL.11012 }
# 		}
#
# 		random = {
# 			chance = 50
# 			character_event = { id = WoL.11200 }
# 		}
# 	}
#
# 	option = {
# 		name = EVTOPTA_WOL_11011
#
# 		trigger = {
# 			NOT = { character = event_target:challenger }
# 		}
#
# 		prestige = 100
#
# 		event_target:challenger = {
# 			show_scope_change = no
#
# 			if = {
# 				limit = { has_nickname = no }
# 				give_nickname = nick_the_headless
# 			}
# 		}
#
# 		if = {
# 			limit = { has_nickname = no }
# 			give_nickname = nick_the_beheader
# 		}
#
# 		event_target:challenger = {
# 			save_event_target_as = kinslayer_target
# 		}
#
# 		add_kinslayer_trait_effect = yes
#
# 		event_target:challenger = {
# 			show_scope_change = no
#
# 			tooltip = {
# 				death = {
# 					death_reason = death_duel
# 					killer = ROOT
# 				}
# 			}
#
# 			long_character_event = { id = WoL.11012 }
# 		}
#
# 		random = {
# 			chance = 50
# 			character_event = { id = WoL.11200 }
# 		}
# 	}
#
# 	after = {
# 		character_event = { id = steam.021 } # Bring it On achievement check event
# 	}
# }
#
# # Loser decap
# long_character_event = {
# 	id = WoL.11012
# 	title = duel_title
# 	desc = EVTDESC_WOL_11012
# 	picture = GFX_evt_melee
# 	border = GFX_event_long_frame_war
#
# 	is_triggered_only = yes
#
# 	immediate = {
# 		if = {
# 			limit = { has_nickname = no }
# 			give_nickname = nick_the_headless
# 		}
#
# 		if = {
# 			limit = { multiplayer = yes }
#
# 			death = {
# 				death_reason = death_duel
# 				killer = FROM
# 			}
# 		}
# 	}
#
# 	option = {
# 		name = EVTOPTA_WOL_11012
#
# 		if = {
# 			limit = { has_nickname = no }
#
# 			tooltip = {
# 				give_nickname = nick_the_headless
# 			}
# 		}
#
# 		if = {
# 			limit = { multiplayer = no }
#
# 			death = {
# 				death_reason = death_duel
# 				killer = FROM
# 			}
# 		}
# 	}
# }
#
# # Gain rival
# character_event = {
# 	id = WoL.11013
# 	desc = EVTDESC_WOL_11013
# 	picture = GFX_evt_melee
# 	border = GFX_event_normal_frame_war
#
# 	is_triggered_only = yes
#
# 	trigger = {
# 		NOT = { is_rival = FROMFROM }
# 	}
#
# 	option = {
# 		name = EVTOPTA_WOL_11013
#
# 		add_rival = FROMFROM
#
# 		FROMFROM = {
# 			character_event = { id = WoL.11014 }
# 		}
# 	}
#
# 	option = {
# 		name = EVTOPTB_WOL_11013
#
# 		ai_chance = { factor = 0 }
# 	}
# }
#
# # Gain rival notification
# character_event = {
# 	id = WoL.11014
# 	desc = EVTDESC_WOL_11014
# 	picture = GFX_evt_melee
# 	border = GFX_event_normal_frame_war
#
# 	is_triggered_only = yes
#
# 	option = {
# 		name = EVTOPTA_WOL_11014
#
# 		trigger = { num_of_rivals < 3 }
#
# 		add_rival = FROM
# 	}
#
# 	option = {
# 		name = EVTOPTB_WOL_11014
#
# 		trigger = { num_of_rivals >= 3 }
#
# 		add_rival = FROM
# 	}
# }

############### Minor events

### Random event list
character_event = {
	id = WoL.11100

	hide_window = yes
	is_triggered_only = yes # on_focus_pulse, random_events, war_tombola

	only_playable = yes
	min_age = 16
	only_capable = yes
	prisoner = no

	trigger = {
		has_focus = focus_war
		NOT = { trait = infirm }
		in_command_trigger = no
		is_inaccessible_trigger = no
	}

	immediate = {
		random_list = {
			30 = {
				trigger = {
					NOT = { has_character_modifier = run_training_timer }
				}

				character_event = { id = WoL.11101 } # Running
			}

			30 = {
				trigger = {
					NOT = { trait = slothful }

					any_courtier = {
						trait = slothful
						prisoner = no
					}
				}

				character_event = { id = WoL.11102 } # Slothful courtier
			}

			30 = {
				trigger = {
					NOT = { has_character_modifier = spear_throwing_timer }
				}

				character_event = { id = WoL.11103 } # Spear-throwing
			}

			30 = {
				trigger = {
					NOT = {
						any_friend = {
							has_character_flag = sparring_partner
						}
					}
				}

				character_event = { id = WoL.11110 } # Sparring-partner
			}

			30 = {
				trigger = {
					has_character_flag = sparring_partner

					any_friend = {
						has_character_flag = sparring_partner
					}
				}

				random_friend = {
					limit = { has_character_flag = sparring_partner }
					save_event_target_as = sparring_partner
				}

				character_event = { id = WoL.11111 } # Sparring success
			}

			30 = {
				trigger = {
					has_character_flag = sparring_partner

					any_friend = {
						has_character_flag = sparring_partner
					}
				}

				random_friend = {
					limit = { has_character_flag = sparring_partner }
					save_event_target_as = sparring_partner
				}

				character_event = { id = WoL.11112 } # Sparring accident
			}

			30 = {
				trigger = {
					NOT = { has_character_modifier = wargame_timer }
				}

				character_event = { id = WoL.11115 } # Wargames
			}
		}
	}
}

# Start running
character_event = {
	id = WoL.11101
	desc = EVTDESC_WOL_11101
	picture = GFX_evt_bandits
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WOL_11101

		custom_tooltip = {
			text = EVTTOOLTIPWOLWARPROGRESS

			add_character_modifier = {
				name = run_training_timer
				years = 5
				hidden = yes
			}

			character_event = {
				id = WoL.11200
				days = 7
			}
		}
	}
}

# ROOT upset about slothful courtier # not possible if ROOT is slothful
character_event = {
	id = WoL.11102
	desc = EVTDESC_WOL_11102
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	immediate = {
		random_courtier = {
			limit = {
				trait = slothful
				is_adult = yes
				is_incapable = no
				prisoner = no
				ai = yes

				NOR = {
					character = ROOT
					trait = infirm
				}
			}

			save_event_target_as = slothful_courtier
		}
	}

	option = {
		name = EVTOPTA_WOL_11102

		event_target:slothful_courtier = {
			show_scope_change = no

			random_list = {
				50 = { remove_trait_slothful_effect = yes }

				30 = {
					opinion = {
						name = opinion_lost_respect
						who = ROOT
						years = 3
					}
				}

				10 = { add_trait_stressed_effect = yes }
			}
		}
	}

	option = {
		name = EVTOPTB_WOL_11102

		random = {
			chance = 20
			add_trait_stressed_effect = yes
		}
	}
}

# Arrange a small spear-throwing contest
character_event = {
	id = WoL.11103
	desc = EVTDESC_WOL_11103
	border = GFX_event_normal_frame_war

	picture = {
		picture = GFX_evt_daughter_asking_mother
		trigger = { has_religion_feature = religion_matriarchal }
	}
	picture = {
		picture = GFX_evt_son_asking_father
		trigger = {
			NOT = { has_religion_feature = religion_matriarchal }
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WOL_11103

		any_courtier = {
			show_scope_change = no

			limit = {
				is_female = no
				is_adult = yes
				is_incapable = no
				prisoner = no

				NOR = {
					trait = infirm
					character = ROOT
					is_rival = ROOT
				}
			}

			opinion = {
				name = opinion_held_contest
				who = ROOT
				months = 6
			}
		}

		hidden_effect = {
			add_character_modifier = {
				name = spear_throwing_timer
				years = 5
				hidden = yes
			}

			random_list = {
				50 = { character_event = { id = WoL.11104 days = 5 } }
				50 = { character_event = { id = WoL.11105 days = 5 } }
			}
		}
	}

	option = {
		name = EVTOPTB_WOL_11103
	}
}

# Courtier maimed while measuring spear throws
character_event = {
	id = WoL.11104
	desc = EVTDESC_WOL_11104
	border = GFX_event_normal_frame_war

	picture = {
		picture = GFX_evt_daughter_asking_mother
		trigger = { has_religion_feature = religion_matriarchal }
	}
	picture = {
		picture = GFX_evt_son_asking_father
		trigger = {
			NOT = { has_religion_feature = religion_matriarchal }
		}
	}

	is_triggered_only = yes

	immediate = {
		random_courtier = {
			limit = {
				ai = yes
				is_adult = yes
				is_female = no
				is_incapable = no
				prisoner = no

				NOR = {
					character = ROOT
					is_rival = ROOT
					trait = infirm
				}
			}

			save_event_target_as = portrait_target
		}
	}

	option = {
		name = EVTOPTA_WOL_11104

		event_target:portrait_target = {
			show_scope_change = no

			mangle_effect = yes
		}

		character_event = {
			id = WoL.11105
			days = 5
		}
	}
}

# Spear-throwing conclusion
character_event = {
	id = WoL.11105

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		random_list = {
			30 = { # win
				mult_modifier = {
					factor = 0.5
					trait = dwarf
				}

				character_event = { id = WoL.11107 }
			}

			60 = { # lose
				random_courtier = {
					limit = {
						is_adult = yes
						is_female = no
						is_incapable = no
						prisoner = no
						ai = yes

						NOR = {
							character = ROOT
							is_rival = ROOT
							trait = infirm
						}
					}

					save_event_target_as = winning_courtier
				}

				character_event = { id = WoL.11109 }
			}
		}
	}
}

# Win spear-throwing
character_event = {
	id = WoL.11107
	desc = EVTDESC_WOL_11107
	border = GFX_event_normal_frame_war

	picture = {
		picture = GFX_evt_daughter_asking_mother
		trigger = { has_religion_feature = religion_matriarchal }
	}
	picture = {
		picture = GFX_evt_son_asking_father
		trigger = {
			NOT = { has_religion_feature = religion_matriarchal }
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WOL_11107

		prestige = 50

		character_event = {
			id = WoL.11200
			days = 7
		}
	}
}

# Lose spear-throwing
character_event = {
	id = WoL.11109
	desc = EVTDESC_WOL_11109
	border = GFX_event_normal_frame_war

	picture = {
		picture = GFX_evt_daughter_asking_mother
		trigger = { has_religion_feature = religion_matriarchal }
	}
	picture = {
		picture = GFX_evt_son_asking_father
		trigger = {
			NOT = { has_religion_feature = religion_matriarchal }
		}
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WOL_11109

		event_target:winning_courtier = {
			show_scope_change = no

			prestige = 50
		}

		prestige = -5

		character_event = {
			id = WoL.11200
			days = 7
		}
	}
}

# Sparring partner
character_event = {
	id = WoL.11110
	desc = EVTDESC_WOL_11110
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WOL_11110

		random_realm_character = {
			show_scope_change = no

			limit = {
				practical_age < 50
				is_adult = yes
				is_female = no
				is_incapable = no
				ai = yes

				NOR = {
					is_friend = ROOT
					is_rival = ROOT
					trait = infirm
				}
			}

			add_friend = ROOT
			set_character_flag = sparring_partner
		}

		set_character_flag = sparring_partner
	}

	option = {
		name = EVTOPTB_WOL_11110
	}
}

# Sparring success
character_event = {
	id = WoL.11111
	desc = EVTDESC_WOL_11111
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WOL_11111

		add_character_modifier = {
			name = wol_duel_training
			years = 1
		}

		character_event = {
			id = WoL.11200
			days = 7
		}
	}
}

# Sparring accident
character_event = {
	id = WoL.11112
	desc = EVTDESC_WOL_11112
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	immediate = {
		random = {
			chance = 50
			set_character_flag = sparring_injured
		}
	}

	option = {
		name = EVTOPTA_WOL_11112

		trigger = { has_character_flag = sparring_injured }

		if = {
			limit = { is_maimed_trigger = no }
			add_trait_silently_wounded_effect = yes
		}

		clr_character_flag = sparring_injured
	}

	option = {
		name = EVTOPTA_WOL_11112

		trigger = {
			NOT = { has_character_flag = sparring_injured }
		}

		random_friend = {
			show_scope_change = no

			limit = { has_character_flag = sparring_partner }

			if = {
				limit = { is_maimed_trigger = no }
				add_trait_silently_wounded_effect = yes
			}
		}
	}
}

# Wargame start
character_event = {
	id = WoL.11115
	desc = EVTDESC_WOL_11115
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WOL_11115

		hidden_effect = {
			random_courtier_or_vassal = {
				limit = {
					ai = yes
					block_general_event_trigger = no
					NOT = { trait = infirm }
				}

				preferred_limit = {
					has_job_title = yes
					is_ruler = yes
				}

				preferred_limit = {
					has_job_title = yes
				}

				save_event_target_as = attacker
			}

			random_courtier_or_vassal = {
				limit = {
					ai = yes
					block_general_event_trigger = no

					NOR = {
						trait = infirm
						character = event_target:attacker
					}
				}

				preferred_limit = {
					has_job_title = yes
					is_ruler = yes
				}

				preferred_limit = {
					has_job_title = yes
				}

				save_event_target_as = defender
			}

			add_character_modifier = {
				name = wargame_timer
				years = 3
				hidden = yes
			}

			if = {
				limit = {
					event_target:attacker = { always = yes }
					event_target:defender = { always = yes }
				}

				character_event = {
					id = WoL.11118
					days = 3
				}
			}
			else = {
				character_event = {
					id = WoL.11117
					days = 3
				}
			}
		}
	}

	option = {
		name = EVTOPTB_WOL_11115
	}
}

# Nobody wants to play
character_event = {
	id = WoL.11117
	desc = EVTDESC_WOL_11117
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WOL_11117

		remove_character_modifier = wargame_timer
	}
}

# Declare players
character_event = {
	id = WoL.11118
	desc = EVTDESC_WOL_11118
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WOL_11118

		show_portrait = event_target:attacker
		show_portrait = event_target:defender

		hidden_effect = {
			random_list = {
				50 = { character_event = { id = WoL.11120 days = 3 } }
				50 = { character_event = { id = WoL.11130 days = 3 } }
			}
		}
	}
}

character_event = {
	id = WoL.11120
	desc = EVTDESC_WOL_11120
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WOL_11120

		hidden_effect = {
			random_list = {
				50 = { character_event = { id = WoL.11121 days = 3 } }
				50 = { character_event = { id = WoL.11122 days = 3 } }
			}
		}
	}

	option = {
		name = EVTOPTB_WOL_11120

		hidden_effect = {
			random_list = {
				50 = { character_event = { id = WoL.11123 days = 3 } }
				50 = { character_event = { id = WoL.11124 days = 3 } }
			}
		}
	}
}

character_event = {
	id = WoL.11121
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_WOL_11121_GOOD
		trigger = { has_character_flag = wargame_good_advice }
	}
	desc = {
		text = EVTDESC_WOL_11121_BAD
		trigger = {
			NOT = { has_character_flag = wargame_good_advice }
		}
	}

	is_triggered_only = yes

	immediate = {
		random_list = {
			50 = {
				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 9 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 12 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 15 }
				}

				mult_modifier = {
					factor = 2
					event_target:defender = { trait = strategist }
				}

				set_character_flag = wargame_good_advice
			}

			50 = { }
		}
	}

	option = {
		name = EVTOPTA_WOL_11121

		if = {
			limit = { has_character_flag = wargame_good_advice }

			reverse_opinion = {
				name = opinion_upset
				who = event_target:defender
				years = 1
			}
		}

		set_character_flag = wargame_loss8
	}

	option = {
		name = EVTOPTB_WOL_11121

		if = {
			limit = {
				NOT = { has_character_flag = wargame_good_advice }
			}

			reverse_opinion = {
				name = opinion_upset
				who = event_target:defender
				years = 1
			}
		}

		set_character_flag = wargame_win4
	}

	option = {
		name = EVTOPTC_WOL_11121

		reverse_opinion = {
			name = opinion_upset
			who = event_target:defender
			years = 1
		}

		set_character_flag = wargame_loss8
	}

	after = {
		character_event = {
			id = WoL.11140
			days = 3
		}
	}
}

character_event = {
	id = WoL.11122
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_WOL_11122_GOOD
		trigger = { has_character_flag = wargame_good_advice }
	}
	desc = {
		text = EVTDESC_WOL_11122_BAD
		trigger = {
			NOT = { has_character_flag = wargame_good_advice }
		}
	}

	is_triggered_only = yes

	immediate = {
		random_list = {
			50 = {
				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 9 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 12 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 15 }
				}

				mult_modifier = {
					factor = 2
					event_target:defender = { trait = strategist }
				}

				set_character_flag = wargame_good_advice
			}

			50 = { }
		}
	}

	option = {
		name = EVTOPTA_WOL_11122

		if = {
			limit = {
				NOT = { has_character_flag = wargame_good_advice }
			}

			reverse_opinion = {
				name = opinion_upset
				who = event_target:defender
				years = 1
			}
		}

		set_character_flag = wargame_win6
	}

	option = {
		name = EVTOPTB_WOL_11122

		reverse_opinion = {
			name = opinion_upset
			who = event_target:defender
			years = 1
		}

		set_character_flag = wargame_loss7
	}

	option = {
		name = EVTOPTC_WOL_11122

		if = {
			limit = { has_character_flag = wargame_good_advice }

			reverse_opinion = {
				name = opinion_upset
				who = event_target:defender
				months = 12
			}
		}

		set_character_flag = wargame_loss7
	}

	after = {
		character_event = {
			id = WoL.11140
			days = 3
		}
	}
}

character_event = {
	id = WoL.11123
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_WOL_11123_GOOD
		trigger = { has_character_flag = wargame_good_advice }
	}
	desc = {
		text = EVTDESC_WOL_11123_BAD
		trigger = {
			NOT = { has_character_flag = wargame_good_advice }
		}
	}

	is_triggered_only = yes

	immediate = {
		random_list = {
			50 = {
				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 9 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 12 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 15 }
				}

				mult_modifier = {
					factor = 2
					event_target:defender = { trait = strategist }
				}

				set_character_flag = wargame_good_advice
			}

			50 = { }
		}
	}

	option = {
		name = EVTOPTA_WOL_11123

		reverse_opinion = {
			name = opinion_upset
			who = event_target:defender
			years = 1
		}

		set_character_flag = wargame_loss6
	}

	option = {
		name = EVTOPTB_WOL_11123

		if = {
			limit = { has_character_flag = wargame_good_advice }

			reverse_opinion = {
				name = opinion_upset
				who = event_target:defender
				years = 1
			}
		}

		set_character_flag = wargame_loss6
	}

	option = {
		name = EVTOPTC_WOL_11123

		if = {
			limit = {
				NOT = { has_character_flag = wargame_good_advice }
			}

			reverse_opinion = {
				name = opinion_upset
				who = event_target:defender
				years = 1
			}
		}

		set_character_flag = wargame_win5
	}

	after = {
		character_event = {
			id = WoL.11140
			days = 3
		}
	}
}

character_event = {
	id = WoL.11124
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_WOL_11124_GOOD
		trigger = { has_character_flag = wargame_good_advice }
	}
	desc = {
		text = EVTDESC_WOL_11124_BAD
		trigger = {
			NOT = { has_character_flag = wargame_good_advice }
		}
	}

	is_triggered_only = yes

	immediate = {
		random_list = {
			50 = {
				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 9 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 12 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 15 }
				}

				mult_modifier = {
					factor = 2
					event_target:defender = { trait = strategist }
				}

				set_character_flag = wargame_good_advice
			}

			50 = { }
		}
	}

	option = {
		name = EVTOPTA_WOL_11124

		if = {
			limit = {
				NOT = { has_character_flag = wargame_good_advice }
			}

			reverse_opinion = {
				name = opinion_upset
				who = event_target:defender
				years = 1
			}
		}

		set_character_flag = wargame_win4
	}

	option = {
		name = EVTOPTB_WOL_11124

		if = {
			limit = { has_character_flag = wargame_good_advice }

			reverse_opinion = {
				name = opinion_upset
				who = event_target:defender
				years = 1
			}
		}

		set_character_flag = wargame_loss1
	}

	option = {
		name = EVTOPTC_WOL_11124

		reverse_opinion = {
			name = opinion_upset
			who = event_target:defender
			years = 1
		}

		set_character_flag = wargame_loss1
	}

	after = {
		character_event = {
			id = WoL.11140
			days = 3
		}
	}
}

character_event = {
	id = WoL.11130
	desc = EVTDESC_WOL_11130
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WOL_11130

		hidden_effect = {
			random_list = {
				50 = { character_event = { id = WoL.11131 days = 3 } }
				50 = { character_event = { id = WoL.11132 days = 3 } }
			}
		}
	}

	option = {
		name = EVTOPTB_WOL_11130

		hidden_effect = {
			random_list = {
				50 = { character_event = { id = WoL.11133 days = 3 } }
				50 = { character_event = { id = WoL.11134 days = 3 } }
			}
		}
	}
}

character_event = {
	id = WoL.11131
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_WOL_11131_GOOD
		trigger = { has_character_flag = wargame_good_advice }
	}
	desc = {
		text = EVTDESC_WOL_11131_BAD
		trigger = {
			NOT = { has_character_flag = wargame_good_advice }
		}
	}

	is_triggered_only = yes

	immediate = {
		random_list = {
			50 = {
				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 9 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 12 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 15 }
				}

				mult_modifier = {
					factor = 2
					event_target:defender = { trait = strategist}
				}

				set_character_flag = wargame_good_advice
			}

			50 = { }
		}
	}

	option = {
		name = EVTOPTA_WOL_11131

		reverse_opinion = {
			name = opinion_upset
			who = event_target:defender
			years = 1
		}

		set_character_flag = wargame_loss5
	}

	option = {
		name = EVTOPTB_WOL_11131

		if = {
			limit = { has_character_flag = wargame_good_advice }

			reverse_opinion = {
				name = opinion_upset
				who = event_target:defender
				years = 1
			}
		}

		set_character_flag = wargame_loss5
	}

	option = {
		name = EVTOPTC_WOL_11131

		if = {
			limit = {
				NOT = { has_character_flag = wargame_good_advice }
			}

			reverse_opinion = {
				name = opinion_upset
				who = event_target:defender
				years = 1
			}
		}

		set_character_flag = wargame_win3
	}

	after = {
		character_event = {
			id = WoL.11140
			days = 3
		}
	}
}

character_event = {
	id = WoL.11132
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_WOL_11132_GOOD
		trigger = { has_character_flag = wargame_good_advice }
	}
	desc = {
		text = EVTDESC_WOL_11132_BAD
		trigger = {
			NOT = { has_character_flag = wargame_good_advice }
		}
	}

	is_triggered_only = yes

	immediate = {
		random_list = {
			50 = {
				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 9 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 12 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 15 }
				}

				mult_modifier = {
					factor = 2
					event_target:defender = { trait = strategist }
				}

				set_character_flag = wargame_good_advice
			}

			50 = { }
		}
	}

	option = {
		name = EVTOPTA_WOL_11132

		if = {
			limit = {
				NOT = { has_character_flag = wargame_good_advice }
			}

			reverse_opinion = {
				name = opinion_upset
				who = event_target:defender
				years = 1
			}
		}

		set_character_flag = wargame_win2
	}

	option = {
		name = EVTOPTB_WOL_11132

		reverse_opinion = {
			name = opinion_upset
			who = event_target:defender
			years = 1
		}

		set_character_flag = wargame_loss4
	}

	option = {
		name = EVTOPTC_WOL_11132

		if = {
			limit = { has_character_flag = wargame_good_advice }

			reverse_opinion = {
				name = opinion_upset
				who = event_target:defender
				years = 1
			}
		}

		set_character_flag = wargame_loss4
	}

	after = {
		character_event = {
			id = WoL.11140
			days = 3
		}
	}
}

character_event = {
	id = WoL.11133
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_WOL_11133_GOOD
		trigger = { has_character_flag = wargame_good_advice }
	}
	desc = {
		text = EVTDESC_WOL_11133_BAD
		trigger = {
			NOT = { has_character_flag = wargame_good_advice }
		}
	}

	is_triggered_only = yes

	immediate = {
		random_list = {
			50 = {
				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 9 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 12 }
				}

				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 15 }
				}

				mult_modifier = {
					factor = 2
					event_target:defender = { trait = strategist }
				}

				set_character_flag = wargame_good_advice
			}

			50 = { }
		}
	}

	option = {
		name = EVTOPTA_WOL_11133

		reverse_opinion = {
			name = opinion_upset
			who = event_target:defender
			years = 1
		}

		set_character_flag = wargame_loss3
	}

	option = {
		name = EVTOPTB_WOL_11133

		if = {
			limit = { has_character_flag = wargame_good_advice }

			reverse_opinion = {
				name = opinion_upset
				who = event_target:defender
				years = 1
			}
		}

		set_character_flag = wargame_loss3
	}

	option = {
		name = EVTOPTC_WOL_11133

		if = {
			limit = {
				NOT = { has_character_flag = wargame_good_advice }
			}

			reverse_opinion = {
				name = opinion_upset
				who = event_target:defender
				years = 1
			}
		}

		set_character_flag = wargame_win1
	}

	after = {
		character_event = {
			id = WoL.11140
			days = 3
		}
	}
}

character_event = {
	id = WoL.11134
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_WOL_11134_GOOD
		trigger = { has_character_flag = wargame_good_advice }
	}
	desc = {
		text = EVTDESC_WOL_11134_BAD
		trigger = {
			NOT = { has_character_flag = wargame_good_advice }
		}
	}

	is_triggered_only = yes

	immediate = {
		random_list = {
			50 = {
				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 9 }
				}
				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 12 }
				}
				mult_modifier = {
					factor = 1.2
					event_target:defender = { martial >= 15 }
				}
				mult_modifier = {
					factor = 2
					event_target:defender = { trait = strategist }
				}

				set_character_flag = wargame_good_advice
			}

			50 = { }
		}
	}

	option = {
		name = EVTOPTA_WOL_11134

		reverse_opinion = {
			name = opinion_upset
			who = event_target:defender
			years = 1
		}

		set_character_flag = wargame_loss2
	}

	option = {
		name = EVTOPTB_WOL_11134

		if = {
			limit = {
				NOT = { has_character_flag = wargame_good_advice }
			}

			reverse_opinion = {
				name = opinion_upset
				who = event_target:defender
				years = 1
			}
		}

		set_character_flag = wargame_win1
	}

	option = {
		name = EVTOPTC_WOL_11134

		if = {
			limit = { has_character_flag = wargame_good_advice }

			reverse_opinion = {
				name = opinion_upset
				who = event_target:defender
				years = 1
			}
		}

		set_character_flag = wargame_loss2
	}

	after = {
		character_event = {
			id = WoL.11140
			days = 3
		}
	}
}

character_event = {
	id = WoL.11140
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_WOL_11140_WIN1
		trigger = { has_character_flag = wargame_win1 }
	}
	desc = {
		text = EVTDESC_WOL_11140_WIN2
		trigger = { has_character_flag = wargame_win2 }
	}
	desc = {
		text = EVTDESC_WOL_11140_WIN3
		trigger = { has_character_flag = wargame_win3 }
	}
	desc = {
		text = EVTDESC_WOL_11140_WIN4
		trigger = { has_character_flag = wargame_win4 }
	}
	desc = {
		text = EVTDESC_WOL_11140_WIN5
		trigger = { has_character_flag = wargame_win5 }
	}
	desc = {
		text = EVTDESC_WOL_11140_WIN6
		trigger = { has_character_flag = wargame_win6 }
	}
	desc = {
		text = EVTDESC_WOL_11140_LOSS1
		trigger = { has_character_flag = wargame_loss1 }
	}
	desc = {
		text = EVTDESC_WOL_11140_LOSS2
		trigger = { has_character_flag = wargame_loss2 }
	}
	desc = {
		text = EVTDESC_WOL_11140_LOSS3
		trigger = { has_character_flag = wargame_loss3 }
	}
	desc = {
		text = EVTDESC_WOL_11140_LOSS4
		trigger = { has_character_flag = wargame_loss4 }
	}
	desc = {
		text = EVTDESC_WOL_11140_LOSS5
		trigger = { has_character_flag = wargame_loss5 }
	}
	desc = {
		text = EVTDESC_WOL_11140_LOSS6
		trigger = { has_character_flag = wargame_loss6 }
	}
	desc = {
		text = EVTDESC_WOL_11140_LOSS7
		trigger = { has_character_flag = wargame_loss7 }
	}
	desc = {
		text = EVTDESC_WOL_11140_LOSS8
		trigger = { has_character_flag = wargame_loss8 }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WOL_11140

		trigger = {
			has_character_modifier = adept_of_strategy
			lifestyle_traits < 1

			OR = {
				has_character_flag = wargame_win1
				has_character_flag = wargame_win2
				has_character_flag = wargame_win3
				has_character_flag = wargame_win4
				has_character_flag = wargame_win5
				has_character_flag = wargame_win6
			}
		}

		add_trait = strategist
		prestige = 75

		hidden_effect = {
			remove_character_modifier = adept_of_strategy
		}
	}

	option = {
		name = EVTOPTB_WOL_11140

		trigger = {
			OR = {
				has_character_flag = wargame_win1
				has_character_flag = wargame_win2
				has_character_flag = wargame_win3
				has_character_flag = wargame_win4
				has_character_flag = wargame_win5
				has_character_flag = wargame_win6
			}
		}

		if = {
			limit = {
				NOT = { has_character_modifier = adept_of_strategy }
			}

			if = {
				limit = { has_character_modifier = student_of_strategy }

				hidden_effect = {
					remove_character_modifier = student_of_strategy
				}

				add_character_modifier = {
					name = adept_of_strategy
					duration = -1
				}
			}
			else = {
				add_character_modifier = {
					name = student_of_strategy
					duration = -1
				}
			}
		}

		prestige = 75
	}

	option = {
		name = EVTOPTB_WOL_11140

		trigger = {
			NOR = {
				trait = wroth
				has_character_flag = wargame_win1
				has_character_flag = wargame_win2
				has_character_flag = wargame_win3
				has_character_flag = wargame_win4
				has_character_flag = wargame_win5
				has_character_flag = wargame_win6
			}
		}

		prestige = -10

		event_target:attacker = {
			show_scope_change = no

			prestige = 100
		}
	}

	option = {
		name = EVTOPTD_WOL_11140
		tooltip_info = wroth

		trigger = {
			trait = wroth

			NOR = {
				has_character_flag = wargame_win1
				has_character_flag = wargame_win2
				has_character_flag = wargame_win3
				has_character_flag = wargame_win4
				has_character_flag = wargame_win5
				has_character_flag = wargame_win6
			}
		}

		prestige = -10

		event_target:attacker = {
			show_scope_change = no

			prestige = 100
		}
	}

	after = {
		clr_character_flag = wargame_win1
		clr_character_flag = wargame_win2
		clr_character_flag = wargame_win3
		clr_character_flag = wargame_win4
		clr_character_flag = wargame_win5
		clr_character_flag = wargame_win6
		clr_character_flag = wargame_loss1
		clr_character_flag = wargame_loss2
		clr_character_flag = wargame_loss3
		clr_character_flag = wargame_loss4
		clr_character_flag = wargame_loss5
		clr_character_flag = wargame_loss6
		clr_character_flag = wargame_loss7
		clr_character_flag = wargame_loss8
		clr_character_flag = wargame_good_advice
	}
}

### Success in war-focus (hidden)
character_event = {
	id = WoL.11200

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		random_list = {
			20 = {
				trigger = {
					NOR = {
						has_character_modifier = wol_great_warrior
						trait = duelist
						trait = strategist
					}
				}

				mult_modifier = {
					factor = 0.75
					has_character_modifier = wol_warrior
				}

				character_event = { id = WoL.11201 } # level up
			}

			10 = {
				trigger = {
					has_character_modifier = wol_great_warrior
					lifestyle_traits < 1
					NOT = { has_character_flag = denied_duelist_trait }
				}

				character_event = { id = WoL.11202 } # duelist
			}

			30 = {
				character_event = { id = WoL.11203 } # prestige
			}

			30 = {
				trigger = {
					NOT = { trait = wroth }
				}

				character_event = { id = WoL.11204 } # wroth
			}

			30 = {
				trigger = {
					NOT = { trait = brave }
				}

				character_event = { id = WoL.11205 } # brave
			}

			5 = {
				trigger = {
					is_strong_trigger = no
				}

				character_event = { id = WoL.11206 } # strong
			}
		}
	}
}

# Level up modifier
character_event = {
	id = WoL.11201
	desc = EVTDESC_WOL_11201
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = EVTOPTA_WOL_11201

		if = {
			limit = { has_character_modifier = wol_warrior }

			hidden_effect = {
				remove_character_modifier = wol_warrior
			}

			add_character_modifier = {
				name = wol_great_warrior
				duration = -1
			}
		}
		else = {
			add_character_modifier = {
				name = wol_warrior
				duration = -1
			}
		}
	}
}

# Gain duelist
character_event = {
	id = WoL.11202
	desc = EVTDESC_WOL_11202
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = EVTOPTA_WOL_11202

		hidden_effect = {
			remove_character_modifier = wol_great_warrior
		}

		add_trait = duelist
	}

	option = {
		name = EVTOPTB_WOL_11202

		prestige = 10
		set_character_flag = denied_duelist_trait
	}
}

# Gain prestige
character_event = {
	id = WoL.11203
	desc = EVTDESC_WOL_11203
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = EVTOPTA_WOL_11203

		prestige = 100
	}
}

# Gain Wroth / lose patient
character_event = {
	id = WoL.11204
	desc = EVTDESC_WOL_11204
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = EVTOPTA_WOL_11204

		if = {
			limit = { trait = patient }
			remove_trait = patient
		}
		else = {
			add_trait = wroth
		}
	}
}

# Gain Brave / lose coward
character_event = {
	id = WoL.11205
	desc = EVTDESC_WOL_11205
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = EVTOPTA_WOL_11205

		if = {
			limit = { trait = craven }
			remove_trait = craven
		}
		else = {
			add_trait = brave
		}
	}
}

# Gain strong
character_event = {
	id = WoL.11206
	picture = GFX_evt_melee
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESCA_WOL_11206
		trigger = { is_weak_trigger = no }
	}
	desc = {
		text = EVTDESCB_WOL_11206
		trigger = { is_weak_trigger = yes }
	}

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = EVTOPTA_WOL_11206

		trigger = { is_weak_trigger = no }

		add_trait = brawny
	}

	option = {
		name = EVTOPTB_WOL_11206

		trigger = { is_weak_trigger = yes }

		if = {
			limit = { trait = weak }
			remove_trait = weak
		}

		if = {
			limit = { trait = frail }
			remove_trait = frail
		}
	}
}

#######################################
# WAR FOCUS PULSE EVENTS
# by Henrik Fåhraeus
#######################################

# Martial Education improved
character_event = {
	id = WoL.11300
	desc = EVTDESC_WOL_11300
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	is_triggered_only = yes # on_focus_pulse, random_events

	only_capable = yes
	prisoner = no

	trigger = {
		has_focus = focus_war

		OR = {
			trait = misguided_warrior
			trait = tough_soldier
			trait = skilled_tactician
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 0.25
			trait = skilled_tactician
		}

		mult_modifier = {
			factor = 0.5
			trait = tough_soldier
		}

		mult_modifier = {
			factor = 0.1
			martial < 5
		}

		mult_modifier = {
			factor = 0.5
			martial < 8
		}

		mult_modifier = {
			factor = 2
			martial >= 12
		}

		mult_modifier = {
			factor = 2
			has_character_modifier = adept_of_strategy
		}

		mult_modifier = {
			factor = 3
			trait = strategist
		}
	}

	option = {
		name = EVTOPTA_WOL_11300

		trigger_switch = {
			on_trigger = trait

			misguided_warrior = {
				hidden_effect = { remove_trait = misguided_warrior }
				add_trait = tough_soldier
			}

			tough_soldier = {
				hidden_effect = { remove_trait = tough_soldier }
				add_trait = skilled_tactician
			}

			skilled_tactician = {
				hidden_effect = { remove_trait = skilled_tactician }
				add_trait = brilliant_strategist
			}
		}
	}
}

# Leader Trait Choice: Troop Types
character_event = {
	id = WoL.11301
	desc = EVTDESC_WOL_11301
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	is_triggered_only = yes # on_focus_pulse, random_events

	only_capable = yes
	prisoner = no

	trigger = {
		has_focus = focus_war
		can_have_more_leadership_traits = yes

		NAND = {
			trait = light_foot_leader
			trait = heavy_infantry_leader
			trait = cavalry_leader

			trigger_if = {
				limit = {
					OR = {
						culture_group = indo_aryan_group
						culture_group = dravidian_group

						any_demesne_province = {
							terrain = jungle
							owned_by = PREV
						}
					}
				}

				trait = war_elephant_leader
			}
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 1.25
			trait = misguided_warrior
		}

		mult_modifier = {
			factor = 1.5
			trait = tough_soldier
		}

		mult_modifier = {
			factor = 2
			trait = skilled_tactician
		}

		mult_modifier = {
			factor = 3
			trait = brilliant_strategist
		}

		mult_modifier = {
			factor = 0.1
			martial < 5
		}

		mult_modifier = {
			factor = 0.5
			martial < 8
		}

		mult_modifier = {
			factor = 2
			martial >= 12
		}

		mult_modifier = {
			factor = 2
			has_character_modifier = adept_of_strategy
		}

		mult_modifier = {
			factor = 3
			trait = strategist
		}

		mult_modifier = {
			factor = 0.25
			leader_traits >= 1
		}
	}

	option = {
		name = EVTOPTA_WOL_11301 # Light Infantry

		trigger = {
			NOT = { trait = light_foot_leader }
		}

		add_trait = light_foot_leader

		ai_chance = {
			factor = 100

			mult_modifier = {
				factor = 2
				is_tribal = yes
			}
		}
	}

	option = {
		name = EVTOPTB_WOL_11301 # Heavy Infantry

		trigger = {
			NOT = { trait = heavy_infantry_leader }
		}

		add_trait = heavy_infantry_leader

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTC_WOL_11301 # Cavalry

		trigger = {
			NOT = { trait = cavalry_leader }
		}

		add_trait = cavalry_leader

		ai_chance = {
			factor = 100

			mult_modifier = {
				factor = 50
				is_nomadic = yes
			}
		}
	}

	option = {
		name = EVTOPTD_WOL_11301 # Elephants

		trigger = {
			OR = {
				culture_group = indo_aryan_group
				culture_group = dravidian_group

				any_demesne_province = {
					terrain = jungle
					owned_by = PREV
				}
			}

			NOT = { trait = war_elephant_leader }
		}

		add_trait = war_elephant_leader

		ai_chance = { factor = 50 }
	}

	option = {
		name = EVTOPTE_WOL_11301 # Bad choices all...
	}
}

# Leader Trait Choice: Terrain
character_event = {
	id = WoL.11302
	desc = EVTDESC_WOL_11302
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	is_triggered_only = yes # on_focus_pulse, random_events

	only_capable = yes
	prisoner = no

	trigger = {
		has_focus = focus_war
		can_have_more_leadership_traits = yes

		NAND = {
			trait = flat_terrain_expert
			trait = rough_terrain_expert
			trait = mountain_expert

			trigger_if = {
				limit = {
					any_demesne_province = {
						terrain = desert
						owned_by = PREV
					}
				}

				trait = desert_expert
			}

			trigger_if = {
				limit = {
					OR = {
						culture_group = north_germanic
						culture_group = baltic
						culture_group = east_slavic
						culture_group = west_slavic
						culture_group = finno_ugric
					}
				}

				trait = winter_soldier
			}
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 1.25
			trait = misguided_warrior
		}

		mult_modifier = {
			factor = 1.5
			trait = tough_soldier
		}

		mult_modifier = {
			factor = 2
			trait = skilled_tactician
		}

		mult_modifier = {
			factor = 3
			trait = brilliant_strategist
		}

		mult_modifier = {
			factor = 0.1
			martial < 5
		}

		mult_modifier = {
			factor = 0.5
			martial < 8
		}

		mult_modifier = {
			factor = 2
			martial >= 12
		}

		mult_modifier = {
			factor = 2
			has_character_modifier = adept_of_strategy
		}

		mult_modifier = {
			factor = 3
			trait = strategist
		}

		mult_modifier = {
			factor = 0.25
			leader_traits >= 1
		}
	}

	option = {
		name = EVTOPTA_WOL_11302 # Flat Terrain

		trigger = {
			NOT = { trait = flat_terrain_expert }
		}

		add_trait = flat_terrain_expert

		ai_chance = {
			factor = 100

			mult_modifier = {
				factor = 50
				is_nomadic = yes
			}
		}
	}

	option = {
		name = EVTOPTB_WOL_11302 # Rough Terrain

		trigger = {
			NOT = { trait = rough_terrain_expert }
		}

		add_trait = rough_terrain_expert

		ai_chance = {
			factor = 100

			mult_modifier = {
				factor = 2

				OR = {
					is_tribal = yes
					culture_group = north_germanic
					culture_group = baltic
					culture_group = east_slavic
					culture_group = west_slavic
					culture_group = finno_ugric
				}
			}
		}
	}

	option = {
		name = EVTOPTC_WOL_11302 # Mountain Terrain

		trigger = {
			NOT = { trait = mountain_expert }
		}

		add_trait = mountain_expert

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTD_WOL_11302 # Desert Terrain

		trigger = {
			any_demesne_province = {
				terrain = desert
				owned_by = PREV
			}

			NOT = { trait = desert_expert }
		}

		add_trait = desert_expert

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTE_WOL_11302 # Winter Soldier

		trigger = {
			OR = {
				culture_group = north_germanic
				culture_group = baltic
				culture_group = east_slavic
				culture_group = west_slavic
				culture_group = finno_ugric
			}

			NOT = { trait = winter_soldier }
		}

		add_trait = winter_soldier

		ai_chance = { factor = 150 }
	}

	option = {
		name = EVTOPTE_WOL_11301 # Bad choices all...
	}
}

# Leader Trait Choice: Centre, Flank or Trickster
character_event = {
	id = WoL.11303
	desc = EVTDESC_WOL_11303
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	is_triggered_only = yes # on_focus_pulse, random_events

	only_capable = yes
	prisoner = no

	trigger = {
		has_focus = focus_war
		can_have_more_leadership_traits = yes

		NAND = {
			trait = direct_leader
			trait = flanker
			trait = battlefield_terrain_master
			trait = trickster
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 1.25
			trait = misguided_warrior
		}

		mult_modifier = {
			factor = 1.5
			trait = tough_soldier
		}

		mult_modifier = {
			factor = 2
			trait = skilled_tactician
		}

		mult_modifier = {
			factor = 3
			trait = brilliant_strategist
		}

		mult_modifier = {
			factor = 0.1
			martial < 5
		}

		mult_modifier = {
			factor = 0.5
			martial < 8
		}

		mult_modifier = {
			factor = 2
			martial >= 12
		}

		mult_modifier = {
			factor = 2
			has_character_modifier = adept_of_strategy
		}

		mult_modifier = {
			factor = 3
			trait = strategist
		}

		mult_modifier = {
			factor = 0.25
			leader_traits >= 1
		}
	}

	option = {
		name = EVTOPTA_WOL_11303 # Centre

		trigger = {
			NOT = { trait = direct_leader }
		}

		add_trait = direct_leader

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTB_WOL_11303 # Flanks

		trigger = {
			NOT = { trait = flanker }
		}

		add_trait = flanker

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTC_WOL_11303 # Narrow Flanks

		trigger = {
			NOT = { trait = battlefield_terrain_master }
		}

		add_trait = battlefield_terrain_master

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTD_WOL_11303 # Trickster

		trigger = {
			NOT = { trait = trickster }
		}

		add_trait = trickster

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTE_WOL_11301 # Bad choices all...
	}
}

# Leader Trait Choice: Inspiring Leader, Siege, Organizer, or Holy Warrior
character_event = {
	id = WoL.11304
	desc = EVTDESC_WOL_11304
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	is_triggered_only = yes # on_focus_pulse, random_events

	only_capable = yes
	prisoner = no

	trigger = {
		has_focus = focus_war
		can_have_more_leadership_traits = yes

		NAND = {
			trait = inspiring_leader
			trait = siege_leader
			trait = organizer

			trigger_if = {
				limit = { trait = zealous }
				trait = holy_warrior
			}
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 1.25
			trait = misguided_warrior
		}

		mult_modifier = {
			factor = 1.5
			trait = tough_soldier
		}

		mult_modifier = {
			factor = 2
			trait = skilled_tactician
		}

		mult_modifier = {
			factor = 3
			trait = brilliant_strategist
		}

		mult_modifier = {
			factor = 0.1
			martial < 5
		}

		mult_modifier = {
			factor = 0.5
			martial < 8
		}

		mult_modifier = {
			factor = 2
			martial >= 12
		}

		mult_modifier = {
			factor = 2
			has_character_modifier = adept_of_strategy
		}

		mult_modifier = {
			factor = 3
			trait = strategist
		}

		mult_modifier = {
			factor = 0.25
			leader_traits >= 1
		}
	}

	option = {
		name = EVTOPTA_WOL_11304 # Inpiring Leader

		trigger = {
			NOT = { trait = inspiring_leader }
		}

		add_trait = inspiring_leader

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTB_WOL_11304 # Sieges

		trigger = {
			NOT = { trait = siege_leader }
		}

		add_trait = siege_leader

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTC_WOL_11304 # Organizer

		trigger = {
			NOT = { trait = organizer }
		}

		add_trait = organizer

		ai_chance = { factor = 100 }
	}

	option = { # Holy Warrior
		name = {
			text = EVTOPTD_WOL_11304
			trigger = {
				NOT = { religion_group = muslim }
			}
		}
		name = {
			text = EVTOPTD_WOL_11304_MUSLIM
			trigger = { religion_group = muslim }
		}

		trigger = {
			trait = zealous
			NOT = { trait = holy_warrior }
		}

		add_trait = holy_warrior

		ai_chance = { factor = 1000 }
	}

	option = {
		name = EVTOPTE_WOL_11301 # Bad choices all...
	}
}

# Leader Trait Choice: Offense vs Defense
character_event = {
	id = WoL.11305
	desc = EVTDESC_WOL_11305
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	is_triggered_only = yes # on_focus_pulse, random_events

	only_capable = yes
	prisoner = no

	trigger = {
		has_focus = focus_war
		can_have_more_leadership_traits = yes

		NAND = {
			trait = aggressive_leader
			trait = defensive_leader
			trait = unyielding_leader
		}
	}

	weight_multiplier = {
		factor = 1

		mult_modifier = {
			factor = 1.25
			trait = misguided_warrior
		}

		mult_modifier = {
			factor = 1.5
			trait = tough_soldier
		}

		mult_modifier = {
			factor = 2
			trait = skilled_tactician
		}

		mult_modifier = {
			factor = 3
			trait = brilliant_strategist
		}

		mult_modifier = {
			factor = 0.1
			martial < 5
		}

		mult_modifier = {
			factor = 0.5
			martial < 8
		}

		mult_modifier = {
			factor = 2
			martial >= 12
		}

		mult_modifier = {
			factor = 2
			has_character_modifier = adept_of_strategy
		}

		mult_modifier = {
			factor = 3
			trait = strategist
		}

		mult_modifier = {
			factor = 0.25
			leader_traits >= 1
		}
	}

	option = {
		name = EVTOPTA_WOL_11305 # Offense

		trigger = {
			NOT = { trait = aggressive_leader }
		}

		add_trait = aggressive_leader

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTB_WOL_11305 # Defense

		trigger = {
			NOT = { trait = defensive_leader }
		}

		add_trait = defensive_leader

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTC_WOL_11305 # Unyielding

		trigger = {
			NOT = { trait = unyielding_leader }
		}

		add_trait = unyielding_leader

		ai_chance = { factor = 100 }
	}

	option = {
		name = EVTOPTE_WOL_11301 # Bad choices all...
	}
}

# Teach a leader trait to one of my Commanders
character_event = {
	id = WoL.11310
	desc = EVTDESC_WOL_11310
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	is_triggered_only = yes # on_focus_pulse, random_events

	only_capable = yes
	prisoner = no

	trigger = {
		has_focus = focus_war

		OR = {
			trait = light_foot_leader
			trait = heavy_infantry_leader
			trait = cavalry_leader
			trait = inspiring_leader
			trait = trickster
			trait = organizer
			trait = defensive_leader
			trait = direct_leader
			trait = flanker
			trait = aggressive_leader
			trait = siege_leader
			trait = unyielding_leader
			trait = battlefield_terrain_master
			trait = flat_terrain_expert
			trait = rough_terrain_expert
			trait = mountain_expert
			trait = desert_expert
			trait = holy_warrior
			trait = winter_soldier
			trait = war_elephant_leader
			trait = jungle_expert
		}

		any_courtier = {
			OR = {
				has_job_title = job_marshal
				has_minor_title = title_commander
			}

			can_have_more_leadership_traits = yes
			leader_traits < 1
			is_adult = yes
			is_incapable = no
			prisoner = no
		}
	}

	immediate = {
		random_courtier = {
			limit = {
				OR = {
					has_job_title = job_marshal
					has_minor_title = title_commander
				}

				leader_traits < 1
				can_have_more_leadership_traits = yes
				is_adult = yes
				is_incapable = no
				prisoner = no
			}

			save_event_target_as = my_student
		}
	}

	option = {
		name = EVTOPT_WOL_11310_LF

		trigger = { trait = light_foot_leader }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = light_foot_leader
			}

			set_character_flag = learn_light_foot_leader
		}
	}

	option = {
		name = EVTOPT_WOL_11310_HF

		trigger = { trait = heavy_infantry_leader }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = heavy_infantry_leader
			}

			set_character_flag = learn_heavy_infantry_leader
		}
	}

	option = {
		name = EVTOPT_WOL_11310_CAV

		trigger = { trait = cavalry_leader }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = cavalry_leader
			}

			set_character_flag = learn_cavalry_leader
		}
	}

	option = {
		name = EVTOPT_WOL_11310_INSP

		trigger = { trait = inspiring_leader }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = inspiring_leader
			}

			set_character_flag = learn_inspiring_leader
		}
	}

	option = {
		name = EVTOPT_WOL_11310_TRICK

		trigger = { trait = trickster }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = trickster
			}

			set_character_flag = learn_trickster
		}
	}

	option = {
		name = EVTOPT_WOL_11310_ORG

		trigger = { trait = organizer }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = organizer
			}

			set_character_flag = learn_organizer
		}
	}

	option = {
		name = EVTOPT_WOL_11310_DEF

		trigger = { trait = defensive_leader }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = defensive_leader
			}

			set_character_flag = learn_defensive_leader
		}
	}

	option = {
		name = EVTOPT_WOL_11310_CENTRE

		trigger = { trait = direct_leader }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = direct_leader
			}

			set_character_flag = learn_direct_leader
		}
	}

	option = {
		name = EVTOPT_WOL_11310_FLANK

		trigger = { trait = flanker }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = flanker
			}

			set_character_flag = learn_flanker
		}
	}

	option = {
		name = EVTOPT_WOL_11310_AGG

		trigger = { trait = aggressive_leader }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = aggressive_leader
			}

			set_character_flag = learn_aggressive_leader
		}
	}

	option = {
		name = EVTOPT_WOL_11310_SIEGE

		trigger = { trait = siege_leader }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = siege_leader
			}

			set_character_flag = learn_siege_leader
		}
	}

	option = {
		name = EVTOPT_WOL_11310_UN

		trigger = { trait = unyielding_leader }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = unyielding_leader
			}

			set_character_flag = learn_unyielding_leader
		}
	}

	option = {
		name = EVTOPT_WOL_11310_NF

		trigger = { trait = battlefield_terrain_master }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = battlefield_terrain_master
			}

			set_character_flag = learn_battlefield_terrain_master
		}
	}

	option = {
		name = EVTOPT_WOL_11310_FTL

		trigger = { trait = flat_terrain_expert }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = flat_terrain_expert
			}

			set_character_flag = learn_flat_terrain_expert
		}
	}

	option = {
		name = EVTOPT_WOL_11310_RTL

		trigger = { trait = rough_terrain_expert }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = rough_terrain_expert
			}

			set_character_flag = learn_rough_terrain_expert
		}
	}

	option = {
		name = EVTOPT_WOL_11310_MTL

		trigger = { trait = mountain_expert }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = mountain_expert
			}

			set_character_flag = learn_mountain_expert
		}
	}

	option = {
		name = EVTOPT_WOL_11310_DTL

		trigger = { trait = desert_expert }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = desert_expert
			}

			set_character_flag = learn_desert_expert
		}
	}

	option = {
		name = EVTOPT_WOL_11310_HW

		trigger = { trait = holy_warrior }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = holy_warrior
			}

			set_character_flag = learn_holy_warrior
		}
	}

	option = {
		name = EVTOPT_WOL_11310_WINTER

		trigger = { trait = winter_soldier }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = winter_soldier
			}

			set_character_flag = learn_winter_soldier
		}
	}

	option = {
		name = EVTOPT_WOL_11310_ELEPHANT

		trigger = { trait = war_elephant_leader }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = war_elephant_leader
			}

			set_character_flag = learn_war_elephant_leader
		}
	}

	option = {
		name = EVTOPT_WOL_11310_JUNGLE

		trigger = { trait = jungle_expert }

		event_target:my_student = {
			show_scope_change = no

			tooltip = {
				add_trait = jungle_expert
			}

			set_character_flag = learn_jungle_expert
		}
	}

	option = {
		name = EVTOPT_WOL_11310_NOPE

		set_character_flag = no_leadership_trait

		ai_chance = { factor = 0 }
	}

	after = {
		if = {
			limit = { has_character_flag = no_leadership_trait }
			clr_character_flag = no_leadership_trait
		}
		else = {
			event_target:my_student = {
				character_event = {
					id = WoL.11311
					days = 7
				}
			}
		}
	}
}

# Commander learns the leader trait
character_event = {
	id = WoL.11311
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	desc = {
		text = EVTDESC_WOL_11311
		trigger = { has_character_flag = learn_light_foot_leader }
	}
	desc = {
		text = EVTDESC_WOL_11312
		trigger = { has_character_flag = learn_heavy_infantry_leader }
	}
	desc = {
		text = EVTDESC_WOL_11313
		trigger = { has_character_flag = learn_cavalry_leader }
	}
	desc = {
		text = EVTDESC_WOL_11314
		trigger = { has_character_flag = learn_inspiring_leader }
	}
	desc = {
		text = EVTDESC_WOL_11315
		trigger = { has_character_flag = learn_trickster }
	}
	desc = {
		text = EVTDESC_WOL_11316
		trigger = { has_character_flag = learn_organizer }
	}
	desc = {
		text = EVTDESC_WOL_11317
		trigger = { has_character_flag = learn_defensive_leader }
	}
	desc = {
		text = EVTDESC_WOL_11318
		trigger = { has_character_flag = learn_direct_leader }
	}
	desc = {
		text = EVTDESC_WOL_11319
		trigger = { has_character_flag = learn_flanker }
	}
	desc = {
		text = EVTDESC_WOL_11320
		trigger = { has_character_flag = learn_aggressive_leader }
	}
	desc = {
		text = EVTDESC_WOL_11321
		trigger = { has_character_flag = learn_siege_leader }
	}
	desc = {
		text = EVTDESC_WOL_11322
		trigger = { has_character_flag = learn_unyielding_leader }
	}
	desc = {
		text = EVTDESC_WOL_11323
		trigger = { has_character_flag = learn_battlefield_terrain_master }
	}
	desc = {
		text = EVTDESC_WOL_11324
		trigger = { has_character_flag = learn_flat_terrain_expert }
	}
	desc = {
		text = EVTDESC_WOL_11325
		trigger = { has_character_flag = learn_rough_terrain_expert }
	}
	desc = {
		text = EVTDESC_WOL_11326
		trigger = { has_character_flag = learn_mountain_expert }
	}
	desc = {
		text = EVTDESC_WOL_11327
		trigger = { has_character_flag = learn_desert_expert }
	}
	desc = {
		text = EVTDESC_WOL_11328
		trigger = { has_character_flag = learn_holy_warrior }
	}
	desc = {
		text = EVTDESC_WOL_11329
		trigger = { has_character_flag = learn_winter_soldier }
	}
	desc = {
		text = EVTDESC_WOL_11330
		trigger = { has_character_flag = learn_war_elephant_leader }
	}
	desc = {
		text = EVTDESC_WOL_11331
		trigger = { has_character_flag = learn_jungle_expert }
	}

	is_triggered_only = yes

	option = {
		name = EVTOPTA_WOL_11311 # Accept

		trigger_switch = {
			on_trigger = has_character_flag

			learn_light_foot_leader          = { add_trait = light_foot_leader }
			learn_heavy_infantry_leader      = { add_trait = heavy_infantry_leader }
			learn_cavalry_leader             = { add_trait = cavalry_leader }
			learn_inspiring_leader           = { add_trait = inspiring_leader }
			learn_trickster                  = { add_trait = trickster }
			learn_organizer                  = { add_trait = organizer }
			learn_defensive_leader           = { add_trait = defensive_leader }
			learn_direct_leader              = { add_trait = direct_leader }
			learn_flanker                    = { add_trait = flanker }
			learn_aggressive_leader          = { add_trait = aggressive_leader }
			learn_siege_leader               = { add_trait = siege_leader }
			learn_unyielding_leader          = { add_trait = unyielding_leader }
			learn_battlefield_terrain_master = { add_trait = battlefield_terrain_master }
			learn_flat_terrain_expert        = { add_trait = flat_terrain_expert }
			learn_rough_terrain_expert       = { add_trait = rough_terrain_expert }
			learn_mountain_expert            = { add_trait = mountain_expert }
			learn_desert_expert              = { add_trait = desert_expert }
			learn_holy_warrior               = { add_trait = holy_warrior }
			learn_winter_soldier             = { add_trait = winter_soldier }
			learn_war_elephant_leader        = { add_trait = war_elephant_leader }
			learn_jungle_expert              = { add_trait = jungle_expert }
		}

		FROM = {
			character_event = { id = WoL.11340 }
		}

		ai_chance = {
			factor = 100

			trigger = {
				trigger_if = {
					limit = { has_character_flag = learn_holy_warrior }
					NOT = { trait = cynical }
				}
			}
		}
	}

	option = {
		name = EVTOPTB_WOL_11311 # Decline

		FROM = {
			character_event = { id = WoL.11341 }
		}

		ai_chance = {
			factor = 1

			trigger = { has_character_flag = learn_holy_warrior } # Can decline if cynical
		}
	}

	after = {
		clr_character_flag = learn_light_foot_leader
		clr_character_flag = learn_heavy_infantry_leader
		clr_character_flag = learn_cavalry_leader
		clr_character_flag = learn_inspiring_leader
		clr_character_flag = learn_trickster
		clr_character_flag = learn_organizer
		clr_character_flag = learn_defensive_leader
		clr_character_flag = learn_direct_leader
		clr_character_flag = learn_flanker
		clr_character_flag = learn_aggressive_leader
		clr_character_flag = learn_siege_leader
		clr_character_flag = learn_unyielding_leader
		clr_character_flag = learn_battlefield_terrain_master
		clr_character_flag = learn_flat_terrain_expert
		clr_character_flag = learn_rough_terrain_expert
		clr_character_flag = learn_mountain_expert
		clr_character_flag = learn_desert_expert
		clr_character_flag = learn_holy_warrior
		clr_character_flag = learn_winter_soldier
		clr_character_flag = learn_war_elephant_leader
		clr_character_flag = learn_jungle_expert
	}
}

# Commander accepts the lessons
character_event = {
	id = WoL.11340
	desc = EVTDESC_WOL_11340
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	ai = no

	option = {
		name = EXCELLENT
	}
}

# Commander declines the lessons
character_event = {
	id = WoL.11341
	desc = EVTDESC_WOL_11341
	picture = GFX_evt_war_planning
	border = GFX_event_normal_frame_war

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_WOL_11341
	}
}