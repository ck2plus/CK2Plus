###########################################
#                                         #
# RIP Seclusion Events           		  #
# ID RIP.12000-RIP.12099                  #
#                                         #
###########################################

# Written by Markus OlsÃ©n
# Written by David Ballantyne
# Written by Mathilda Bjarnehed
# Written by Milla Isaksson

namespace = RIP

# Shut the gates and go into seclusion, let the games begin
character_event = {
	id = RIP.12000
	desc = EVTDESC_RIP_12000
	picture = GFX_evt_suspicious_noble
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes # shut_the_gates, rip_various_decisions.txt

	ai = no

	option = {
		name = EVTOPTA_RIP_12000
	}
}

# Vassals informed of seclusion decision
character_event = {
	id = RIP.12001
	desc = EVTDESC_RIP_12001
	picture = GFX_evt_house_arrest_escape
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes # shut_the_gates, rip_various_decisions.txt

	only_rulers = yes
	only_capable = yes
	prisoner = no
	ai = yes # Not really an interesting event for player vassals

	immediate = {
		liege = {
			capital_holding = {
				save_event_target_as = gates_closed_target
			}
		}
	}

	# It's necessary
	option = {
		name = EVTOPTA_RIP_12001

		if = {
			limit = { trait = craven }

			opinion = {
				name = craven_pos
				who = FROM
				years = 5
			}
		}

		ai_chance = {
			factor = 40

			mult_modifier = {
				factor = 2
				trait = craven
			}

			mult_modifier = {
				factor = 2
				trait = cruel
			}

			mult_modifier = {
				factor = 2
				trait = shy
			}

			mult_modifier = {
				factor = 2
				trait = arbitrary
			}

			mult_modifier = {
				factor = 2
				trait = trusting
			}
		}
	}

	# Such cowardice!
	option = {
		name = EVTOPTB_RIP_12001

		opinion = {
			name = opinion_coward
			who = FROM
			years = 5
		}

		ai_chance = {
			factor = 40

			mult_modifier = {
				factor = 2
				trait = brave
			}

			mult_modifier = {
				factor = 2
				trait = kind
			}

			mult_modifier = {
				factor = 2
				trait = charitable
			}

			mult_modifier = {
				factor = 2
				trait = just
			}

			mult_modifier = {
				factor = 2
				trait = paranoid
			}
		}
	}

	option = { # Perhaps I should go into seclusion too...
		name = EVTOPTC_RIP_12001

		trigger = {
			is_landed = yes
			is_tribal = no
			is_nomadic = no
			is_inaccessible_trigger = no
			NOT = { has_character_modifier = recently_opened_gates }
		}

		# Achievement flag
		# CleanSlate: It's an ai only event...
		# if = {
		#	limit = {
		#		ai = no
		#		is_ironman = yes
		#	}
		#
		#	set_character_flag = achievement_no_solicitors
		# }

		if = {
			limit = { has_minor_title = title_commander }
			remove_title = title_commander
		}

		custom_tooltip = {
			text = shut_the_gates_info_tooltip
			set_character_flag = do_not_disturb
		}

		add_character_modifier = {
			name = in_seclusion
			duration = -1
		}

		if = { # If you are a councillor, stop working and return home
			limit = {
				is_voter = yes

				host = {
					NOT = { character = ROOT }
				}
			}

			force_host = ROOT
		}

		# character_event = { id = RIP.12000 }

		any_courtier = {
			limit = {
				vassal_of = ROOT
				prisoner = no
				NOT = { character = ROOT }
			}

			# Unlanded councillors stop working in order to go into seclusion with their liege
			# Unlanded non-councillors join their liege in seclusion
			if = {
				limit = { is_ruler = no }

				add_character_modifier = {
					name = in_seclusion
					duration = -1
				}
			}

			# Landed councillors return home while you, their liege, is in seclusion
			else_if = {
				limit = { is_voter = yes }
				force_host = THIS
			}
		}

		# Landed children being educated in your court are sent home, with the guardianship ending
		any_courtier = {
			limit = {
				has_guardian = yes
				is_landed = yes
				prisoner = no
				is_adult = no
			}

			remove_guardian = yes
		}

		any_vassal = {
			character_event = {
				id = RIP.12001
				days = 7
				random = 7
			}
		}

		# Notify employer that councillor is going into seclusion
		if = {
			limit = {
				is_voter = yes
				liege = { ai = no }
			}

			liege = {
				character_event = {
					id = RIP.12101
					days = 1
				}
			}
		}

		ai_chance = {
			factor = 20

			trigger = {
				OR = {
					capital_scope = { has_disease = yes }
					location = { has_disease = yes }
				}
			}

			mult_modifier = {
				factor = 0.1

				capital_scope = {
					OR = {
						disease = consumption
						disease = measles
					}
				}
			}

			mult_modifier = {
				factor = 0.5
				age >= 65
			}

			mult_modifier = {
				factor = 0.5
				trait = brave
			}

			mult_modifier = {
				factor = 1.5
				trait = depressed
			}

			mult_modifier = {
				factor = 1.5
				trait = stressed
			}

			mult_modifier = {
				factor = 2
				trait = craven
			}

			mult_modifier = {
				factor = 5
				trait = paranoid
			}

			mult_modifier = {
				factor = 10

				OR = {
					capital_scope = { disease = bubonic_plague }
					location = { disease = bubonic_plague }
				}
			}
		}
	}
}

# Master list of seclusion events
character_event = {
	id = RIP.12099

	is_triggered_only = yes
	hide_window = yes

	only_playable = yes

	trigger = { in_seclusion = yes }

	immediate = {
		random_list = {
			20 = {
				trigger = {
					location = { has_disease = yes }

					is_ill = no
					num_of_symptoms < 1

					OR = {
						has_character_flag = exposed_to_outside

						any_host_courtier = {
							in_seclusion = yes
							has_epidemic_disease_trigger = yes
						}
					}
				}

				mult_modifier = {
					factor = 1.5

					any_host_courtier = {
						in_seclusion = yes
						developing_epidemic_disease_trigger = yes
					}
				}

				give_epidemic_disease_effect = yes
			}

			80 = { }
		}

		random_list = {
			# Commoners pile corpses outside gates
			20 = {
				trigger = {
					location = { disease = bubonic_plague }
					host = { character = ROOT }
					NOT = { has_character_flag = seclusion_piling_corpses }
				}

				character_event = { id = RIP.12003 }
			}

			# Courtier has symptoms in seclusion
			100 = {
				trigger = {
					location = { has_disease = yes }
					host = { character = ROOT }

					any_courtier = {
						num_of_symptoms >= 1
						in_seclusion = yes
						prisoner = no
					}
				}

				character_event = { id = RIP.12004 }
			}

			# Lovers discovered in seclusion
			20 = {
				trigger = {
					host = { character = ROOT }

					any_courtier = {
						at_location = ROOT
						in_seclusion = yes
						ai = yes

						any_lover = {
							at_location = ROOT
							in_seclusion = yes
							ai = yes
							NOT = { character = ROOT }
						}
					}
				}

				character_event = { id = RIP.12005 }
			}

			# Other courtier in seclusion is kind of beautiful
			20 = {
				trigger = {
					is_adult = yes
					can_marry = yes
					is_consort = no
					has_lover = no

					NOR = {
						has_character_flag = seclusion_lazy_seduction
						trait = celibate
					}

					any_courtier = {
						in_seclusion = yes
						is_valid_romance_target = ROOT
						can_marry = yes
						at_location = ROOT
						is_consort = no
						has_lover = no

						reverse_opinion = {
							who = ROOT
							value >= 0
						}

						NOT = { trait = celibate }
					}
				}

				character_event = { id = RIP.12007 }
			}

			# Nightmares
			25 = {
				trigger = {
					capital_scope = { has_disease = yes }
					host = { character = ROOT }
					NOT = { has_character_flag = seclusion_nightmares }
				}

				character_event = { id = RIP.12011 }
			}

			# Gain a friend
			20 = {
				trigger = {
					NOT = { has_character_flag = seclusion_gained_friend }

					any_courtier = {
						at_location = ROOT
						in_seclusion = yes

						trigger_if = {
							limit = { is_adult = yes }
							ROOT = { is_adult = yes }
						}
						trigger_else = {
							age >= 6
							ROOT = { age >= 6}
						}

						NOR = {
							is_friend = ROOT
							is_rival = ROOT
						}

						opinion = {
							who = ROOT
							value >= 0
						}
					}
				}

				character_event = { id = RIP.12012 }
			}

			# Courtier has the plague
			100 = {
				trigger = {
					location = { disease = bubonic_plague }
					host = { character = ROOT }

					any_courtier = {
						trait = bubonic_plague
						in_seclusion = yes
						at_location = ROOT
						NOT = { is_friend = ROOT }
					}
				}

				character_event = { id = RIP.12013 }
			}

			# Child has a peasant lover outside of seclusion
			20 = {
				trigger = {
					NOT = { has_character_flag = seclusion_child_has_lover }

					any_child = {
						is_adult = yes
						at_location = ROOT
						in_seclusion = yes

						NOR = {
							trait = craven
							trait = celibate
						}
					}
				}

				character_event = { id = RIP.12032 }
			}

			# Food shortage event chain start
			25 = {
				trigger = {
					is_adult = yes
					host = { character = ROOT }

					NOR = {
						has_character_flag = seclusion_food_events
						has_character_flag = seclusion_events_on
					}
				}

				narrative_event = { id = RIP.11550 }
			}

			# Tunnel steward
			20 = {
				trigger = {
					is_adult = yes
					host = { character = ROOT }
					job_treasurer = { ai = yes }
					capital_holding = { holding_type = castle }

					NOR = {
						has_character_flag = seclusion_tunnel
						has_character_flag = seclusion_events_on
					}
				}

				character_event = { id = RIP.12050 }
			}

			# The Masque of the Red Death
			10 = {
				trigger = {
					ai = no
					war = no
					prisoner = no
					is_adult = yes

					any_realm_province = {
						disease = bubonic_plague
						held_under_PREV = yes
					}

					current_heir = {
						dynasty = ROOT
					}

					any_courtier = {
						in_seclusion = yes
						is_adult = yes
						prisoner = no
						is_incapable = no

						trigger_if = {
							limit = { has_vice_trigger = no }

							is_close_relative = ROOT
							is_pious_trigger = no
						}
					}

					NOR = {
						has_game_rule = {
							name = supernatural_events
							value = off
						}

						has_character_flag = masque_of_red_death
						has_character_flag = seclusion_events_on
						has_character_modifier = lucky_to_be_alive
						has_character_modifier = seizing_the_day
						has_character_modifier = savoring_the_end_days
						has_character_modifier = secluded_revelry
					}
				}

				narrative_event = { id = RIP.12070 }
			}

			40 = { }
		}

		if = {
			limit = {
				ai = no
				war = yes
				multiplayer = yes
			}

			repeat_event = {
				id = RIP.12099
				months = 40
				random = 1800
			}
		}
		else_if = {
			limit = {
				ai = no

				OR = {
					war = yes
					multiplayer = yes
				}
			}

			repeat_event = {
				id = RIP.12099
				months = 15
				random = 540
			}
		}
		else = {
			repeat_event = {
				id = RIP.12099
				months = 5
				random = 180
			}
		}
	}
}

# Notice food is low
narrative_event = {
	id = RIP.11550
	title = RIP.11550.t
	desc = RIP.11550.d
	picture = GFX_evt_castle_construction
	border = GFX_event_narrative_frame_religion

	is_triggered_only = yes

	immediate = {
		set_character_flag = seclusion_food_events
		set_character_flag = seclusion_events_on
	}

	option = {
		name = RIP.11550.a # Gardens provide for a time
		tooltip_info = gardener

		trigger = { trait = gardener }

		character_event = {
			id = RIP.11551
			days = 60
			random = 10
		}

		set_variable = {
			which = remaining_food
			value = 7
		}
	}

	option = {
		name = RIP.11550.b # This isn't good

		trigger = {
			NOT = { trait = gardener }
		}

		character_event = {
			id = RIP.11551
			days = 25
			random = 10
		}

		set_variable = {
			which = remaining_food
			value = 5
		}
	}
}

# Food is now a problem
character_event = {
	id = RIP.11551
	desc = RIP.11551.d
	picture = GFX_evt_castle_construction
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = { in_seclusion = yes }

	immediate = {
		set_character_flag = seclusion_food_shortage
	}

	option = {
		name = RIP.11551.a # Good rationing
		tooltip_info = stewardship

		trigger = { stewardship >= 15 }

		add_character_modifier = {
			name = tiny_food_shortage
			duration = -1
		}

		any_courtier = {
			show_scope_change = no

			limit = { in_seclusion = yes }

			add_character_modifier = {
				name = tiny_food_shortage
				duration = -1
			}
		}
	}

	option = {
		name = RIP.11551.b # Convince people to eat less
		tooltip_info = diplomacy

		trigger = { diplomacy >= 15 }

		add_character_modifier = {
			name = tiny_food_shortage
			duration = -1
		}

		any_courtier = {
			show_scope_change = no

			limit = { in_seclusion = yes }

			add_character_modifier = {
				name = tiny_food_shortage
				duration = -1
			}
		}
	}

	option = {
		name = RIP.11551.c # Gotta eat while you still can
		tooltip_info = gluttonous

		trigger = { trait = gluttonous }

		change_variable = {
			which = remaining_food
			value = -2
		}

		# Give everyone modifier with health penalty
		add_character_modifier = {
			name = greedy_food_shortage
			duration = -1
		}

		any_courtier = {
			show_scope_change = no

			limit = { in_seclusion = yes }

			add_character_modifier = {
				name = minor_food_shortage
				duration = -1
			}
		}
	}

	option = {
		name = RIP.11551.c # Gotta eat while you still can
		tooltip_info = hedonist

		trigger = {
			trait = hedonist
			NOT = { trait = gluttonous } # Duplicating prev option since we can only have 1 tooltip info
		}

		change_variable = {
			which = remaining_food
			value = -2
		}

		# Give everyone modifier with health penalty
		add_character_modifier = {
			name = greedy_food_shortage
			duration = -1
		}

		any_courtier = {
			show_scope_change = no

			limit = { in_seclusion = yes }

			add_character_modifier = {
				name = minor_food_shortage
				duration = -1
			}
		}
	}

	option = {
		name = RIP.11551.e # Average rationing

		trigger = {
			NOR = {
				trait = gluttonous
				trait = hedonist
			}
		}

		change_variable = {
			which = remaining_food
			value = -1
		}

		# Give everyone modifier with small health penalty
		add_character_modifier = {
			name = minor_food_shortage
			duration = -1
		}

		any_courtier = {
			show_scope_change = no

			limit = { in_seclusion = yes }

			add_character_modifier = {
				name = minor_food_shortage
				duration = -1
			}
		}
	}

	after = {
		character_event = {
			id = RIP.11558
			days = 25
			random = 10
		}
	}
}

# Rip Seclusion Food Shortage Tombola
character_event = {
	id = RIP.11558

	is_triggered_only = yes
	hide_window = yes

	has_character_flag = seclusion_food_shortage
	only_rulers = yes

	trigger = { in_seclusion = yes }

	immediate = {
		random_list = {
			2 = { } # Nothing

			3 = { # Eat rats?
				trigger = {
					NOT = { has_character_flag = seclusion_rats_eaten }

					trigger_if = {
						limit = { has_character_flag = seclusion_refuse_to_eat_rats }

						had_character_flag = {
							flag = seclusion_refuse_to_eat_rats
							months >= 6
						}
					}
				}

				character_event = { id = RIP.11552 }
			}

			2 = { # Rats eat your food
				trigger = {
					NOT = { has_character_flag = seclusion_rats_eaten }

					trigger_if = {
						limit = { has_character_flag = rats_ate_food }

						had_character_flag = {
							flag = rats_ate_food
							months >= 4
						}
					}
				}

				character_event = { id = RIP.11553 }
			}

			3 = { # Courtier ate your food
				trigger = {
					check_variable = {
						which = remaining_food
						value >= 1
					}

					# Check for gluttons or hedonists
					any_courtier = {
						OR = {
							trait = gluttonous
							trait = hedonist
						}

						in_seclusion = yes
						prisoner = no
						is_incapable = no
						NOT = { has_character_flag = stole_food }
					}
				}

				character_event = { id = RIP.11554 }
			}

			2 = { # Eat people
				trigger = {
					any_courtier = {
						in_seclusion = yes
						at_location = ROOT
						ai = yes

						NOR = {
							is_parent_of = ROOT
							is_child_of = ROOT
							is_married = ROOT
						}
					}

					trigger_if = {
						limit = { has_character_flag = seclusion_refuse_to_eat_fellow_man }

						had_character_flag = {
							flag = seclusion_refuse_to_eat_fellow_man
							months >= 6
						}
					}

					check_variable = {
						which = remaining_food
						value < 1
					}
				}

				character_event = { id = RIP.11555 }
			}

			3 = { # Out of food
				trigger = {
					NOT = { has_character_flag = seclusion_starving }

					check_variable = {
						which = remaining_food
						value < 1
					}
				}

				character_event = { id = RIP.11556 }
			}
		}

		repeat_event = {
			id = RIP.11558
			days = 25
			random = 10
		}
	}
}

# Eat rats?
character_event = {
	id = RIP.11552
	desc = RIP.11552.d
	picture = GFX_evt_castle_construction
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = RIP.11552.a # Yum

		set_character_flag = seclusion_rats_eaten
	}

	option = {
		name = RIP.11552.b # Don't eat

		trigger = {
			NOR = {
				trait = gluttonous
				trait = hedonist
			}
		}

		change_variable = {
			which = remaining_food
			value = -1
		}

		add_trait_fully_silently_proud_effect = yes
		set_character_flag = seclusion_refuse_to_eat_rats
	}
}

# Rats eat your food
character_event = {
	id = RIP.11553
	desc = RIP.11553.d
	picture = GFX_evt_castle_construction
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = CURSES

		change_variable = {
			which = remaining_food
			value = -1
		}

		set_character_flag = rats_ate_food
	}
}

# Courtier ate your food
character_event = {
	id = RIP.11554
	desc = RIP.11554.d
	picture = GFX_evt_castle_construction
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	immediate = {
		random_courtier = {
			limit = {
				OR = {
					trait = gluttonous
					trait = hedonist
				}

				in_seclusion = yes
			}

			remove_character_modifier = minor_food_shortage
			remove_character_modifier = normal_food_shortage

			add_character_modifier = {
				name = greedy_food_shortage
				duration = -1
			}

			save_event_target_as = target_greedy_courtier
			set_character_flag = stole_food
		}
	}

	option = {
		name = RIP.11554.a # Angry but keep them in

		change_variable = {
			which = remaining_food
			value = -1
		}

		opinion = {
			name = gluttonous_neg
			who = event_target:target_greedy_courtier
			years = 5
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 2
				trait = kind
			}

			mult_modifier = {
				factor = 2
				trait = charitable
			}

			mult_modifier = {
				factor = 2

				reverse_opinion = {
					who = ROOT
					value >= 50
				}
			}
		}
	}

	option = {
		name = EVTOPTB_RIP_13230 # Prison

		change_variable = {
			which = remaining_food
			value = -1
		}

		reverse_imprison = event_target:target_greedy_courtier

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 2
				trait = wroth
			}

			mult_modifier = {
				factor = 2
				trait = cruel
			}

			mult_modifier = {
				factor = 2

				reverse_opinion = {
					who = event_target:target_greedy_courtier
					value >= 10
				}
			}
		}
	}

	option = {
		name = RIP.11554.b # Expel them

		change_variable = {
			which = remaining_food
			value = -1
		}

		event_target:target_greedy_courtier = {
			show_scope_change = no

			reverse_opinion = {
				name = gluttonous_neg
				who = ROOT
				years = 5
			}

			remove_character_modifier = in_seclusion
			remove_character_modifier = greedy_food_shortage
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 2
				trait = wroth
			}

			mult_modifier = {
				factor = 2
				trait = cruel
			}

			mult_modifier = {
				factor = 2

				reverse_opinion = {
					who = event_target:target_greedy_courtier
					value < 10
				}
			}
		}
	}

	option = {
		name = RIP.11555.a # Cannibal option - eat them in turn?

		event_target:target_greedy_courtier = {
			show_scope_change = no

			tooltip = {
				death = {
					death_reason = death_execution_eaten_unknown
					killer = ROOT
				}
			}

			hidden_effect = {
				death = { death_reason = death_execution_eaten }

				if = {
					limit = {
						is_ironman = yes
						religion_openly_bon_or_reformed_trigger = yes
						ROOT = { ai = no }
					}

					ROOT = { set_character_flag = achievement_bon_appetit }
				}
			}
		}

		change_variable = {
			which = remaining_food
			value = 1
		}

		if = {
			limit = {
				NOT = { trait = cannibal }
			}

			add_trait = cannibal
		}

		ai_chance = {
			factor = 25

			trigger = {
				trait = cannibal

				NOR = {
					is_parent_of = ROOT
					is_child_of = ROOT
					is_married = ROOT
				}
			}
		}
	}
}

# Eat people
character_event = {
	id = RIP.11555
	desc = RIP.11555.d
	picture = GFX_evt_castle_construction
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = RIP.11555.a

		random_courtier = {
			limit = {
				in_seclusion = yes
				at_location = ROOT
				ai = yes

				NOR = {
					is_parent_of = ROOT
					is_child_of = ROOT
					is_married = ROOT
				}
			}

			tooltip = {
				death = {
					death_reason = death_execution_eaten
					killer = ROOT
				}
			}

			hidden_effect = {
				death = { death_reason = death_execution_eaten }
			}
		}

		change_variable = {
			which = remaining_food
			value = 1
		}

		if = {
			limit = {
				NOT = { trait = cannibal }
			}

			add_trait = cannibal
		}
	}

	option = {
		name = RIP.11555.b

		trigger = {
			NOR = {
				trait = gluttonous
				trait = hedonist
				trait = cannibal
			}
		}

		change_variable = {
			which = remaining_food
			value = -1
		}

		add_trait_fully_silently_temperate_effect = yes
		set_character_flag = seclusion_refuse_to_eat_fellow_man
	}
}

# Out of food
character_event = {
	id = RIP.11556
	picture = GFX_evt_castle_construction
	desc = RIP.11556.d
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = RIP.11556.a

		set_character_flag = seclusion_starving

		if = {
			limit = { has_character_modifier = tiny_food_shortage }
			remove_character_modifier = tiny_food_shortage
		}

		if = {
			limit = { has_character_modifier = minor_food_shortage }
			remove_character_modifier = minor_food_shortage
		}

		if = {
			limit = { has_character_modifier = normal_food_shortage }
			remove_character_modifier = normal_food_shortage
		}

		add_character_modifier = {
			name = starving_food_shortage
			duration = -1
		}

		hidden_effect = {
			any_courtier = {
				limit = { in_seclusion = yes }

				remove_character_modifier = tiny_food_shortage
				remove_character_modifier = minor_food_shortage
				remove_character_modifier = normal_food_shortage

				add_character_modifier = {
					name = starving_food_shortage
					duration = -1
				}
			}
		}
	}
}

# Recovery
character_event = {
	id = RIP.11557
	desc = RIP.11557.d
	picture = GFX_evt_castle_construction
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes # open_the_gates, rip_various_decisions.txt; RIP.12011
	notification = yes

	trigger = {
		OR = {
			has_character_modifier = tiny_food_shortage
			has_character_modifier = minor_food_shortage
			has_character_modifier = normal_food_shortage
			has_character_modifier = starving_food_shortage
			has_character_modifier = greedy_food_shortage
		}
	}

	immediate = {
		remove_character_modifier = tiny_food_shortage
		remove_character_modifier = minor_food_shortage
		remove_character_modifier = normal_food_shortage
		remove_character_modifier = starving_food_shortage
		remove_character_modifier = greedy_food_shortage
		clr_character_flag = seclusion_food_shortage
		clr_character_flag = seclusion_starving
	}

	option = {
		name = OK
	}
}

# Piling corpses
character_event = {
	id = RIP.12003
	desc = EVTDESC_RIP_12003
	picture = GFX_evt_castle_construction
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	immediate = {
		set_character_flag = seclusion_piling_corpses
	}

	option = { # Guards can clear them out
		name = EVTOPTA_RIP_12003

		custom_tooltip = { text = EVTOPTA_RIP_12003_TOOLTIP }
		set_character_flag = exposed_to_outside

		ai_chance = { factor = 30 }
	}

	option = { # We should all help clear out the dead
		name = EVTOPTB_RIP_12003
		tooltip_info = kind

		trigger = {
			trait = kind

			NOR = {
				trait = paranoid
				trait = craven
			}
		}

		any_courtier = {
			limit = { in_seclusion = yes }
			set_character_flag = exposed_to_outside
		}

		set_character_flag = exposed_to_outside
		piety = 100

		ai_chance = {
			factor = 20

			mult_modifier = {
				factor = 2
				trait = brave
			}

			mult_modifier = {
				factor = 2
				trait = charitable
			}

			mult_modifier = {
				factor = 0.5
				trait = wroth
			}

			mult_modifier = {
				factor = 0.5
				trait = cruel
			}
		}
	}

	option = { # Leave it as is
		name = EVTOPTC_RIP_12003

		any_courtier = {
			show_scope_change = no

			limit = { in_seclusion = yes }

			opinion = {
				name = opinion_disgusted
				who = ROOT
				years = 5
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 2
				trait = slothful
			}

			mult_modifier = {
				factor = 2
				trait = paranoid
			}

			mult_modifier = {
				factor = 2
				trait = craven
			}
		}
	}
}

# Showing symptoms in seclusion
character_event = {
	id = RIP.12004
	desc = EVTDESC_RIP_12004
	picture = GFX_evt_castle_construction
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	immediate = {
		random_courtier = {
			limit = {
				num_of_symptoms >= 1
				prisoner = no
				in_seclusion = yes
			}

			save_event_target_as = sick_courtier
		}
	}

	option = { # They have to go, leave seclusion
		name = EVTOPTA_RIP_12004

		hidden_effect = {
			if = {
				limit = {
					ai = no
					is_ironman = yes
				}

				event_target:sick_courtier = {
					if = {
						limit = {
							OR = {
								has_character_flag = got_bubonic_plague
								has_character_flag = manifest_bubonic_plague
								trait = bubonic_plague
							}
						}

						ROOT = { set_character_flag = achievement_close_call }
					}

					if = {
						limit = {
							NOT = { has_character_flag = got_bubonic_plague }
						}

						ROOT = { set_character_flag = achievement_an_honest_mistake }
					}
				}
			}
		}

		event_target:sick_courtier = {
			show_scope_change = no

			remove_character_modifier = in_seclusion

			opinion = {
				name = expelled_me_from_seclusion
				who = ROOT
				years = 2
			}
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 2
				trait = paranoid
			}

			mult_modifier = {
				factor = 2
				trait = craven
			}
		}
	}

	option = { # They can stay, in prison
		name = EVTOPTB_RIP_12004

		event_target:sick_courtier = {
			show_scope_change = no

			imprison = ROOT
			remove_character_modifier = in_seclusion
		}

		any_courtier = {
			show_scope_change = no

			limit = { in_seclusion = yes }

			ROOT = { tyrant_plus_1_effect = yes }
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 2
				trait = wroth
			}

			mult_modifier = {
				factor = 2
				trait = cruel
			}
		}
	}

	option = { # We shouldn't be worried
		name = EVTOPTC_RIP_12004

		trigger = {
			NOR = {
				trait = paranoid
				trait = craven
			}
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 2
				is_dumb_trigger = yes
			}

			mult_modifier = {
				factor = 2
				trait = brave
			}

			mult_modifier = {
				factor = 2
				trait = stubborn
			}
		}
	}

	option = { # Comfort courtier and hold them close
		name = EVTOPTD_RIP_12004

		trigger = {
			OR = {
				trait = lustful
				trait = kind
			}

			NOR = {
				is_friend = event_target:sick_courtier
				is_rival = event_target:sick_courtier
			}
		}

		add_friend = event_target:sick_courtier

		if = {
			limit = {
				event_target:sick_courtier = {
					developing_epidemic_disease_trigger = yes
				}
			}

			set_character_flag = exposed_to_outside
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 2
				is_dumb_trigger = yes
			}

			mult_modifier = {
				factor = 2
				trait = charitable
			}

			mult_modifier = {
				factor = 2
				trait = proud
			}


			mult_modifier = {
				factor = 2
				trait = brave
			}
		}
	}
}

# Lovers discovered in seclusion
character_event = {
	id = RIP.12005
	desc = EVTDESC_RIP_12005
	picture = GFX_evt_castle_construction
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	immediate = {
		random_courtier = {
			limit = {
				at_location = ROOT
				in_seclusion = yes
				ai = yes

				any_lover = {
					at_location = ROOT
					in_seclusion = yes
					ai = yes
					NOT = { character = ROOT }
				}
			}

			save_event_target_as = lover_one

			random_lover = {
				limit = {
					at_location = ROOT
					in_seclusion = yes
					ai = yes
					NOT = { character = ROOT }
				}

				save_event_target_as = lover_two
			}
		}
	}

	option = { # Stop lovers
		name = EVTOPTA_RIP_12005

		event_target:lover_one = {
			show_scope_change = no

			remove_lover = event_target:lover_two

			opinion = {
				name = opinion_angry
				who = ROOT
				years = 5
			}
		}

		reverse_opinion = {
			name = opinion_angry
			who = event_target:lover_two
			years = 5
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 2
				trait = wroth
			}

			mult_modifier = {
				factor = 2
				trait = cruel
			}

			mult_modifier = {
				factor = 2
				trait = celibate
			}
		}
	}

	option = { # Let them marry
		name = EVTOPTB_RIP_12005

		trigger = {
			event_target:lover_one = {
				can_marry = event_target:lover_two
			}
		}

		event_target:lover_one = {
			show_scope_change = no

			add_spouse = event_target:lover_two # TODO: Matrilinealy in some circumstances?
		}

		ai_chance = {
			factor = 25

			mult_modifier = {
				factor = 2
				trait = zealous
			}

			mult_modifier = {
				factor = 2
				trait = proud
			}

			mult_modifier = {
				factor = 2
				trait = chaste
			}
		}
	}

	option = { # It entertains me
		name = EVTOPTC_RIP_12005
		tooltip_info = lustful

		trigger = { trait = lustful }

		custom_tooltip = {
			text = EVTOPTC_RIP_12005_TOOLTIP

			random = {
				chance = 50

				character_event = {
					id = RIP.12006
					months = 2
				}
			}
		}

		ai_chance = { factor = 100 }
	}
}

# Lustful liege is rewarded
character_event = {
	id = RIP.12006
	picture = GFX_evt_castle_construction
	desc = EVTDESC_RIP_12006
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	trigger = {
		event_target:lover_one = {
			is_lover = event_target:lover_two
		}
	}

	option = { # Receive gratitude
		name = EXCELLENT

		add_favor = event_target:lover_one
		add_favor = event_target:lover_two

		reverse_opinion = {
			name = opinion_grateful
			who = event_target:lover_one
			years = 5
		}

		reverse_opinion = {
			name = opinion_grateful
			who = event_target:lover_two
			years = 5
		}
	}
}

# Other courtier in seclusion is kind of beautiful
character_event = {
	id = RIP.12007
	picture = GFX_evt_courtiers_talking
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_RIP_12007
		trigger = {
			NOT = { has_character_flag = seclusion_lazy_seduction_V2@event_target:target_courtier }
		}
	}
	desc = {
		text = EVTDESC_RIP_12007_sway_version
		trigger = { has_character_flag = seclusion_lazy_seduction_V2@event_target:target_courtier }
	}

	is_triggered_only = yes

	immediate = {
		set_character_flag = seclusion_lazy_seduction

		if = { # For Sway event-edge case...
			limit = { has_character_flag = seclusion_lazy_seduction_V2@persistent_event_target:sway_target }

			persistent_event_target:sway_target = {
				save_event_target_as = target_courtier
			}
		}
		else = {
			random_realm_character = {
				limit = {
					at_location = ROOT
					is_valid_romance_target = ROOT
					can_marry = yes
					is_adult = yes
					in_seclusion = yes
					is_married = no
					is_consort = no
					has_lover = no

					reverse_opinion = {
						who = ROOT
						value >= 0
					}

					NOT = { trait = celibate }
				}

				# For Sway events...
				preferred_limit = { character = persistent_event_target:sway_target }

				save_event_target_as = target_courtier
			}
		}
	}

	option = {
		name = EVTOPTA_RIP_12007 # Go for it

		event_target:target_courtier = {
			character_event = { id = RIP.12008 }
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 10
				trait = lustful
			}

			mult_modifier = {
				factor = 2
				trait = proud
			}

			mult_modifier = {
				factor = 2
				trait = brave
			}
		}
	}

	option = {
		name = EVTOPTB_RIP_12007 # Nah

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 10
				trait = craven
			}

			mult_modifier = {
				factor = 5
				trait = shy
			}
		}
	}
}

# Courtier coming on to other courtier
character_event = {
	id = RIP.12008
	desc = EVTDESC_RIP_12008
	picture = GFX_evt_whispers
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	option = {
		name = EVTOPTA_RIP_12008 # Have some fun

		add_lover = FROM

		FROM = {
			character_event = {
				id = RIP.12009
				days = 1
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 10
				trait = lustful
			}

			mult_modifier = {
				factor = 2
				trait = proud
			}

			mult_modifier = {
				factor = 2
				trait = brave
			}
		}
	}

	option = {
		name = EVTOPTB_RIP_12008 # Respectfully disagree

		FROM = {
			show_scope_change = no

			opinion = {
				name = opinion_declined_romance
				who = FROM
				years = 2
			}

			character_event = {
				id = RIP.12010
				days = 1
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 10
				trait = craven
			}

			mult_modifier = {
				factor = 5
				trait = shy
			}
		}
	}
}

# Lewd suggestion accepted
character_event = {
	id = RIP.12009
	picture = GFX_evt_lovers
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	desc = {
		text = EVTDESC_RIP_12009
		trigger = {
			NOT = { has_character_flag = seclusion_lazy_seduction_V2@event_target:target_courtier }
		}
	}
	desc = {
		text = EVTDESC_RIP_12009_sway_version
		trigger = { has_character_flag = seclusion_lazy_seduction_V2@event_target:target_courtier }
	}

	option = {
		name = EVTOPTA_RIP_12009

		tooltip = {
			add_lover = FROM
		}

		clr_character_flag = seclusion_lazy_seduction_V2@event_target:target_courtier
	}
}

# Lewd suggestion declined
character_event = {
	id = RIP.12010
	desc = EVTDESC_RIP_12010
	picture = GFX_evt_bad_news
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	ai = no

	option = {
		name = EVTOPTA_RIP_12010

		tooltip = {
			opinion = {
				name = opinion_declined_romance
				who = FROM
				years = 2
			}
		}
	}
}

# Nightmares
character_event = {
	id = RIP.12011
	picture = GFX_evt_shadow
	desc = EVTDESC_RIP_12011
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	immediate = {
		set_character_flag = seclusion_nightmares
	}

	# Open the gates
	option = {
		name = EVTOPTA_RIP_12011

		# This is a copy paste from the decision to open the gates
		remove_do_not_disturb_effect = yes
		clr_character_flag = exposed_to_outside
		clr_character_flag = seclusion_piling_corpses
		clr_character_flag = seclusion_lazy_seduction
		clr_character_flag = seclusion_nightmares
		clr_character_flag = seclusion_gained_friend
		clr_character_flag = seclusion_child_has_lover
		clr_character_flag = seclusion_tunnel
		clr_character_flag = seclusion_food_events

		custom_tooltip = {
			text = open_the_gates_info_tooltip

			hidden_effect = {
				clr_character_flag = seclusion_events_on
				remove_character_modifier = in_seclusion

				character_event = {
					id = RIP.11557 # Clears starvation modifiers
					days = 40
					random = 20
				}

				any_courtier = {
					clr_character_flag = seclusion_events_on
					remove_character_modifier = in_seclusion

					character_event = {
						id = RIP.11557 # Clears starvation modifiers
						days = 40
						random = 20
					}
				}
			}
		}

		if = {
			limit = { has_character_modifier = secluded_revelry }
			remove_character_modifier = secluded_revelry
		}

		if = {
			limit = { has_character_modifier = savoring_the_end_days }
			remove_character_modifier = savoring_the_end_days
		}

		add_character_modifier = {
			name = recently_opened_gates
			years = 1
		}

		ai_chance = {
			factor = 50

			trigger = {
				NOR = {
					trait = lunatic
					trait = stubborn
				}
			}

			mult_modifier = {
				factor = 0.5
				trait = craven
			}

			mult_modifier = {
				factor = 0.5
				trait = paranoid
			}

			mult_modifier = {
				factor = 0.5
				location = { disease = bubonic_plague }
			}

			mult_modifier = {
				factor = 0.5
				location = { disease = slow_fever }
			}

			mult_modifier = {
				factor = 0.5
				location = { disease = consumption }
			}

			mult_modifier = {
				factor = 0.5
				location = { disease = smallpox }
			}

			mult_modifier = {
				factor = 2
				trait = brave
			}

			mult_modifier = {
				factor = 2
				trait = charitable
			}

			mult_modifier = {
				factor = 2
				trait = kind
			}
		}
	}

	option = {
		name = EVTOPTB_RIP_12011

		custom_tooltip = { text = EVTOPTB_RIP_12011_TOOLTIP }

		if = {
			limit = { trait = depressed }
			prestige = -100
		}
		else_if = {
			limit = { trait = stressed }
			add_trait = depressed
		}
		else_if = {
			limit = { trait = craven }
			add_trait = stressed
		}
		else_if = {
			limit = {
				NOR = {
					trait = brave
					trait = berserker
				}
			}
			add_trait = craven
		}
		else_if = {
			limit = { trait = brave }
			remove_trait = brave
		}

		ai_chance = {
			factor = 50

			trigger = {
				NOR = {
					trait = lunatic
					trait = stubborn
				}
			}

			mult_modifier = {
				factor = 2
				trait = craven
			}

			mult_modifier = {
				factor = 2
				trait = paranoid
			}
		}
	}

	option = {
		name = EVTOPTC_RIP_12011
		tooltip_info = stubborn

		trigger = { trait = stubborn }
	}

	option = {
		name = EVTOPTD_RIP_12011
		tooltip_info = lunatic

		trigger = { trait = lunatic }
	}
}

# Gained friend
character_event = {
	id = RIP.12012
	desc = EVTDESC_RIP_12012
	picture = GFX_evt_council
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes

	immediate = {
		set_character_flag = seclusion_gained_friend

		random_courtier = {
			limit = {
				at_location = ROOT
				in_seclusion = yes

				trigger_if = {
					limit = { is_adult = yes }
					ROOT = { is_adult = yes }
				}
				trigger_else = {
					age >= 6
					ROOT = { age >= 6 }
				}

				NOR = {
					is_friend = ROOT
					is_rival = ROOT
				}

				opinion = {
					who = ROOT
					value >= 0
				}
			}

			save_event_target_as = new_friend
		}
	}

	option = {
		name = EVTOPTA_RIP_12012

		add_friend = event_target:new_friend
	}
}

# Sick courtier
character_event = {
	id = RIP.12013
	desc = EVTDESC_RIP_12013
	picture = GFX_evt_illness
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	immediate = {
		random_courtier = {
			limit = {
				has_epidemic_disease_trigger = yes
				at_location = ROOT
				in_seclusion = yes
				NOT = { is_friend = ROOT }
			}

			save_event_target_as = plague_victim
		}
	}

	option = {
		name = EVTOPTA_RIP_12013

		if = {
			limit = {
				ai = no
				is_ironman = yes
				event_target:plague_victim = { trait = bubonic_plague }
				NOT = { has_character_flag = achievement_close_call }
			}

			set_character_flag = achievement_close_call
		}

		event_target:plague_victim = {
			show_scope_change = no

			remove_character_modifier = in_seclusion

			opinion = {
				name = expelled_me_from_seclusion
				who = ROOT
				years = 5
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 2
				trait = craven
			}

			mult_modifier = {
				factor = 2
				trait = paranoid
			}
		}
	}

	option = {
		name = EVTOPTB_RIP_12013

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 2
				trait = kind
			}

			mult_modifier = {
				factor = 2
				trait = brave
			}
		}
	}
}

# Court Physician diagnoses epidemic on courtier
character_event = {
	id = RIP.12014
	desc = EVTDESC_RIP_12014
	picture = GFX_evt_illness
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes # RIP.11031, rip_treatment_events.txt

	trigger = {
		event_target:court_physician = { always = yes }
		event_target:epidemic_victim = { always = yes }
	}

	option = {
		name = EVTOPTA_RIP_12014

		if = {
			limit = {
				ai = no
				is_ironman = yes
				event_target:epidemic_victim = { trait = bubonic_plague }
				NOT = { has_character_flag = achievement_close_call }
			}

			set_character_flag = achievement_close_call
		}

		event_target:epidemic_victim = {
			show_scope_change = no

			remove_character_modifier = in_seclusion

			opinion = {
				name = expelled_me_from_seclusion
				who = ROOT
				years = 5
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 2
				trait = craven
			}

			mult_modifier = {
				factor = 2
				trait = paranoid
			}

			mult_modifier = {
				factor = 5

				opinion = {
					who = event_target:epidemic_victim
					value < 0
				}
			}
		}
	}

	option = {
		name = EVTOPTB_RIP_12014

		event_target:epidemic_victim = {
			show_scope_change = no

			set_character_flag = seclusion_treatment_approved

			opinion = {
				name = opinion_grateful
				who = ROOT
				years = 5
			}

			character_event = {
				id = RIP.11031
				tooltip = EVTOPTB_RIP_12014_TOOLTIP
			}
		}

		ai_chance = {
			factor = 50

			mult_modifier = {
				factor = 2
				trait = brave
			}

			mult_modifier = {
				factor = 2
				trait = charitable
			}

			mult_modifier = {
				factor = 2
				trait = kind
			}

			mult_modifier = {
				factor = 5

				opinion = {
					who = event_target:epidemic_victim
					value >= 50
				}
			}
		}
	}
}

# Child has a peasant lover outside of seclusion, asks to leave
character_event = {
	id = RIP.12032
	desc = EVTDESC_RIP_12032
	picture = GFX_evt_quarrel
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	immediate = {
		set_character_flag = seclusion_child_has_lover
		save_event_target_as = seclusion_parent

		random_child = {
			limit = {
				in_seclusion = yes
				at_location = ROOT
				is_adult = yes

				NOR = {
					trait = craven
					trait = celibate
				}
			}

			save_event_target_as = seclusion_child
		}
	}

	option = {
		name = EVTOPTA_RIP_12032

		trigger = {
			NOT = { trait = paranoid }
		}

		event_target:seclusion_child = {
			show_scope_change = no

			character_event = { id = RIP.12033 }

			opinion = {
				name = let_me_leave
				who = ROOT
			}
		}
	}

	option = {
		name = EVTOPTB_RIP_12032

		event_target:seclusion_child = {
			show_scope_change = no

			remove_character_modifier = in_seclusion
			set_character_flag = seclusion_child_kicked_out
			character_event = { id = RIP.12033 }

			opinion = {
				name = expelled_me_from_seclusion
				who = ROOT
			}
		}
	}

	option = {
		name = EVTOPTC_RIP_12032

		event_target:seclusion_child = {
			show_scope_change = no

			opinion = {
				name = forbade_me_to_leave
				who = ROOT
			}

			hidden_effect = {
				random_list = {
					50 = {
						# Nothing happens
						mult_modifier = {
							factor = 1.5
							trait = honest
						}

						mult_modifier = {
							factor = 1.5
							trait = content
						}

						mult_modifier = {
							factor = 1.5
							trait = chaste
						}
					}

					50 = {
						# Sneak out
						mult_modifier = {
							factor = 1.5
							trait = ambitious
						}

						mult_modifier = {
							factor = 1.5
							trait = deceitful
						}

						mult_modifier = {
							factor = 1.5
							trait = brave
						}

						mult_modifier = {
							factor = 1.5
							trait = lustful
						}

						set_character_flag = escaping_seclusion
						character_event = { id = RIP.12033 } # Find lover

						character_event = {
							id = RIP.12039 # Inform parent
							days = 5
						}
					}
				}
			}
		}
	}
}

# Child goes and finds lover
character_event = {
	id = RIP.12033
	hide_window = yes
	is_triggered_only = yes

	option = {
		if = {
			limit = { prefers_men_trigger = yes }

			create_character = {
				age = 21
				female = no
				dynasty = none
				random_traits = yes
			}
		}
		else = {
			create_character = {
				age = 21
				female = yes
				dynasty = none
				random_traits = yes
			}
		}

		new_character = {
			remove_trait = chaste
			remove_trait = ugly
			add_trait = lustful
			add_trait = attractive
			save_event_target_as = seclusion_childs_lover

			random_list = {
				33 = { } # Nothing

				33 = {
					set_character_flag = disease_not_serious
					add_trait = fever

					character_event = {
						id = RIP.11003
						days = 5
						random = 10
					}
				}

				33 = { set_character_flag = lover_is_ill }
			}

			if = {
				limit = { same_sex = ROOT }
				add_trait = homosexual
				set_character_flag = revealed_homosexual@ROOT
			}

			add_lover = ROOT
		}

		if = {
			limit = { has_character_flag = seclusion_child_kicked_out }

			character_event = {
				id = RIP.12035 # Decide whether to marry lover
				days = 7
			}

			character_event = { id = RIP.12037 } # Become ill if lover is ill
		}
		else = {
			FROM = {
				character_event = {
					id = RIP.12034
					days = 12
				}
			}
		}
	}
}

# Child returns with lover
character_event = {
	id = RIP.12034
	border = GFX_event_normal_frame_intrigue
	picture = GFX_evt_lovers

	desc = {
		text = EVTDESC_RIP_12034_A
		trigger = {
			FROM = {
				NOR = {
					has_character_flag = escaping_seclusion
					trait = homosexual
				}
			}
		}
	}
	desc = {
		text = EVTDESC_RIP_12034_B
		trigger = {
			FROM = {
				OR = {
					has_character_flag = escaping_seclusion
					trait = homosexual
				}
			}
		}
	}


	is_triggered_only = yes

	immediate = {
		event_target:seclusion_childs_lover = {
			add_character_modifier = {
				name = in_seclusion
				duration = -1
			}
		}
	}

	# Stay and get married
	option = {
		name = EVTOPTA_RIP_12034

		trigger = {
			NOT = { trait = paranoid }

			FROM = {
				is_married = no

				NOR = {
					has_character_flag = escaping_seclusion
					trait = homosexual
				}
			}
		}

		FROM = {
			show_scope_change = no

			if = {
				limit = { is_female = yes }
				add_spouse_matrilineal = event_target:seclusion_childs_lover
			}
			else = {
				add_spouse = event_target:seclusion_childs_lover
			}

			character_event = { id = RIP.12037 } # Become ill if lover is ill

			opinion = {
				name = let_us_stay_in_seclusion
				who = ROOT
			}
		}

		reverse_opinion = {
			name = let_us_stay_in_seclusion
			who = event_target:seclusion_childs_lover
		}
	}

	# Stay but don't get married
	option = {
		name = EVTOPTB_RIP_12034

		trigger = {
		 	NOR = {
				trait = paranoid
				FROM = { has_character_flag = escaping_seclusion }
			}
		}

		FROM = {
			show_scope_change = no

			character_event = { id = RIP.12035 } # Decide whether to marry lover
			character_event = { id = RIP.12037 } # Become ill if lover is ill

			opinion = {
				name = let_us_stay_in_seclusion
				who = ROOT
			}
		}

		reverse_opinion = {
			name = let_us_stay_in_seclusion
			who = event_target:seclusion_childs_lover
		}
	}

	# Make the lover go away
	option = {
		name = EVTOPTC_RIP_12034

		event_target:seclusion_childs_lover = {
			show_scope_change = no

			remove_character_modifier = in_seclusion
		}

		FROM = {
			show_scope_change = no

			add_rival = ROOT

			opinion = {
				name = expelled_lover_from_seclusion
				who = ROOT
			}

			clr_character_flag = escaping_seclusion
		}
	}

	# Make them both go away
	option = {
		name = EVTOPTD_RIP_12034

		event_target:seclusion_childs_lover = {
			show_scope_change = no

			remove_character_modifier = in_seclusion
		}

		FROM = {
			show_scope_change = no

			remove_character_modifier = in_seclusion
			character_event = { id = RIP.12035 } # Decide whether to marry lover
			character_event = { id = RIP.12037 } # Become ill if lover is ill
			clr_character_flag = escaping_seclusion

			opinion = {
				name = expelled_me_from_seclusion
				who = ROOT
			}
		}
	}

	# Let them carry on
	option = {
		name = EVTOPTE_RIP_12034

		trigger = {
			FROM = { has_character_flag = escaping_seclusion }
			NOT = { trait = paranoid }
		}

		FROM = {
			character_event = { id = RIP.12035 } # Decide whether to marry lover
			character_event = { id = RIP.12037 } # Become ill if lover is ill
			clr_character_flag = escaping_seclusion

			opinion = {
				name = let_us_stay_in_seclusion
				who = ROOT
			}
		}
	}
}

# Banished child decides to marry lover or not
character_event = {
	id = RIP.12035

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		random_list = {
			50 = {
				# Nothing happens
				mult_modifier = {
					factor = 1.5
					trait = lustful
				}
			}

			50 = {
				trigger = {
					is_married = no
					NOT = { trait = homosexual }
				}

				mult_modifier = {
					factor = 1.5
					trait = chaste
				}

				event_target:seclusion_parent = {
					character_event = {
						id = RIP.12036
						days = 14
					}
				}
			}
		}
	}
}

# Notification of marriage
character_event = {
	id = RIP.12036
	border = GFX_event_normal_frame_intrigue
	picture = GFX_evt_spymaster

	desc = {
		text = EVTDESC_RIP_12036_A
		picture = GFX_evt_spymaster
		trigger = { FROM = { in_seclusion = yes } }
	}
	desc = {
		text = EVTDESC_RIP_12036_B
		picture = GFX_evt_recieve_letter
		trigger = { FROM = { in_seclusion = no } }
	}

	is_triggered_only = yes
	hide_from = yes

	immediate = {
		if = {
			limit = { job_spymaster = { always = yes } }
			job_spymaster = { save_event_target_as = seclusion_informant }
		}
		else = {
			random_courtier = {
				save_event_target_as = seclusion_informant
			}
		}
	}

	option = {
		name = EVTOPTA_RIP_12036

		FROM = {
			show_scope_change = no

			if = {
				limit = { is_female = yes }
				add_spouse_matrilineal = event_target:seclusion_childs_lover
			}
			else = {
				add_spouse = event_target:seclusion_childs_lover
			}
		}
	}
}

# If lover is ill, child also gets ill
character_event = {
	id = RIP.12037

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		event_target:seclusion_childs_lover = {
			if = {
				limit = { has_character_flag = lover_is_ill }

				clr_character_flag = lover_is_ill
				ROOT = { set_character_flag = exposed_to_outside }
			}
		}
	}
}

# Sneaky child
character_event = {
	id = RIP.12039
	desc = EVTDESC_RIP_12039
	picture = GFX_evt_shadowy_cabal
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes

	ai = no

	immediate = {
		# For localisation
		save_event_target_as = event_target_1_insulter
	}

	option = {
		name = EVTOPTA_RIP_12039
	}
}

# START of tunnel-lurker chain:
# Steward wants maps over the castle tunnels
character_event = {
	id = RIP.12050
	desc = EVTDESC_RIP_12050
	picture = GFX_evt_council
	border = GFX_event_normal_frame_economy
	portrait = event_target:secluded_steward

	is_triggered_only = yes

	immediate = {
		save_event_target_as = secluded_friendly_ruler
		set_character_flag = seclusion_tunnel
		set_character_flag = seclusion_events_on

		job_treasurer = {
			save_event_target_as = secluded_steward
		}
	}

	# Hand over maps
	option = {
		name = EVTOPTA_RIP_12050

		custom_tooltip = { text = EVTOPTA_RIP_12050_TOOLTIP }

		reverse_opinion = {
			name = opinion_took_my_advice
			who = event_target:secluded_steward
		}

		character_event = {
			id = RIP.12052
			days = 10
			random = 5
		}
	}

	# Hand over FALSE maps
	option = {
		name = EVTOPTB_RIP_12050
		tooltip_info = intrigue

		trigger = {
			OR = {
				intrigue >= 12
				trait = paranoid
			}

			event_target:secluded_steward = {
				OR = {
					trait = deceitful

					opinion = {
						who = ROOT
						value < 25
					}
				}
			}
		}

		custom_tooltip = { text = EVTOPTB_RIP_12050_TOOLTIP }

		set_character_flag = did_not_trust_steward

		reverse_opinion = {
			name = opinion_took_my_advice
			who = event_target:secluded_steward
		}

		character_event = {
			id = RIP.12052
			days = 10
			random = 5
		}
	}

	# Do nothing
	option = {
		name = EVTOPTC_RIP_12050

		custom_tooltip = { text = EVTOPTC_RIP_12050_TOOLTIP }

		add_trait_fully_silently_paranoid_effect = yes
	}
}

# Steward: "Someone's been using the tunnels! What to do???"
character_event = {
	id = RIP.12052
	desc = EVTDESC_RIP_12052
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_economy
	portrait = event_target:secluded_steward

	is_triggered_only = yes

	# Plan an ambush
	option = {
		name = EVTOPTA_RIP_12052

		character_event = {
			id = RIP.12054
			days = 10
			tooltip = EVTOPTA_RIP_12052_TOOLTIP
		}
	}

	# Seal the tunnels!
	option = {
		name = EVTOPTB_RIP_12052

		custom_tooltip = { text = EVTOPTB_RIP_12052_TOOLTIP }

		clr_character_flag = did_not_trust_steward

		random = {
			chance = 45
			add_trait_partially_craven_effect = yes
		}
	}
}

# Ambush succeeds: Somebody was captured!
character_event = {
	id = RIP.12054
	desc = EVTDESC_RIP_12054
	picture = GFX_evt_drunk
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	hide_from = no
	hide_new = yes

	trigger = { in_seclusion = yes }

	# Create the tunnel sneaker: a lover, instigator or assassin
	immediate = {
		random_list = {
			50 = {
				trigger = { prefers_men_trigger = yes }

				create_character = {
					female = no
					age = 25
					random_traits = yes
					add_trait = brawny
					dynasty = none
					religion = ROOT
					culture = ROOT
					race = ROOT
					health = 7

					attributes = {
						intrigue = 12
						diplomacy = 10
					}
				}
			}

			50 = {
				trigger = { prefers_men_trigger = yes }

				create_character = {
					female = no
					age = 19
					random_traits = yes
					add_trait = brawny
					add_trait = lustful
					dynasty = none
					religion = ROOT
					culture = ROOT
					race = ROOT
					health = 7

					attributes = {
						intrigue = 9
						diplomacy = 9
						martial = 7
					}
				}
			}

			33 = {
				trigger = { prefers_men_trigger = no }

				create_character = {
					female = yes
					age = 33
					random_traits = yes
					add_trait = lustful
					dynasty = none
					religion = ROOT
					culture = ROOT
					race = ROOT
					health = 7

					attributes = {
						martial = 12
						diplomacy = 10
					}
				}
			}

			33 = {
				trigger = { prefers_men_trigger = no }

				create_character = {
					female = yes
					age = 19
					random_traits = yes
					add_trait = shrewd
					add_trait = poet
					dynasty = none
					religion = ROOT
					culture = ROOT
					race = ROOT
					health = 7

					attributes = {
						intrigue = 13
						diplomacy = 14
					}
				}
			}

			33 = {
				trigger = { prefers_men_trigger = no }

				create_character = {
					female = yes
					age = 52
					random_traits = yes
					add_trait = lustful
					add_trait = gardener
					dynasty = none
					religion = ROOT
					culture = ROOT
					race = ROOT
					health = 7

					attributes = {
						intrigue = 13
						learning = 14
					}
				}
			}
		}

		new_character = {
			save_event_target_as = captured_sneaker

			random_list = {
				10 = {
					trigger = { is_female = yes }

					mult_modifier = {
						factor = 0.1
						any_courtier = { has_nickname = nick_the_silent }
					}

					give_nickname = nick_the_silent
				}

				10 = {
					mult_modifier = {
						factor = 0.1
						any_courtier = { has_nickname = nick_the_hollow }
					}

					give_nickname = nick_the_hollow
				}

				10 = {
					mult_modifier = {
						factor = 0.1
						any_courtier = { has_nickname = nick_the_recluse }
					}

					give_nickname = nick_the_recluse
				}

				10 = {
					trigger = { is_female = no }

					mult_modifier = {
						factor = 0.1
						any_courtier = { has_nickname = nick_the_bard }
					}

					give_nickname = nick_the_bard
				}

				10 = {
					mult_modifier = {
						factor = 0.1
						any_courtier = { has_nickname = nick_the_troubadour }
					}

					give_nickname = nick_the_troubadour
				}

				10 = {
					mult_modifier = {
						factor = 0.1
						any_courtier = { has_nickname = nick_the_fox }
					}

					give_nickname = nick_the_fox
				}

				10 = {
					trigger = { is_female = no }

					mult_modifier = {
						factor = 0.1
						any_courtier = { has_nickname = nick_the_handsome }
					}

					give_nickname = nick_the_handsome
				}

				1 = { }
			}

			random_list = {
				10 = {
					mult_modifier = {
						factor = 1.5

						event_target:secluded_friendly_ruler = {
							OR = {
								trait = lustful
								trait = kind
							}
						}
					}

					set_character_flag = sneaky_lover
				}

				10 = {
					mult_modifier = {
						factor = 1.5

						event_target:secluded_friendly_ruler = {
							OR = {
								trait = greedy
								trait = cruel
								trait = wroth
								trait = impaler
							}
						}
					}

					set_character_flag = sneaky_revolutionary
				}

				60 = {
					trigger = {
						OR = {
							has_character_flag = did_not_trust_steward

							event_target:secluded_steward = {
								OR = {
									trait = deceitful

									opinion = {
										who = ROOT
										value < 25
									}
								}
							}
						}
					}

					set_character_flag = sneaky_assassin
					remove_trait = honest
				}
			}

			add_trait = stressed

			if = {
				limit = { same_sex = ROOT }
				add_trait = homosexual
				set_character_flag = revealed_homosexual@ROOT
			}
			else = {
				remove_trait = homosexual
			}
		}
	}

	# Hear them out
	option = {
		name = EVTOPTA_RIP_12054

		character_event = {
			id = RIP.12055
			days = 2
			tooltip = EVTOPTA_RIP_12054_TOOLTIP
		}
	}

	# Imprison them!
	option = {
		name = EVTOPTB_RIP_12054

		custom_tooltip = {
			text = EVTOPTB_RIP_12054_TOOLTIP

			hidden_effect = {
				reverse_imprison = event_target:captured_sneaker

				# Could lead to pitchforks coming at you:
				if = {
					limit = {
						event_target:captured_sneaker = {
							has_character_flag = sneaky_revolutionary
						}
					}

					character_event = {
						id = RIP.12056
						days = 30
						random = 10
					}
				}
			}
		}
	}

	# Execute them, quickly!
	option = {
		name = EVTOPTC_RIP_12054

		custom_tooltip = { text = EVTOPTC_RIP_12054_TOOLTIP }

		clr_character_flag = did_not_trust_steward

		event_target:captured_sneaker = {
			show_scope_change = no

			death = {
				death_reason = death_execution_beheading
				killer = ROOT
			}

			# if = {
				# limit = { has_character_flag = sneaky_lover }

				# event for grieving lover?
			# }
		}
	}
}

# Sneaker has joined court/been imprisoned: ping to sneaker
character_event = {
	id = RIP.12061

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		trigger_switch = {
			on_trigger = has_character_flag

			# Could lead to pitchforks coming at you:
			sneaky_revolutionary = {
				event_target:secluded_friendly_ruler = {
					character_event = { id = RIP.12056 }
				}
			}

			# Could lead to assassination attempt:
			sneaky_assassin = {
				event_target:secluded_friendly_ruler = {
					character_event = { id = RIP.12057 }
				}
			}

			# Could lead to seduction attempt: add block for prison
			sneaky_lover = {
				event_target:secluded_friendly_ruler = {
					character_event = { id = RIP.12058 }
				}
			}
		}
	}
}

# Ambush succeeded: Hearing the captive out
character_event = {
	id = RIP.12055
	desc = EVTDESC_RIP_12055
	picture = GFX_evt_spymaster
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	hide_from = no
	hide_new = yes

	# I believe! They join court
	option = {
		name = EVTOPTA_RIP_12055

		custom_tooltip = { text = EVTOPTA_RIP_12055_TOOLTIP }

		if = {
			limit = { in_seclusion = yes }

			event_target:captured_sneaker = {
				show_scope_change = no

				add_character_modifier = {
					name = in_seclusion
					duration = -1
				}

				hidden_effect = {
					remove_trait = stressed

					character_event = {
						id = RIP.12061
						days = 25
						random = 10
					}
				}
			}
		}

		if = {
			limit = {
				event_target:captured_sneaker = {
					NOT = { has_character_flag = sneaky_lover }
				}
			}

			set_character_flag = exposed_to_outside
		}

		set_character_flag = sneaker_joined_court
	}

	# Send them out of seclusion
	option = {
		name = EVTOPTB_RIP_12055

		custom_tooltip = {
			text = EVTOPTB_RIP_12055_TOOLTIP

			# Could still lead to pitchforks coming at you:
			if = {
				limit = {
					event_target:captured_sneaker = {
						has_character_flag = sneaky_revolutionary
					}
				}

				character_event = {
					id = RIP.12056
					days = 1
				}
			}
			else = {
				clr_character_flag = did_not_trust_steward
			}

			event_target:captured_sneaker = {
				leave_court_effect = yes
			}
		}

		event_target:captured_sneaker = {
			show_scope_change = no

			add_trait = depressed

			opinion = {
				name = opinion_hate
				who = ROOT
				years = 2
			}
		}
	}
}

# Sneaky_revolutionary - their pals storm the castle
character_event = {
	id = RIP.12056
	picture = GFX_evt_peasants
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_RIP_12056_A
		trigger = { has_character_flag = did_not_trust_steward }
	}
	desc = {
		text = EVTDESC_RIP_12056_B
		trigger = {
			NOT = { has_character_flag = did_not_trust_steward }
		}
	}

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes

	immediate = {
		event_target:captured_sneaker = {
			add_trait = peasant_leader
		}
	}

	# OH WTF
	option = {
		name = EVTOPTA_RIP_12056

		custom_tooltip = {
			text = EVTOPTA_RIP_12056_TOOLTIP

			random_list = {
				# You crushed the rebellion!
				50 = {
					mult_modifier = {
						factor = 1.5

						event_target:secluded_steward = {
							OR = {
								trait = deceitful

								opinion = {
									who = ROOT
									value < 25
								}
							}
						}
					}

					character_event = {
						id = RIP.12059
						days = 1
					}
				}

				# The rebels made it inside the castle
				50 = {
					mult_modifier = {
						factor = 1.5
						has_character_flag = did_not_trust_steward
					}

					character_event = {
						id = RIP.12063
						days = 1
					}
				}
			}
		}
	}
}

# Sneaky_assassin - Assassination Attempt
character_event = {
	id = RIP.12057
	desc = EVTDESC_RIP_12057
	picture = GFX_evt_shadow
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes

	# Oh Shit
	option = {
		name = EVTOPTA_RIP_12057

		hidden_effect = {
			random_list = {
				# You kill the assassin!
				30 = {
					mult_modifier = {
						factor = 2
						has_character_flag = did_not_trust_steward
					}

					mult_modifier = {
						factor = 1.5
						martial >= 12 # TODO: Not combat_rating?
					}

					mult_modifier = {
						factor = 1.5
						trait = duelist
					}

					mult_modifier = {
						factor = 1.5
						has_character_modifier = aspiring_duelist
					}

					character_event = { id = RIP.12064 }
				}

				# You become wounded
				30 = {
					mult_modifier = {
						factor = 1.5
						trait = craven
					}

					opinion = {
						name = opinion_regicide_traitor
						who = FROM
					}

					character_event = { id = RIP.12065 }
				}

				# You are killed!
				30 = {
					mult_modifier = {
						factor = 1.5
						event_target:secluded_steward = { trait = deceitful }
					}

					mult_modifier = {
						factor = 1.5

						reverse_opinion = {
							who = event_target:secluded_steward
							value < 25
						}
					}

					character_event = { id = RIP.12066 }
				}
			}

			clr_character_flag = did_not_trust_steward
		}
	}
}

# Sneaky_lover - Seduction attempt
character_event = {
	id = RIP.12058
	picture = GFX_evt_lovers
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_RIP_12058_A
		trigger = {
			event_target:captured_sneaker = {
				is_female = yes
			}
		}
	}
	desc = {
		text = EVTDESC_RIP_12058_B
		trigger = {
			event_target:captured_sneaker = {
				is_female = no
			}
		}
	}

	is_triggered_only = yes
	hide_new = yes

	trigger = {
		event_target:captured_sneaker = {
			root_attraction_trigger = yes
		}
	}

	# I like it!
	option = {
		name = EVTOPTA_RIP_12058

		custom_tooltip = { text = EVTOPTA_RIP_12058_TOOLTIP }

		reverse_opinion = {
			name = opinion_budding_romance
			who = event_target:captured_sneaker
		}

		add_lover = event_target:captured_sneaker
	}

	# I don't think so, I'm sorry
	option = {
		name = EVTOPTB_RIP_12058

		custom_tooltip = { text = EVTOPTB_RIP_12058_TOOLTIP }

		reverse_opinion = {
			name = opinion_budding_friendship
			who = event_target:captured_sneaker
		}

		add_friend = event_target:captured_sneaker
	}

	# Back off!
	option = {
		name = EVTOPTC_RIP_12058

		custom_tooltip = { text = EVTOPTC_RIP_12058_TOOLTIP }

		reverse_opinion = {
			name = opinion_advance_rejected
			who = event_target:captured_sneaker
			years = 3
		}
	}

	after = {
		clr_character_flag = did_not_trust_steward
		clr_character_flag = seclusion_events_on
	}
}

# Crushed rebels inside the castle!
character_event = {
	id = RIP.12059
	picture = GFX_evt_pale_rider
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_RIP_12059_A
		trigger = { has_character_flag = did_not_trust_steward }
	}
	desc = {
		text = EVTDESC_RIP_12059_B
		trigger = {
			NOT = { has_character_flag = did_not_trust_steward }
		}
	}

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes

	# Victory!
	option = {
		name = EVTOPTA_RIP_12059

		custom_tooltip = { text = EVTOPTA_RIP_12059_TOOLTIP }

		add_trait_fully_silently_cynical_effect = yes

		change_martial = 1

		add_character_modifier = {
			name = crushed_rebels_from_seclusion
			years = 2
		}

		event_target:captured_sneaker = {
			show_scope_change = no

			if = {
				limit = {
					prisoner = no
					has_character_flag = sneaker_joined_court
				}
			}

			imprison = ROOT
			clr_character_flag = sneaker_joined_court
		}

		clr_character_flag = did_not_trust_steward
		clr_character_flag = seclusion_events_on
	}
}

# Rebels wreak havoc
character_event = {
	id = RIP.12063
	picture = GFX_evt_bloody_man
	border = GFX_event_normal_frame_intrigue

	desc = {
		text = EVTDESC_RIP_12063_A
		trigger = { has_character_flag = did_not_trust_steward }
	}
	desc = {
		text = EVTDESC_RIP_12063_B
		trigger = {
			NOT = { has_character_flag = did_not_trust_steward }
		}
	}

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes

	# This sucks
	option = {
		name = EVTOPTA_RIP_12063

		trigger = {
			event_target:captured_sneaker = {
				prisoner = no
			}
		}

		custom_tooltip = {
			text = EVTOPTA_RIP_12063_TOOLTIP

			hidden_effect = {
				add_maimed_trait_effect = yes

				event_target:captured_sneaker = {
					if = {
						limit = { prisoner = no }

						leave_court_effect = yes
						remove_character_modifier = in_seclusion
					}
				}
			}
		}
	}

	# This sucks + the lurker was in prison
	option = {
		name = EVTOPTB_RIP_12063

		trigger = {
			event_target:captured_sneaker = {
				prisoner = yes
			}
		}

		custom_tooltip = {
			text = EVTOPTB_RIP_12063_TOOLTIP

			hidden_effect = {
				add_maimed_trait_effect = yes
			}
		}
	}

	after = {
		add_trait_fully_silently_cynical_effect = yes
		clr_character_flag = did_not_trust_steward
		clr_character_flag = seclusion_events_on
	}
}

# You killed the assassin!
character_event = {
	id = RIP.12064
	desc = EVTDESC_RIP_12064
	picture = GFX_evt_whispers
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes

	# Victory!
	option = {
		name = EVTOPTA_RIP_12064

		custom_tooltip = { text = EVTOPTA_RIP_12064_TOOLTIP }

		add_character_modifier = {
			name = survived_assassination
			years = 4
		}

		event_target:captured_sneaker = {
			show_scope_change = no

			death = { death_reason = death_duel }
		}

		clr_character_flag = seclusion_events_on
	}
}

# You became maimed
character_event = {
	id = RIP.12065
	desc = EVTDESC_RIP_12065
	picture = GFX_evt_into_the_dungeon
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes

	# Meh
	option = {
		name = EVTOPTA_RIP_12065

		custom_tooltip = {
			text = EVTOPTA_RIP_12065_TOOLTIP
			hidden_effect = { add_maimed_trait_effect = yes }
		}

		add_character_modifier = {
			name = survived_assassination
			years = 4
		}

		reverse_imprison = event_target:captured_sneaker
		clr_character_flag = seclusion_events_on
	}
}

# You are killed!
character_event = {
	id = RIP.12066
	desc = EVTDESC_RIP_12066
	picture = GFX_evt_bloody_man
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes

	# Damnit
	option = {
		name = EVTOPTA_RIP_12066

		custom_tooltip = {
			text = EVTOPTA_RIP_12066_TOOLTIP

			hidden_effect = {
				event_target:captured_sneaker = {
					add_character_modifier = {
						name = suspected_assassin
						years = 4
					}

					remove_character_modifier = in_seclusion
					leave_court_effect = yes
				}
			}
		}

		death = {
			death_reason = death_murder_unknown
			killer = FROM
		}
	}
}

### The Masque of the Red Death chain
narrative_event = {
	id = RIP.12070
	title = RIP_12070_TITLE
	picture = GFX_evt_bring_out_your_dead
	border = GFX_event_narrative_frame_religion

	desc = {
		text = EVTDESC_RIP_12070_A # PIOUS - will prio over benevolent_trigger
		trigger = { is_pious_trigger = yes }
	}
	desc = {
		text = EVTDESC_RIP_12070_B # BENEVOLENT - will prio over impious_trigger
		trigger = {
			is_benevolent_trigger = yes
			is_pious_trigger = no
		}
	}
	desc = {
		text = EVTDESC_RIP_12070_C # EVIL - will prio over impious
		trigger = { is_evil_trigger = yes }
	}
	desc = {
		text = EVTDESC_RIP_12070_D # IMPIOUS - will be rare?
		trigger = {
			is_impious_trigger = yes
			is_evil_trigger = no
		}
	}
	desc = {
		text = EVTDESC_RIP_12070_E # Fallback (neutral)
		trigger = {
			is_pious_trigger = no
			is_benevolent_trigger = no
			is_impious_trigger = no
			is_evil_trigger = no
		}
	}

	is_triggered_only = yes

	immediate = {
		set_character_flag = seclusion_events_on

		any_courtier = {
			limit = {
				in_seclusion = yes
				is_adult = yes
				prisoner = no
				is_incapable = no
			}

			score_value = {
				value = 10

				interesting_courtier_selection_score = yes

				additive_modifier = {
					value = 2000
					is_close_relative = ROOT
					is_pious_trigger = no
				}

				additive_modifier = {
					value = 1000
					has_vice_trigger = yes
				}
			}

			save_event_target_as = bored_courtier_target
		}

		event_target:bored_courtier_target = {
			add_character_modifier = {
				name = bright_eyed
				duration = -1
			}
		}
	}

	option = { # They're right, we should enjoy ourselves
		name = EVTOPTA_RIP_12070

		custom_tooltip = { text = EVTOPTA_RIP_12070_TT }

		set_character_flag = masque_of_red_death
		scaled_wealth = -1

		random = {
			chance = 30

			if = {
				limit = { trait = lustful }
				add_trait_partially_greedy_effect = yes
			}
			else = {
				add_trait_partially_lustful_effect = yes
			}
		}

		add_character_modifier = {
			name = savoring_the_end_days
			duration = -1
		}

		reverse_opinion = {
			name = opinion_took_my_advice
			who = event_target:bored_courtier_target
		}

		character_event = {
			id = RIP.12071
			days = 30
			random = 10
		}
	}

	option = { # Don't go overboard with the arrangements
		name = EVTOPTB_RIP_12070

		trigger = {
			NOT = { trait = lunatic }
		}

		custom_tooltip = { text = EVTOPTB_RIP_12070_TT }

		set_character_flag = masque_of_red_death

		add_character_modifier = {
			name = savoring_the_end_days
			duration = -1
		}

		reverse_opinion = {
			name = opinion_took_my_advice
			who = event_target:bored_courtier_target
		}

		character_event = {
			id = RIP.12071
			days = 30
			random = 10
		}
	}

	option = { # Lunatic option - yes
		name = EVTOPTE_RIP_12070

		trigger = { trait = lunatic }

		custom_tooltip = { text = EVTOPTE_RIP_12070_TT }

		set_character_flag = masque_of_red_death

		add_character_modifier = {
			name = savoring_the_end_days
			duration = -1
		}

		reverse_opinion = {
			name = opinion_took_my_advice
			who = event_target:bored_courtier_target
		}

		character_event = {
			id = RIP.12071
			days = 30
			random = 10
		}
	}

	option = { # lunatic option - no
		name = EVTOPTF_RIP_12070

		trigger = { trait = lunatic }

		custom_tooltip = { text = EVTOPTF_RIP_12070_TT }
	}

	option = { # I refuse to have fun while other suffer
		name = EVTOPTC_RIP_12070

		custom_tooltip = { text = EVTOPTC_RIP_12070_TT }

		trigger = {
			OR = {
				is_benevolent_trigger = yes
				is_pious_trigger = yes
			}

			NOR = {
				trait = lunatic
				trait = depressed
			}
		}
	}

	option = { # Opt out - I am boring
		name = EVTOPTD_RIP_12070

		custom_tooltip = { text = EVTOPTD_RIP_12070_TT }

		trigger = {
			OR = {
				trait = depressed

				AND = {
					is_benevolent_trigger = no
					is_pious_trigger = no
				}
			}

			NOT = { trait = lunatic }
		}
	}
}

# This festive air makes me almost forget about the horror outside
character_event = {
	id = RIP.12071
	picture = GFX_evt_castle_construction
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESC_RIP_12071_A # we've spruced up the castle
		trigger = {
			NOT = { trait = lunatic }
		}
	}
	desc = {
		text = EVTDESC_RIP_12071_B # we've spruced up the castle - lunatic version
		trigger = { trait = lunatic }
	}

	is_triggered_only = yes

	only_rulers = yes
	has_character_flag = masque_of_red_death

	trigger = {
		trigger_if = {
			limit = {
				event_target:bored_courtier_target = { is_alive = no }
			}

			any_courtier = {
				trigger_if = {
					limit = { has_vice_trigger = no }

					is_close_relative = ROOT
					is_pious_trigger = no
				}

				is_adult = yes
				prisoner = no
				is_incapable = no
				in_seclusion = yes
			}
		}
	}

	immediate = {
		# Fetch new event_target if old one is dead (preferably a relative)
		if = {
			limit = {
				event_target:bored_courtier_target = { is_alive = no }
			}

			random_courtier = {
				limit = {
					in_seclusion = yes
					is_adult = yes
					prisoner = no
					is_incapable = no
				}

				preferred_limit = {
					is_close_relative = ROOT
					is_pious_trigger = no
				}

				preferred_limit = {
					has_vice_trigger = yes
				}

				save_event_target_as = bored_courtier_target
			}

			event_target:bored_courtier_target = {
				add_character_modifier = {
					name = bright_eyed
					duration = -1
				}
			}
		}
	}

	option = { # Can you do something about the lights?
		name = EVTOPTA_RIP_12071

		custom_tooltip = { text = EVTOPTA_RIP_12071_TT }

		scaled_wealth = -1

		character_event = {
			id = RIP.12074
			days = 30
			random = 15
		}

		random = {
			chance = 30
			add_trait_fully_charitable_effect = yes
		}

		if = {
			limit = { has_character_modifier = savoring_the_end_days }
			remove_character_modifier = savoring_the_end_days
		}

		add_character_modifier = {
			name = secluded_revelry
			duration = -1
		}

		reverse_opinion = {
			name = opinion_budding_friendship
			who = event_target:bored_courtier_target
		}

		hidden_effect = {
			opinion = {
				name = opinion_budding_friendship
				who = event_target:bored_courtier_target
			}
		}
	}

	option = { # You've made life in seclusion bearable!
		name = EVTOPTB_RIP_12071

		custom_tooltip = { text = EVTOPTB_RIP_12071_TT }

		reverse_opinion = {
			name = opinion_budding_friendship
			who = event_target:bored_courtier_target
		}

		hidden_effect = {
			opinion = {
				name = opinion_budding_friendship
				who = event_target:bored_courtier_target
			}
		}

		character_event = {
			id = RIP.12074
			days = 30
			random = 15
		}
	}

	# Perhaps enough is enough - CHAIN END.
	option = {
		name = EVTOPTC_RIP_12071

		custom_tooltip = { text = EVTOPTC_RIP_12071_TT }

		clr_character_flag = masque_of_red_death
	}
}

# Our castle is magnificent and guests are happy - wait, who's that?
character_event = {
	id = RIP.12074
	picture = GFX_evt_suspicious_noble
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESC_RIP_12074_A
		trigger = {
			in_seclusion = yes
			NOT = { trait = lunatic }
		}
	}
	desc = {
		text = EVTDESC_RIP_12074_B
		picture = GFX_evt_prospering_province
		trigger = { in_seclusion = no }
	}
	desc = {
		text = EVTDESC_RIP_12074_C
		trigger = {
			in_seclusion = yes
			trait = lunatic
		}
	}

	is_triggered_only = yes
	hide_new = yes
	hide_from = yes

	has_character_flag = masque_of_red_death

	immediate = {
		create_character = {
			female = 50
			age = 21
			random_traits = no
			dynasty = none
			add_trait = elusive_shadow
			add_trait = arbitrary
			add_trait = patient
			religion = ROOT
			culture = ROOT
			race = ROOT
			health = 7

			attributes = {
				intrigue = 15
				martial = 10
				diplomacy = 9
			}
		}

		new_character = {
			will_not_marry_effect = yes

			add_character_modifier = {
				name = in_seclusion
				duration = -1
			}

			add_character_modifier = {
				name = attending_masquerade
				duration = -1
			}

			set_character_flag = immune_bubonic_plague
			set_character_flag = is_death
			save_event_target_as = partying_stranger
		}
	}

	option = { # Who is that?
		name = EVTOPTA_RIP_12074

		trigger = { in_seclusion = yes }

		character_event = {
			id = RIP.12075
			days = 15
			tooltip = EVTOPTA_RIP_12074_TT
		}

		show_portrait = event_target:partying_stranger
	}

	option = { # Isn't there something off about them?
		name = EVTOPTB_RIP_12074

		trigger = { in_seclusion = yes }

		character_event = {
			id = RIP.12075
			days = 15
			tooltip = EVTOPTB_RIP_12074_TT
		}

		show_portrait = event_target:partying_stranger

		random = {
			chance = 50
			add_trait_partially_cynical_effect = yes
		}
	}

	# It was fun while it lasted. But who's that? -  if you have left seclusion
	option = {
		name = EVTOPTC_RIP_12074

		trigger = { in_seclusion = no }

		character_event = {
			id = RIP.12076
			days = 15
		}

		show_portrait = event_target:partying_stranger
	}
}

# You approach the stranger
character_event = {
	id = RIP.12075
	picture = GFX_evt_suspicious_noble
	border = GFX_event_normal_frame_religion

	desc = {
		text = EVTDESC_RIP_12075_A # regular desc
		trigger = {
			NOT = { trait = lunatic }
		}
	}
	desc = {
		text = EVTDESC_RIP_12075_B # lunatic desc
		trigger = { trait = lunatic }
	}

	is_triggered_only = yes
	hide_new = yes

	only_rulers = yes
	has_character_flag = masque_of_red_death

	option = { # Be polite about it
		name = EVTOPTA_RIP_12075

		trigger = {
			NOT = { trait = lunatic }
		}

		character_event = {
			id = RIP.12077
			days = 10
			random = 5
			tooltip = EVTOPTA_RIP_12075_TT
		}
	}

	option = { # Demand to know who they are
		name = EVTOPTB_RIP_12075

		trigger = {
			NOT = { trait = lunatic }
		}

		character_event = {
			id = RIP.12078
			days = 10
			random = 5
			tooltip = EVTOPTB_RIP_12075_TT
		}
	}

	# Special option - IMMORTAL - see through them!
	option = {
		name = EVTOPTC_RIP_12075
		tooltip_info = immortal

		trigger = { immortal = yes }

		character_event = {
			id = RIP.12079
			days = 10
			random = 5
			tooltip = EVTOPTC_RIP_12075_TT
		}
	}

	# special option - INTRIGUE - see through them!
	option = {
		name = EVTOPTD_RIP_12075
		tooltip_info = intrigue

		character_event = {
			id = RIP.12079
			days = 10
			random = 5
			tooltip = EVTOPTD_RIP_12075_TT
		}

		trigger = {
			intrigue >= 15
			immortal = no

			NOR = { trait = lunatic }
		}
	}

	# special option - LUNATIC
	option = {
		name = EVTOPTE_RIP_12075

		trigger = { trait = lunatic }

		character_event = {
			id = RIP.12079
			days = 10
			random = 5
			tooltip = EVTOPTE_RIP_12075_TT
		}

		set_character_flag = picked_lunatic_opt
	}
}

# The stranger disappears
character_event = {
	id = RIP.12076
	desc = EVTDESC_RIP_12076
	picture = GFX_evt_prospering_province
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	hide_from = yes
	hide_new = yes

	only_rulers = yes
	has_character_flag = masque_of_red_death

	immediate = {
		# Death leaves court and becomes random person
		event_target:partying_stranger = {
			leave_court_effect = yes
			remove_character_modifier = attending_masquerade
			remove_character_modifier = in_seclusion
			remove_character_modifier = will_not_marry
			remove_trait = cannot_marry
			clr_character_flag = immune_bubonic_plague
		}
	}

	option = { # Just as well?
		name = EVTOPTA_RIP_12076

		custom_tooltip = { text = EVTOPTA_RIP_12076_TT }

		add_character_modifier = {
			name = lucky_to_be_alive
			years = 1
		}
	}
}

# You were polite about it
character_event = {
	id = RIP.12077
	desc = EVTDESC_RIP_12077
	picture = GFX_evt_suspicious_noble
	border = GFX_event_normal_frame_religion
	portrait = event_target:partying_stranger

	is_triggered_only = yes
	hide_new = yes

	only_rulers = yes
	has_character_flag = masque_of_red_death

	option = {
		name = EVTOPTA_RIP_12077 # wth

		random_list = {
			10 = {
				mult_modifier = {
					factor = 1.1
					trait = quick
				}

				mult_modifier = {
					factor = 1.1
					trait = genius
				}

				mult_modifier = {
					factor = 1.1
					has_education_martial_trigger = yes
				}

				mult_modifier = {
					factor = 1.1
					has_lifestyle_martial_trigger = yes
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 10
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 20
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 30
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 40
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 50
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 60
				}

				mult_modifier = {
					factor = 1.1
					martial >= 11
				}

				mult_modifier = {
					factor = 1.1
					martial >= 12
				}

				mult_modifier = {
					factor = 1.1
					martial >= 14
				}

				mult_modifier = {
					factor = 1.1
					martial >= 16
				}

				mult_modifier = {
					factor = 1.1
					martial >= 18
				}

				mult_modifier = {
					factor = 1.1
					martial >= 20
				}

				set_character_flag = good_outcome_A

				narrative_event = {
					id = RIP.12081
					tooltip = RIP_12077_TT_good_outcome
				}
			}

			20 = {
				mult_modifier = {
					factor = 1.5
					trait = one_handed
				}

				mult_modifier = {
					factor = 1.5
					has_mental_disorder_trigger = yes
				}

				mult_modifier = {
					factor = 2
					trait = blinded
				}

				mult_modifier = {
					factor = 2
					has_severe_disability_trigger = yes
				}

				set_character_flag = bad_outcome_A

				narrative_event = {
					id = RIP.12080
					tooltip = RIP_12077_TT_bad_outcome
				}
			}
		}
	}
}

# You were demanding
character_event = {
	id = RIP.12078
	picture = GFX_evt_shadowy_cabal
	desc = EVTDESC_RIP_12078
	border = GFX_event_normal_frame_religion
	portrait = event_target:partying_stranger

	only_rulers = yes
	has_character_flag = masque_of_red_death

	is_triggered_only = yes
	hide_new = yes

	option = {
		name = EVTOPTA_RIP_12078 # wth

		random_list = {
			10 = {
				mult_modifier = {
					factor = 1.1
					trait = quick
				}

				mult_modifier = {
					factor = 1.1
					trait = genius
				}

				mult_modifier = {
					factor = 1.1
					has_education_martial_trigger = yes
				}

				mult_modifier = {
					factor = 1.1
					has_lifestyle_martial_trigger = yes
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 10
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 20
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 30
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 40
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 50
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 60
				}

				mult_modifier = {
					factor = 1.1
					martial >= 11
				}

				mult_modifier = {
					factor = 1.1
					martial >= 12
				}

				mult_modifier = {
					factor = 1.1
					martial >= 14
				}

				mult_modifier = {
					factor = 1.1
					martial >= 16
				}

				mult_modifier = {
					factor = 1.1
					martial >= 18
				}

				mult_modifier = {
					factor = 1.1
					martial >= 20
				}

				set_character_flag = good_outcome_B

				narrative_event = {
					id = RIP.12081
					tooltip = RIP_12077_TT_good_outcome
				}
			}

			20 = {
				mult_modifier = {
					factor = 1.5
					trait = one_handed
				}

				mult_modifier = {
					factor = 1.5
					has_mental_disorder_trigger = yes
				}

				mult_modifier = {
					factor = 2
					trait = blinded
				}

				mult_modifier = {
					factor = 2
					has_severe_disability_trigger = yes
				}

				set_character_flag = bad_outcome_B

				narrative_event = {
					id = RIP.12080
					tooltip = RIP_12077_TT_bad_outcome
				}
			}
		}
	}
}

# Special skill/trait outcome
character_event = {
	id = RIP.12079
	picture = GFX_evt_suspicious_noble
	border = GFX_event_normal_frame_religion
	portrait = event_target:partying_stranger

	desc = {
		text = EVTDESC_RIP_12079_A
		trigger = {
			immortal = yes
			NOT = { has_character_flag = picked_lunatic_opt }
		}
	}
	desc = {
		text = EVTDESC_RIP_12079_B
		trigger = {
			immortal = no
			NOT = { has_character_flag = picked_lunatic_opt }
		}
	}
	desc = {
		text = EVTDESC_RIP_12079_C
		trigger = { has_character_flag = picked_lunatic_opt }
	}

	is_triggered_only = yes
	hide_new = yes

	only_rulers = yes
	has_character_flag = masque_of_red_death

	option = {
		name = EVTOPTA_RIP_12079 # That's not good

		trigger = {
			immortal = yes
			NOT = { has_character_flag = picked_lunatic_opt }
		}

		random_list = {
			10 = {
				mult_modifier = {
					factor = 1.1
					trait = quick
				}

				mult_modifier = {
					factor = 1.1
					trait = genius
				}

				mult_modifier = {
					factor = 1.1
					has_education_martial_trigger = yes
				}

				mult_modifier = {
					factor = 1.1
					has_lifestyle_martial_trigger = yes
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 10
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 20
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 30
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 40
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 50
				}

				mult_modifier = {
					factor = 1.1
					combat_rating >= 60
				}

				mult_modifier = {
					factor = 1.1
					martial >= 11
				}

				mult_modifier = {
					factor = 1.1
					martial >= 12
				}

				mult_modifier = {
					factor = 1.1
					martial >= 14
				}

				mult_modifier = {
					factor = 1.1
					martial >= 16
				}

				mult_modifier = {
					factor = 1.1
					martial >= 18
				}

				mult_modifier = {
					factor = 1.1
					martial >= 20
				}

				set_character_flag = good_outcome_C

				narrative_event = {
					id = RIP.12081
					tooltip = RIP_12077_TT_good_outcome
				}
			}

			10 = {
				mult_modifier = {
					factor = 1.5
					trait = one_handed
				}

				mult_modifier = {
					factor = 1.5
					has_mental_disorder_trigger = yes
				}

				mult_modifier = {
					factor = 2
					trait = blinded
				}

				mult_modifier = {
					factor = 2
					has_severe_disability_trigger = yes
				}

				set_character_flag = bad_outcome_C

				narrative_event = {
					id = RIP.12080
					tooltip = RIP_12077_TT_bad_outcome
				}
			}
		}
	}

	option = {
		name = EVTOPTB_RIP_12079 # That's not good

		trigger = {
			immortal = no
			NOT = { has_character_flag = picked_lunatic_opt }
		}

		custom_tooltip = { text = EVTOPTB_RIP_12079_TT }

		random_list = {
			10 = {
				mult_modifier = {
					factor = 1.1
					trait = quick
				}

				mult_modifier = {
					factor = 1.1
					trait = genius
				}

				mult_modifier = {
					factor = 1.1
					has_lifestyle_intrigue_trigger = yes
				}

				mult_modifier = {
					factor = 1.1
					has_education_intrigue_trigger = yes
				}

				mult_modifier = {
					factor = 1.1
					intrigue >= 11
				}

				mult_modifier = {
					factor = 1.1
					intrigue >= 12
				}

				mult_modifier = {
					factor = 1.1
					intrigue >= 14
				}

				mult_modifier = {
					factor = 1.1
					intrigue >= 16
				}

				mult_modifier = {
					factor = 1.1
					intrigue >= 18
				}

				mult_modifier = {
					factor = 1.1
					intrigue >= 20
				}

				set_character_flag = good_outcome_D

				narrative_event = {
					id = RIP.12081
					tooltip = RIP_12077_TT_good_outcome
				}
			}

			20 = {
				mult_modifier = {
					factor = 1.5
					trait = slow
				}

				mult_modifier = {
					factor = 1.5
					has_mental_disorder_trigger = yes
				}

				mult_modifier = {
					factor = 2
					trait = blinded
				}

				mult_modifier = {
					factor = 2
					has_severe_disability_trigger = yes
				}

				set_character_flag = bad_outcome_D

				narrative_event = {
					id = RIP.12080
					tooltip = RIP_12077_TT_bad_outcome
				}
			}
		}
	}

	option = {
		name = EVTOPTC_RIP_12079 # lunatic - not good

		trigger = { has_character_flag = picked_lunatic_opt }

		custom_tooltip = { text = EVTOPTC_RIP_12079_TT }

		random_list = {
			10 = {
				mult_modifier = {
					factor = 1.1
					has_pleasant_trait_trigger = yes
				}

				mult_modifier = {
					factor = 1.1
					trait = genius
				}

				mult_modifier = {
					factor = 1.1
					has_lifestyle_diplomacy_trigger = yes
				}

				mult_modifier = {
					factor = 1.1
					has_education_diplomacy_trigger = yes
				}

				mult_modifier = {
					factor = 1.1
					diplomacy >= 11
				}

				mult_modifier = {
					factor = 1.1
					diplomacy >= 12
				}

				mult_modifier = {
					factor = 1.1
					diplomacy >= 14
				}

				mult_modifier = {
					factor = 1.1
					diplomacy >= 16
				}

				mult_modifier = {
					factor = 1.1
					diplomacy >= 18
				}

				mult_modifier = {
					factor = 1.1
					diplomacy >= 20
				}

				set_character_flag = good_outcome_E

				narrative_event = {
					id = RIP.12081
					tooltip = RIP_12077_TT_good_outcome
				}
			}

			20 = {
				mult_modifier = {
					factor = 1.5
					trait = shy
				}

				mult_modifier = {
					factor = 1.5
					trait = imbecile
				}

				mult_modifier = {
					factor = 1.5
					trait = slow
				}

				mult_modifier = {
					factor = 1.5
					trait = dull
				}

				mult_modifier = {
					factor = 2
					has_severe_disability_trigger = yes
				}

				set_character_flag = bad_outcome_E

				narrative_event = {
					id = RIP.12080
					tooltip = RIP_12077_TT_bad_outcome
				}
			}
		}
	}
}

# All goes to shit
narrative_event = {
	id = RIP.12080
	title = RIP_12080_TITLE
	picture = GFX_evt_plague_spreading
	border = GFX_event_narrative_frame_religion

	desc = {
		text = EVTDESC_RIP_12080_A
		trigger = { has_character_flag = bad_outcome_A }
	}
	desc = {
		text = EVTDESC_RIP_12080_B
		trigger = { has_character_flag = bad_outcome_B }
	}
	desc = {
		text = EVTDESC_RIP_12080_C
		trigger = { has_character_flag = bad_outcome_C }
	}
	desc = {
		text = EVTDESC_RIP_12080_D
		trigger = { has_character_flag = bad_outcome_D }
	}
	desc = {
		text = EVTDESC_RIP_12080_E
		trigger = { has_character_flag = bad_outcome_E }
	}

	is_triggered_only = yes
	hide_new = yes

	has_character_flag = masque_of_red_death

	immediate = {
		# This list selects whether you die or become injured
		random_list = {
			80 = { set_character_flag = dies_at_the_ball_flag }
			20 = { set_character_flag = injured_at_the_ball_flag }
		}

		# This list selects how many dynasty members/children dies (1/2/3)
		random_list = {
			33 = { set_variable = { which = local_dynasty_count value = 1 } }
			33 = { set_variable = { which = local_dynasty_count value = 2 } }
			33 = { set_variable = { which = local_dynasty_count value = 3 } }
		}

		while = {
			limit = {
				check_variable = {
					which = local_dynasty_count
					value > 0
				}
			}

			change_variable = {
				which = local_dynasty_count
				value = -1
			}

			random_courtier = {
				limit = {
					dynasty = ROOT
					at_location = ROOT
					in_seclusion = yes
					is_primary_heir = no
					NOT = { has_character_flag = dies_at_the_ball_flag }

					# At least one child will survive
					ROOT = {
						any_child = {
							NOR = {
								character = PREVPREV
								has_character_flag = dies_at_the_ball_flag
							}
						}
					}
				}

				set_character_flag = dies_at_the_ball_flag
			}
		}

		# This list selects how many random courtiers die (2/4/6)
		random_list = {
			33 = { set_variable = { which = local_courtier_count value = 2 } }
			33 = { set_variable = { which = local_courtier_count value = 4 } }
			33 = { set_variable = { which = local_courtier_count value = 6 } }
		}

		while = {
			limit = {
				check_variable = {
					which = local_courtier_count
					value > 0
				}
			}

			change_variable = {
				which = local_courtier_count
				value = -1
			}

			random_courtier = {
				limit = {
					NOR = {
						dynasty = ROOT
						has_character_flag = dies_at_the_ball_flag
						has_character_flag = marking_flag
					}
				}

				set_character_flag = dies_at_the_ball_flag
			}
		}
	}

	option = { # NOOOO
		name = {
			text = EVTOPTA_RIP_12080
			trigger = { has_character_flag = bad_outcome_A }
		}
		name = {
			text = EVTOPTB_RIP_12080
			trigger = { has_character_flag = bad_outcome_B }
		}
		name = {
			text = EVTOPTC_RIP_12080
			trigger = { has_character_flag = bad_outcome_C }
		}
		name = {
			text = EVTOPTD_RIP_12080
			trigger = { has_character_flag = bad_outcome_D }
		}
		name = {
			text = EVTOPTE_RIP_12080 # Lunatic
			trigger = { has_character_flag = bad_outcome_E }
		}

		trigger_switch = {
			on_trigger = has_character_flag

			bad_outcome_A = { custom_tooltip = { text = EVTOPTA_RIP_12080_TT } }
			bad_outcome_B = { custom_tooltip = { text = EVTOPTB_RIP_12080_TT } }
			bad_outcome_C = { custom_tooltip = { text = EVTOPTC_RIP_12080_TT } }
			bad_outcome_D = { custom_tooltip = { text = EVTOPTD_RIP_12080_TT } }
			bad_outcome_E = { custom_tooltip = { text = EVTOPTE_RIP_12080_TT } }
		}

		if = {
			limit = { has_character_flag = dies_at_the_ball_flag }

			death = {
				death_reason = death_murder_unknown
				killer = event_target:partying_stranger
			}
		}
		else = {
			add_maimed_trait_effect = yes
		}

		any_courtier = {
			show_scope_change = no

			limit = { has_character_flag = dies_at_the_ball_flag }

			death = {
				death_reason = death_murder_unknown
				killer = event_target:partying_stranger
			}
		}

	#	any_courtier = {
	#		show_scope_change = no
	#
	#		limit = { has_character_flag = injured_at_the_ball_flag }
	#
	#		add_maimed_trait_effect = yes
	#	}

		hidden_effect = { # Death leaves court and becomes random person
			event_target:partying_stranger = {
				leave_court_effect = yes
				remove_character_modifier = attending_masquerade
				remove_character_modifier = in_seclusion
				remove_character_modifier = will_not_marry
				remove_trait = cannot_marry
				clr_character_flag = marking_flag
				clr_character_flag = immune_bubonic_plague
			}

			clr_character_flag = bad_outcome_A
			clr_character_flag = bad_outcome_B
			clr_character_flag = bad_outcome_C
			clr_character_flag = bad_outcome_D
			clr_character_flag = bad_outcome_E
			clr_character_flag = picked_lunatic_opt
		}
	}
}

# All is well?
narrative_event = {
	id = RIP.12081
	title = RIP_12081_TITLE
	picture = GFX_evt_danse_macabre
	border = GFX_event_narrative_frame_religion

	desc = {
		text = EVTDESC_RIP_12081_A
		trigger = { has_character_flag = good_outcome_A }
	}
	desc = {
		text = EVTDESC_RIP_12081_B
		picture = GFX_evt_prospering_province
		trigger = { has_character_flag = good_outcome_B }
	}
	desc = {
		text = EVTDESC_RIP_12081_C
		trigger = { has_character_flag = good_outcome_C }
	}
	desc = {
		text = EVTDESC_RIP_12081_D
		trigger = { has_character_flag = good_outcome_D }
	}
	desc = {
		text = EVTDESC_RIP_12081_E
		trigger = { has_character_flag = good_outcome_E }
	}

	is_triggered_only = yes
	hide_new = yes

	has_character_flag = masque_of_red_death

	option = { # Yay
		name = {
			text = EVTOPTA_RIP_12081
			trigger = { has_character_flag = good_outcome_A }
		}
		name = {
			text = EVTOPTB_RIP_12081
			trigger = { has_character_flag = good_outcome_B }
		}
		name = {
			text = EVTOPTC_RIP_12081
			trigger = { has_character_flag = good_outcome_C }
		}
		name = {
			text = EVTOPTD_RIP_12081
			trigger = { has_character_flag = good_outcome_D }
		}
		name = {
			text = EVTOPTE_RIP_12081
			trigger = { has_character_flag = good_outcome_E }
		}

		trigger_switch = {
			on_trigger = has_character_flag

			good_outcome_A = { custom_tooltip = { text = EVTOPTA_RIP_12081_TT } }
			good_outcome_B = { custom_tooltip = { text = EVTOPTB_RIP_12081_TT } }
			good_outcome_C = { custom_tooltip = { text = EVTOPTC_RIP_12081_TT } }
			good_outcome_D = { custom_tooltip = { text = EVTOPTD_RIP_12081_TT } }
			good_outcome_E = { custom_tooltip = { text = EVTOPTE_RIP_12081_TT } }
		}

		add_character_modifier = {
			name = lucky_to_be_alive
			years = 5
		}

		hidden_effect = {
			if = {
				limit = { has_nickname = no }
				give_nickname = nick_the_survivor
			}

			# Death leaves court and becomes random person
			event_target:partying_stranger = {
				leave_court_effect = yes
				remove_character_modifier = attending_masquerade
				remove_character_modifier = in_seclusion
				remove_character_modifier = will_not_marry
				remove_trait = cannot_marry
				clr_character_flag = marking_flag
				clr_character_flag = immune_bubonic_plague
			}
		}

		clr_character_flag = good_outcome_A
		clr_character_flag = good_outcome_B
		clr_character_flag = good_outcome_C
		clr_character_flag = good_outcome_D
		clr_character_flag = good_outcome_E
		clr_character_flag = picked_lunatic_opt
	}
}

# Remove seclusion for courtiers on_new_holder
character_event = {
	id = RIP.12095

	is_triggered_only = yes # on_new_holder(_inheritance)
	hide_window = yes

	trigger = { in_seclusion = no }

	immediate = {
		any_courtier = {
			limit = { in_seclusion = yes }
			clr_character_flag = seclusion_events_on
			clr_character_flag = do_not_disturb
			remove_character_modifier = in_seclusion
			remove_character_modifier = tiny_food_shortage
			remove_character_modifier = minor_food_shortage
			remove_character_modifier = normal_food_shortage
			remove_character_modifier = starving_food_shortage
			remove_character_modifier = greedy_food_shortage
		}
	}
}

# For safety, to prevent everlasting food-shortage from Seclusion
# Root = the character that got a new host
# From = the previous host
# FromFrom = new employer
character_event = {
	id = RIP.12096

	is_triggered_only = yes # on_host/employer_change
	hide_window = yes

	trigger = {
		FROMFROM = { in_seclusion = no } # If new liege is *not* In Seclusion
	}

	immediate = {
		remove_character_modifier = in_seclusion
		remove_character_modifier = tiny_food_shortage
		remove_character_modifier = minor_food_shortage
		remove_character_modifier = normal_food_shortage
		remove_character_modifier = starving_food_shortage
		remove_character_modifier = greedy_food_shortage
	}
}

# Fires from on_become_imprisoned_any_reason (if you are In Seclusion)
character_event = {
	id = RIP.12097

	is_triggered_only = yes # on_become_imprisoned_any_reason
	hide_window = yes

	trigger = { in_seclusion = yes }

	immediate = {
		remove_character_modifier = in_seclusion
		remove_character_modifier = tiny_food_shortage
		remove_character_modifier = minor_food_shortage
		remove_character_modifier = normal_food_shortage
		remove_character_modifier = starving_food_shortage
		remove_character_modifier = greedy_food_shortage
		clr_character_flag = seclusion_events_on
		remove_do_not_disturb_effect = yes
		set_character_flag = DEBUG_RIP.12097

		if = {
			limit = { is_ruler = yes }

			clr_character_flag = exposed_to_outside
			clr_character_flag = seclusion_piling_corpses
			clr_character_flag = seclusion_lazy_seduction
			clr_character_flag = seclusion_nightmares
			clr_character_flag = seclusion_gained_friend
			clr_character_flag = seclusion_child_has_lover
			clr_character_flag = seclusion_tunnel
			clr_character_flag = seclusion_food_events

			any_courtier = {
				remove_character_modifier = in_seclusion
				remove_character_modifier = tiny_food_shortage
				remove_character_modifier = minor_food_shortage
				remove_character_modifier = normal_food_shortage
				remove_character_modifier = starving_food_shortage
				remove_character_modifier = greedy_food_shortage
			}
		}
	}
}

# Also triggered on on_new_holder
character_event = {
	id = RIP.12098

	hide_window = yes

	trigger = {
		in_seclusion = yes

		host = { in_seclusion = no }

		NAND = {
			is_landed = yes

			capital_scope = {
				has_epidemic = yes
			}
		}
	}

	mean_time_to_happen = {
		months = 1
	}

	immediate = {
		clr_character_flag = seclusion_events_on
		remove_do_not_disturb_effect = yes
		remove_character_modifier = in_seclusion
	}
}

# Liege notification for councillors going into seclusion (Player only)
# letter_event = {
character_event = {
	id = RIP.12101
	desc = EVTDESC_RIP_12099_NOTE
	picture = GFX_evt_council

#	desc = {
#		trigger = {
#			reverse_opinion = {
#				who = FROM
#				value < 0
#			}
#		}
#		text = EVTDESC_RIP_12099_A
#	}
#	desc = {
#		trigger = {
#			reverse_opinion = {
#				who = FROM
#				value >= 0
#			}
#		}
#		text = EVTDESC_RIP_12099_B
#	}

	is_triggered_only = yes # shut_the_gates, rip_various_decisions.txt
	notification = yes

	option = {
		name = {
			trigger = { has_unpleasant_personality_trigger = yes }
			text = EVTOPTA_RIP_12099_A
		}
		name = {
			trigger = { has_unpleasant_personality_trigger = no }
			text = EVTOPTA_RIP_12099_B
		}
	}
}

character_event = {
	id = RIP.12100
	desc = EVTDESC_RIP_12100
	picture = GFX_evt_council
	border = GFX_event_normal_frame_diplomacy

	is_triggered_only = yes # open_the_gates, rip_various_decisions.txt
	notification = yes

	ai = no

	option = {
		name = EXCELLENT
	}
}