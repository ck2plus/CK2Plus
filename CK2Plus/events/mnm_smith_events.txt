###########################################
#                                         #
# M&M Monastic Smith Events               #
#                                         #
# ID MNM.9100-MNM.9138                    #
# ID MNM.9999                             #
# ID MNM.40000-MNM.40001                  #
#                                         #
###########################################

# IDs:
# 9100-9138 Mathilda
# 9102 Linnéa Thimrén
# 9999 Joel

namespace = MNM

# What kind of smith? Start of chain for employ_a_smith
character_event = {
	id = MNM.9130
	desc = EVTDESC_MNM_9130
	picture = GFX_evt_treasure_chamber
	border = GFX_event_normal_frame_economy

	is_triggered_only = yes # employ_a_smith, mnm_artifact_decisions.txt

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	option = { # Weapon
		name = EVTOPTA_MNM_9130

		trigger = {
			job_marshal = { always = yes }
			have_all_weaponsmith_artifacts_trigger = no
		}

		custom_tooltip = { text = employ_a_smith_weapon_search_tt }
		set_character_flag = weaponsmith

		character_event = {
			id = MNM.9115
			days = 50
			random = 50
		}

		ai_chance = {
			factor = 1

			trigger = {
				NOT = { any_artifact = { has_artifact_flag = combat_weapon } }
			}
		}
	}

	option = { # Armor
		name = EVTOPTB_MNM_9130

		trigger = {
			job_marshal = { always = yes }
			have_all_armorsmith_artifacts_trigger = no
		}

		custom_tooltip = { text = employ_a_smith_armor_search_tt }
		set_character_flag = armorsmith

		character_event = {
			id = MNM.9115
			days = 50
			random = 50
		}

		ai_chance = {
			factor = 1

			trigger = {
				NOT = { any_artifact = { has_artifact_flag = armor_set } }
			}
		}
	}

	option = { # Gold
		name = EVTOPTC_MNM_9130

		trigger = {
			# Block out this option if character already has all available tiers of jewelry
			OR = {
				have_duplicate_goldsmith_artifacts_tier_1_trigger = no
				have_duplicate_goldsmith_artifacts_tier_2_trigger = no
				have_duplicate_goldsmith_artifacts_tier_3_trigger = no
				have_duplicate_goldsmith_artifacts_tier_4_trigger = no
			}
		}

		custom_tooltip = { text = employ_a_smith_gold_search_tt }
		set_character_flag = goldsmith

		character_event = {
			id = MNM.9100
			days = 50
			random = 50
		}

		ai_chance = {
			factor = 1

			trigger = {
				NOT = { any_artifact = { has_artifact_flag = crown_jewel } }
			}

			# CleanSlate: Was bizarrely located deeper in the event chain in vanilla
			mult_modifier = {
				factor = 4
				NOR = {
					has_education_martial_trigger = yes
					has_lifestyle_martial_trigger = yes
				}
			}
		}
	}

	option = {
		name = EVTOPTD_MNM_9130

		custom_tooltip = {
			text = employ_smith_cd_reset_tt
			remove_character_modifier = employ_a_smith_cd
		}

		ai_chance = { factor = 0 }
	}
}

### Crown Jewels Events ###

# Hire your smith
character_event = {
	id = MNM.9100
	desc = EVTDESC_MNM_9100
	picture = GFX_evt_treasure_chamber
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	is_triggered_only = yes
	show_root = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	immediate = { # Selecting gender of the goldsmith
		hidden_effect = {
			random_list = {
				15 = { # Woman
					mult_modifier = { factor = 2 has_law = status_of_women_2 }
					mult_modifier = { factor = 2 has_law = status_of_women_3 }
					mult_modifier = { factor = 2 has_law = status_of_women_4 }
					mult_modifier = { factor = 6 has_gender_equal_game_rule_trigger = yes }

					create_random_steward = {
						age = 45
						random_traits = yes
						female = yes
						dynasty = none
						historical = yes

						attributes = {
							stewardship = 3
						}
					}
				}

				85 = { # Man
					create_random_steward = {
						age = 45
						random_traits = yes
						female = no
						dynasty = none
						historical = yes

						attributes = {
							stewardship = 3
						}
					}
				}
			}

			new_character = {
				save_event_target_as = smith

				health = 3
				set_character_flag = ai_flag_refuse_marriage
				set_character_flag = ai_flag_refuse_concubinage
				set_character_flag = cannot_marry
				set_character_flag = no_court_invites
				will_not_marry_effect = yes

				set_character_flag = goldsmith
				give_nickname = nick_the_goldsmith

				random_list = { # Stewardship
					15 = { change_stewardship = 1 }
					25 = { change_stewardship = 3 }

					20 = {
						artisan_craftsmen_bloodline_increase_score = yes
						change_stewardship = 5
					}

					10 = {
						artisan_craftsmen_bloodline_increase_score = yes
						change_stewardship = 7
					}
				}

				random_list = { # Personality
					20 = { add_trait = greedy }
					20 = { add_trait = envious }
					20 = { add_trait = deceitful }

					20 = {
						artisan_craftsmen_bloodline_increase_score = yes
						add_trait = charitable
					}

					20 = {
						artisan_craftsmen_bloodline_increase_score = yes
						add_trait = diligent
					}
				}

				random = {
					chance = 30

					mult_modifier = {
						factor = 2
						trait = indulgent_wastrel
					}

					artisan_craftsmen_bloodline_increase_score = yes
					upgrade_education_effect = yes
				}
			}
		}
	}

	# Yes, invite them!
	option = {
		name = EVTOPTA_MNM_9100

		custom_tooltip = { text = EVTOPTA_MNM_9100_TT }

		save_event_target_as = smith_employer
		character_event = { id = MNM.9103 }
	}

	# Don't invite them
	option = {
		name = EVTOPTB_MNM_9100

		custom_tooltip = { text = EVTOPTB_MNM_9100_TT }

		hidden_effect = {
			event_target:smith = {
				leave_court_and_die_effect = yes
			}
		}

		ai_chance = { factor = 0 }
	}
}

# How much are you willing to spend on the crown jewels?
character_event = {
	id = MNM.9103
	desc = EVTDESC_MNM_9103
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	is_triggered_only = yes
	show_root = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	# The best money can buy
	option = {
		name = EVTOPTA_MNM_9103

		trigger = { real_tier = EMPEROR }

		custom_tooltip = { text = EVTOPTA_MNM_9103_TT }

		scaled_wealth = { value = -3.5 min = -300 max = -2000 }

		hidden_effect = {
			set_variable = { which = local_smithed_item_tier value = 3 }
			random_list = {
				40 = { # Success
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <=  2 } }
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <=  4 } }
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <=  6 } }
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <=  8 } }
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <= 10 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 10 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 12 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 14 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 16 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 18 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 20 } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = greedy } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = diligent } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = patient } }
					mult_modifier = { factor = 1.3 event_target:smith = { is_smart_trigger = yes } }

					set_character_flag = smith_upgrade
				}

				60 = { set_character_flag = smith_complete } # Fail

				10 = { # Steal
					trigger = {
						NOT = {
							any_owned_bloodline = {
								has_bloodline_flag = bloodline_artisan_craftsmen
								bloodline_is_active_for = PREV
							}
						}
					}

					mult_modifier = { factor = 0.2 event_target:smith = { trait = charitable } }
					mult_modifier = { factor = 0.2 event_target:smith = { trait = content } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = deceitful } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = envious } }
					mult_modifier = { factor = 1.5 event_target:smith = { trait = ambitious } }

					set_character_flag = smith_steal
				}
			}

			character_event = {
				id = MNM.9111
				days = 50
				random = 100
			}

			character_event = { # tombola for random events
				id = MNM.9133
				days = 20
				random = 5
			}
		}

		ai_chance = {
			factor = 330

			trigger = {
				OR = {
					wealth >= 200
					yearly_income >= 50
				}
			}
		}
	}

	# Something nice
	option = {
		name = {
			text = EVTOPTB_MNM_9103
			trigger = { real_tier = EMPEROR }
		}
		name = {
			text = EVTOPTB_MNM_9103_KING
			trigger = { real_tier = KING }
		}

		trigger = { higher_real_tier_than = DUKE }

		if = {
			limit = { real_tier = EMPEROR }
			custom_tooltip = { text = EVTOPTB_MNM_9103_TT }
		}
		else = {
			custom_tooltip = { text = EVTOPTB_MNM_9103_TT_KING }
		}

		scaled_wealth = { value = -2 min = -150 max = -500 }

		hidden_effect = {
			set_variable = { which = local_smithed_item_tier value = 2 }

			random_list = {
				60 = { # Success
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <=  2 } }
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <=  4 } }
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <=  6 } }
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <=  8 } }
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <= 10 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 10 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 12 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 14 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 16 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 18 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 20 } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = greedy } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = diligent } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = patient } }
					mult_modifier = { factor = 1.3 event_target:smith = { is_smart_trigger = yes } }

					set_character_flag = smith_upgrade
				}

				40 = { set_character_flag = smith_complete } # Fail

				10 = { # Steal
					trigger = {
						NOT = {
							any_owned_bloodline = {
								has_bloodline_flag = bloodline_artisan_craftsmen
								bloodline_is_active_for = PREV
							}
						}
					}

					mult_modifier = { factor = 0.2 event_target:smith = { trait = charitable } }
					mult_modifier = { factor = 0.2 event_target:smith = { trait = content } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = deceitful } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = envious } }
					mult_modifier = { factor = 1.5 event_target:smith = { trait = ambitious } }

					set_character_flag = smith_steal
				}
			}

			character_event = {
				id = MNM.9111
				days = 50
				random = 100
			}

			character_event = { # tombola for random events
				id = MNM.9133
				days = 20
				random = 5
			}
		}

		ai_chance = {
			factor = 33

			trigger = {
				OR = {
					wealth >= 150
					yearly_income >= 25
				}
			}

			mult_modifier = {
				real_tier = KING
				factor = 10
			}
			mult_modifier = {
				real_tier = EMPEROR
				factor = 3
			}
		}
	}

	# I can't afford that much
	option = {
		name = {
			text = EVTOPTC_MNM_9103
			trigger = { real_tier = EMPEROR }
		}
		name = {
			text = EVTOPTC_MNM_9103_KING
			trigger = { real_tier = KING }
		}
		name = {
			text = EVTOPTC_MNM_9103_GENERIC
			trigger = { lower_real_tier_than = KING }
		}

		if = {
			limit = { real_tier = EMPEROR }
			custom_tooltip = { text = EVTOPTC_MNM_9103_TT }
		}
		else_if = {
			limit = { real_tier = KING }
			custom_tooltip = { text = EVTOPTC_MNM_9103_TT_KING }
		}
		else = {
			custom_tooltip = { text = EVTOPTC_MNM_9103_TT_GENERIC }
		}

		scaled_wealth = { value = -1 min = -50 max = -100 }

		hidden_effect = {
			set_variable = { which = local_smithed_item_tier value = 1 }

			random_list = {
				100 = { set_character_flag = smith_complete } # Success

				10 = { # Steal
					trigger = {
						NOT = {
							any_owned_bloodline = {
								has_bloodline_flag = bloodline_artisan_craftsmen
								bloodline_is_active_for = PREV
							}
						}
					}

					mult_modifier = { factor = 0.2 event_target:smith = { trait = charitable } }
					mult_modifier = { factor = 0.2 event_target:smith = { trait = content } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = deceitful } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = envious } }
					mult_modifier = { factor = 1.5 event_target:smith = { trait = ambitious } }

					set_character_flag = smith_steal
				}
			}

			character_event = {
				id = MNM.9111
				days = 50
				random = 100
			}

			character_event = { # tombola for random events
				id = MNM.9133
				days = 20
				random = 5
			}
		}

		ai_chance = {
			factor = 33

			trigger = {
				OR = {
					wealth >= 25
					yearly_income >= 5
					religion_group = pagan_group
				}
			}

			mult_modifier = {
				real_tier = DUKE
				factor = 10
			}
			mult_modifier = {
				real_tier = KING
				factor = 3
			}
		}
	}

	# Actually, no
	option = {
		name = EVTOPTD_MNM_9103

		custom_tooltip = { text = EVTOPTD_MNM_9103_TT }

		event_target:smith = {
			character_event = { id = MNM.9110 days = 5 }
		}

		ai_chance = { factor = 15 }
	}
}

### Weapon Events ###

# Hire your smith
character_event = {
	id = MNM.9115
	picture = GFX_evt_weaponsmith
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	desc = {
		text = EVTDESC_MNM_9115
		trigger = {
			job_marshal = { always = yes }
		}
	}
	desc = {
		text = EVTDESC_MNM_9115_b
		trigger = {
			NOT = { job_marshal = { always = yes } }
		}
	}

	is_triggered_only = yes
	show_root = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	immediate = { # Selecting gender of the weapon smith
		hidden_effect = {
			random_list = {
				15 = { # Woman
					mult_modifier = { factor = 2 has_law = status_of_women_2 }
					mult_modifier = { factor = 2 has_law = status_of_women_3 }
					mult_modifier = { factor = 2 has_law = status_of_women_4 }
					mult_modifier = { factor = 6 has_gender_equal_game_rule_trigger = yes }

					create_random_steward = {
						age = 45
						random_traits = yes
						female = yes
						dynasty = none
						historical = yes

						attributes = {
							stewardship = 3
						}
					}
				}

				85 = { # Man
					create_random_steward = {
						age = 45
						random_traits = yes
						female = no
						dynasty = none
						historical = yes

						attributes = {
							stewardship = 3
						}
					}
				}
			}

			new_character = {
				save_event_target_as = smith

				health = 3
				set_character_flag = ai_flag_refuse_marriage
				set_character_flag = ai_flag_refuse_concubinage
				set_character_flag = cannot_marry
				set_character_flag = no_court_invites
				will_not_marry_effect = yes

				ROOT = {
					trigger_switch = {
						on_trigger = has_character_flag

						weaponsmith = {
							PREV = {
								give_nickname = nick_the_weaponsmith
								set_character_flag = weaponsmith
							}
						}

						armorsmith = {
							PREV = {
								give_nickname = nick_the_armorsmith
								set_character_flag = armorsmith
							}
						}
					}
				}

				random_list = { # Stewardship
					15 = { change_stewardship = 1 }
					25 = { change_stewardship = 3 }

					20 = {
						change_stewardship = 5
						artisan_craftsmen_bloodline_increase_score = yes
					}

					10 = {
						change_stewardship = 7
						artisan_craftsmen_bloodline_increase_score = yes
					}
				}

				random_list = { # Personality
					20 = { add_trait = greedy }
					20 = { add_trait = envious }
					20 = { add_trait = deceitful }

					20 = {
						add_trait = charitable
						artisan_craftsmen_bloodline_increase_score = yes
					}

					20 = {
						add_trait = diligent
						artisan_craftsmen_bloodline_increase_score = yes
					}
				}

				random = {
					chance = 30

					mult_modifier = {
						factor = 2
						trait = indulgent_wastrel
					}

					artisan_craftsmen_bloodline_increase_score = yes
					upgrade_education_effect = yes
				}
			}
		}

		# Province for loc
		random_demesne_province = {
			limit = {
				owned_by = PREV

				any_neighbor_province = {
					has_owner = yes
					NOT = { owned_by = ROOT }
				}
			}

			random_neighbor_province = {
				limit = {
					NOT = { owned_by = ROOT }
				}

				save_event_target_as = neighbor_province
			}
		}

		if = {
			limit = {
				NOT = { event_target:neighbor_province = { always = yes } }
			}

			random_province = {
				limit = { owner = { is_within_diplo_range = ROOT } }
				save_event_target_as = neighbor_province
			}
		}

		# If the player has an armory
		random_realm_wonder_upgrade = {
			limit = {
				has_wonder_upgrade = upgrade_armory
				is_active = yes
			}

			save_event_target_as = the_armory
			wonder = { save_event_target_as = the_wonder }
		}
	}

	# Yes, invite them!
	option = {
		name = EVTOPTA_MNM_9115
		show_portrait = job_marshal

		trigger = {
			job_marshal = { always = yes }
		}

		custom_tooltip = { text = EVTOPTA_MNM_9115_TT }

		reverse_opinion = {
			name = opinion_was_praised
			who = job_marshal
		}

		save_event_target_as = smith_employer
		character_event = { id = MNM.9118 days = 7 }
	}

	option = {
		name = EVTOPTA_MNM_9115_b

		trigger = {
			NOT = { job_marshal = { always = yes } }
		}

		custom_tooltip = { text = EVTOPTA_MNM_9115_TT }

		save_event_target_as = smith_employer
		character_event = { id = MNM.9118 days = 7 }
	}

	# Don't invite them
	option = {
		name = EVTOPTB_MNM_9115

		trigger = {
			OR = {
				NOT = { event_target:the_armory = { always = yes } }

				trigger_if = {
					limit = { has_character_flag = armorsmith }
					has_artifact = armor_tier_2
				}
				trigger_else = {
					have_all_weaponsmith_artifacts_tier_2_trigger = yes
				}
			}
		}

		custom_tooltip = { text = EVTOPTB_MNM_9115_TT }

		hidden_effect = {
			event_target:smith = {
				leave_court_and_die_effect = yes
			}
		}

		if = {
			limit = {
				has_character_flag = weaponsmith

				NOR = {
					has_artifact = terrible_sword
					has_character_flag = got_terrible_sword
				}
			}

			character_event = { id = MNM.9999 days = 7 }
			set_character_flag = got_terrible_sword
		}
		else_if = {
			limit = {
				has_character_flag = armorsmith

				NOR = {
					has_artifact = terrible_armor
					has_character_flag = got_terrible_armor
				}
			}

			character_event = { id = MNM.9999 days = 7 }
			set_character_flag = got_terrible_armor
		}

		clr_character_flag = weaponsmith
		clr_character_flag = armorsmith

		ai_chance = { factor = 0 }
	}

	# I can do it in my armory, after all!
	option = {
		name = EVTOPTC_MNM_9115

		trigger = {
			event_target:the_armory = { always = yes }

			trigger_if = {
				limit = { has_character_flag = armorsmith }
				NOT = { has_artifact = armor_tier_2 }
			}
			trigger_else = {
				have_all_weaponsmith_artifacts_tier_2_trigger = no
			}
		}

		tooltip_info_custom = EVTOPTC_MNM_9115_TT
		custom_tooltip = { text = EVTOPTB_MNM_9115_TT }

		hidden_effect = {
			event_target:smith = {
				leave_court_and_die_effect = yes
			}

			# Create the Armory Master Weaponsmith
			random_list = {
				15 = { # Woman
					mult_modifier = { factor = 2 has_law = status_of_women_2 }
					mult_modifier = { factor = 2 has_law = status_of_women_3 }
					mult_modifier = { factor = 2 has_law = status_of_women_4 }
					mult_modifier = { factor = 6 has_gender_equal_game_rule_trigger = yes }

					create_random_steward = {
						age = 45
						random_traits = yes
						female = yes
						dynasty = none
						attributes = {
							stewardship = 3
						}
					}
				}
				85 = { # Man
					create_random_steward = {
						age = 45
						random_traits = yes
						female = no
						dynasty = none
						attributes = {
							stewardship = 3
						}
					}
				}
			}

			new_character = {
				save_event_target_as = smith

				health = 3
				set_character_flag = ai_flag_refuse_marriage
				set_character_flag = ai_flag_refuse_concubinage
				set_character_flag = cannot_marry
				set_character_flag = no_court_invites
				will_not_marry_effect = yes

				ROOT = {
					trigger_switch = {
						on_trigger = has_character_flag

						weaponsmith = {
							PREV = {
								give_nickname = nick_the_weaponsmith
								set_character_flag = weaponsmith
							}
						}

						armorsmith = {
							PREV = {
								give_nickname = nick_the_armorsmith
								set_character_flag = armorsmith
							}
						}
					}
				}
			}
		}

		character_event = { id = MNM.9102 days = 7 }

		ai_chance = { factor = 100 }
	}
}

# What kind of weapon would you like?
character_event = {
	id = MNM.9118
	desc = EVTDESC_MNM_9118
	picture = GFX_evt_weaponsmith
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	is_triggered_only = yes
	show_root = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	# Sword
	option = {
		name = EVTOPTA_MNM_9118

		trigger = {
			NOR = {
				religion_group = muslim
				has_dharmic_religion_trigger = yes
			}

			has_character_flag = weaponsmith
			have_all_weaponsmith_swords_trigger = no
		}

		custom_tooltip = {
			text = EVTOPTA_MNM_9118_TT
			event_target:smith = { set_character_flag = weapon_sword }
		}

		ai_chance = { factor = 2 }
	}

	# Scimitar
	option = {
		name = EVTOPTB_MNM_9118

		trigger = {
			OR = {
				religion_group = muslim
				has_dharmic_religion_trigger = yes
			}

			has_character_flag = weaponsmith
			have_all_weaponsmith_scimitar_trigger = no
		}

		custom_tooltip = {
			text = EVTOPTB_MNM_9118_TT
			event_target:smith = { set_character_flag = weapon_scimitar }
		}

		ai_chance = { factor = 2 }
	}

	# Lance
	option = {
		name = EVTOPTC_MNM_9118

		trigger = {
			has_character_flag = weaponsmith
			have_all_weaponsmith_lance_trigger = no
		}

		custom_tooltip = {
			text = EVTOPTC_MNM_9118_TT
			event_target:smith = { set_character_flag = weapon_lance }
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 2
				is_nomadic = yes
			}
		}
	}

	# Axe
	option = {
		name = EVTOPTD_MNM_9118

		trigger = {
			has_character_flag = weaponsmith
			have_all_weaponsmith_axe_trigger = no
		}

		custom_tooltip = {
			text = EVTOPTD_MNM_9118_TT
			event_target:smith = { set_character_flag = weapon_axe }
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 3
				is_tribal = yes
			}
		}
	}

	# Mace
	option = {
		name = EVTOPTE_MNM_9118

		trigger = {
			is_nomadic = no
			has_character_flag = weaponsmith
			have_all_weaponsmith_mace_trigger = no
		}

		custom_tooltip = {
			text = EVTOPTE_MNM_9118_TT
			event_target:smith = { set_character_flag = weapon_mace }
		}

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 5
				religion_openly_norse_or_reformed_trigger = yes
			}
		}
	}

	# Bow
	option = {
		name = EVTOPTF_MNM_9118

		trigger = {
			is_nomadic = yes
			has_character_flag = weaponsmith
			have_all_weaponsmith_bow_trigger = no
		}

		custom_tooltip = {
			text = EVTOPTF_MNM_9118_TT
			event_target:smith = { set_character_flag = weapon_bow }
		}

		ai_chance = { factor = 5 }
	}

	# Armor
	option = {
		name = EVTOPTG_MNM_9118

		trigger = { has_character_flag = armorsmith }

		custom_tooltip = {
			text = EVTOPTG_MNM_9118_TT
			event_target:smith = { set_character_flag = armor_set }
		}
	}

	after = {
		character_event = { id = MNM.9120 days = 7 }
	}
}

# And how much are you willing to spend?
character_event = {
	id = MNM.9120
	desc = EVTDESC_MNM_9120_NEW
	picture = GFX_evt_weaponsmith
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	is_triggered_only = yes
	show_root = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	# The best money can buy
	option = {
		name = EVTOPTA_MNM_9120

		trigger = { real_tier = EMPEROR }

		event_target:smith = {
			show_scope_change = no

			trigger_switch = {
				on_trigger = has_character_flag

				weapon_sword    = { custom_tooltip = { text = EVTOPTA_MNM_9120_TT_SWORD_EMPEROR } }
				weapon_scimitar = { custom_tooltip = { text = EVTOPTA_MNM_9120_TT_SWORDSCIMITAR_EMPEROR } }
				weapon_lance    = { custom_tooltip = { text = EVTOPTA_MNM_9120_TT_LANCE_EMPEROR } }
				weapon_axe      = { custom_tooltip = { text = EVTOPTA_MNM_9120_TT_AXE_EMPEROR } }
				weapon_mace     = { custom_tooltip = { text = EVTOPTA_MNM_9120_TT_MACE_EMPEROR } }
				weapon_bow      = { custom_tooltip = { text = EVTOPTA_MNM_9120_TT_BOW_EMPEROR } }
				armor_set       = { custom_tooltip = { text = EVTOPTA_MNM_9120_TT_ARMOR_EMPEROR } }
			}
		}

		scaled_wealth = { value = -3.5 min = -400 max = -2000 }

		hidden_effect = {
			set_variable = { which = local_smithed_item_tier value = 3 }
			random_list = {
				55 = { # Success
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <=  2 } }
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <=  4 } }
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <=  6 } }
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <=  8 } }
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <= 10 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 10 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 12 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 14 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 16 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 18 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 20 } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = greedy } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = diligent } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = patient } }
					mult_modifier = { factor = 1.3 event_target:smith = { is_smart_trigger = yes } }
					mult_modifier = { factor = 1.5 event_target:the_armory = { always = yes } }

					set_character_flag = smith_upgrade
				}

				45 = { set_character_flag = smith_complete } # Fail

				10 = { # Steal
					trigger = {
						NOT = {
							any_owned_bloodline = {
								has_bloodline_flag = bloodline_artisan_craftsmen
								bloodline_is_active_for = PREV
							}
						}
					}

					mult_modifier = { factor = 0.2 event_target:smith = { trait = charitable } }
					mult_modifier = { factor = 0.2 event_target:smith = { trait = content } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = deceitful } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = envious } }
					mult_modifier = { factor = 1.5 event_target:smith = { trait = ambitious } }

					set_character_flag = smith_steal
				}
			}

			character_event = {
				id = MNM.9111
				days = 50
				random = 100
			}

			character_event = { # tombola for random events
				id = MNM.9133
				days = 20
				random = 5
			}
		}

		ai_chance = {
			factor = 330

			trigger = {
				wealth >= 400
				yearly_income >= 40
			}
		}
	}

	# Something nice
	option = {
		name = {
			text = EVTOPTB_MNM_9120
			trigger = { real_tier = EMPEROR }
		}
		name = {
			text = EVTOPTB_MNM_9120_KING
			trigger = { real_tier = KING }
		}

		trigger = { higher_real_tier_than = DUKE }

		event_target:smith = {
			show_scope_change = no

			trigger_switch = {
				on_trigger = has_character_flag

				weapon_sword = {
					if = {
						limit = { ROOT = { real_tier = EMPEROR } }
						custom_tooltip = { text = EVTOPTB_MNM_9120_TT_SWORD_EMPEROR }
					}
					else = {
						custom_tooltip = { text = EVTOPTB_MNM_9120_TT_SWORD_KING }
					}
				}

				weapon_scimitar = {
					if = {
						limit = { ROOT = { real_tier = EMPEROR } }
						custom_tooltip = { text = EVTOPTB_MNM_9120_TT_SWORDSCIMITAR_EMPEROR }
					}
					else = {
						custom_tooltip = { text = EVTOPTB_MNM_9120_TT_SWORDSCIMITAR_KING }
					}
				}

				weapon_lance = {
					if = {
						limit = { ROOT = { real_tier = EMPEROR } }
						custom_tooltip = { text = EVTOPTB_MNM_9120_TT_LANCE_EMPEROR }
					}
					else = {
						custom_tooltip = { text = EVTOPTB_MNM_9120_TT_LANCE_KING }
					}
				}

				weapon_axe = {
					if = {
						limit = { ROOT = { real_tier = EMPEROR } }
						custom_tooltip = { text = EVTOPTB_MNM_9120_TT_AXE_EMPEROR }
					}
					else = {
						custom_tooltip = { text = EVTOPTB_MNM_9120_TT_AXE_KING }
					}
				}

				weapon_mace = {
					if = {
						limit = { ROOT = { real_tier = EMPEROR } }
						custom_tooltip = { text = EVTOPTB_MNM_9120_TT_MACE_EMPEROR }
					}
					else = {
						custom_tooltip = { text = EVTOPTB_MNM_9120_TT_MACE_KING }
					}
				}

				weapon_bow = {
					if = {
						limit = { ROOT = { real_tier = EMPEROR } }
						custom_tooltip = { text = EVTOPTB_MNM_9120_TT_BOW_EMPEROR }
					}
					else = {
						custom_tooltip = { text = EVTOPTB_MNM_9120_TT_BOW_KING }
					}
				}

				armor_set = {
					if = {
						limit = { ROOT = { real_tier = EMPEROR } }
						custom_tooltip = { text = EVTOPTB_MNM_9120_TT_ARMOR_EMPEROR }
					}
					else = {
						custom_tooltip = { text = EVTOPTB_MNM_9120_TT_ARMOR_KING }
					}
				}
			}
		}

		scaled_wealth = { value = -2.5 min = -180 max = -500 }

		hidden_effect = {
			set_variable = { which = local_smithed_item_tier value = 2 }

			random_list = {
				70 = { # Success
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <= 2 } }
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <= 4 } }
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <= 6 } }
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <= 8 } }
					mult_modifier = { factor = 0.7 event_target:smith = { stewardship <= 10 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 10 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 12 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 14 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 16 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 18 } }
					mult_modifier = { factor = 1.1 event_target:smith = { stewardship >= 20 } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = greedy } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = diligent } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = patient } }
					mult_modifier = { factor = 1.3 event_target:smith = { is_smart_trigger = yes } }
					mult_modifier = { factor = 1.5 event_target:the_armory = { always = yes } }

					set_character_flag = smith_upgrade
				}

				30 = { set_character_flag = smith_complete } # Fail

				10 = { # Steal
					trigger = {
						NOT = {
							any_owned_bloodline = {
								has_bloodline_flag = bloodline_artisan_craftsmen
								bloodline_is_active_for = PREV
							}
						}
					}

					mult_modifier = { factor = 0.2 event_target:smith = { trait = charitable } }
					mult_modifier = { factor = 0.2 event_target:smith = { trait = content } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = deceitful } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = envious } }
					mult_modifier = { factor = 1.5 event_target:smith = { trait = ambitious } }

					set_character_flag = smith_steal
				}
			}

			character_event = {
				id = MNM.9111
				days = 50
				random = 100
			}

			character_event = { # tombola for random events
				id = MNM.9133
				days = 20
				random = 5
			}
		}

		ai_chance = {
			factor = 33

			trigger = {
				wealth >= 180
				yearly_income >= 18
			}

			mult_modifier = {
				real_tier = KING
				factor = 10
			}
			mult_modifier = {
				real_tier = EMPEROR
				factor = 3
			}
		}
	}

	# I can't afford that much
	option = {
		name = {
			text = EVTOPTC_MNM_9120
			trigger = { real_tier = EMPEROR }
		}
		name = {
			text = EVTOPTC_MNM_9120_KING
			trigger = { real_tier = KING }
		}
		name = {
			text = EVTOPTC_MNM_9120_GENERIC
			trigger = { lower_real_tier_than = KING }
		}

		event_target:smith = {
			show_scope_change = no

			trigger_switch = {
				on_trigger = has_character_flag

				weapon_bow = {
					if = {
						limit = { ROOT = { real_tier = EMPEROR } }
						custom_tooltip = { text = EVTOPTC_MNM_9120_TT_BOW_EMPEROR }
					}
					else_if = {
						limit = { ROOT = { real_tier = KING } }
						custom_tooltip = { text = EVTOPTC_MNM_9120_TT_BOW_KING }
					}
					else = {
						custom_tooltip = { text = EVTOPTC_MNM_9120_TT_BOW_GENERIC }
					}
				}

				armor_set = {
					if = {
						limit = { ROOT = { real_tier = EMPEROR } }
						custom_tooltip = { text = EVTOPTC_MNM_9120_TT_ARMOR_EMPEROR }
					}
					else_if = {
						limit = { ROOT = { real_tier = KING } }
						custom_tooltip = { text = EVTOPTC_MNM_9120_TT_ARMOR_KING }
					}
					else = {
						custom_tooltip = { text = EVTOPTC_MNM_9120_TT_ARMOR_GENERIC }
					}
				}

				fallback = {
					if = {
						limit = { ROOT = { real_tier = EMPEROR } }
						custom_tooltip = { text = EVTOPTC_MNM_9120_TT_SWORDSCIMITAR_EMPEROR }
					}
					else_if = {
						limit = { ROOT = { real_tier = KING } }
						custom_tooltip = { text = EVTOPTC_MNM_9120_TT_SWORDSCIMITAR_KING }
					}
					else = {
						custom_tooltip = { text = EVTOPTC_MNM_9120_TT_SWORDSCIMITAR_GENERIC }
					}
				}
			}
		}

		scaled_wealth = { value = -1.25 min = -50 max = -100 }

		hidden_effect = {
			set_variable = { which = local_smithed_item_tier value = 1 }

			random_list = {
				100 = { set_character_flag = smith_complete } # Success

				10 = { # Steal
					trigger = {
						NOT = {
							any_owned_bloodline = {
								has_bloodline_flag = bloodline_artisan_craftsmen
								bloodline_is_active_for = PREV
							}
						}
					}

					mult_modifier = { factor = 0.2 event_target:smith = { trait = charitable } }
					mult_modifier = { factor = 0.2 event_target:smith = { trait = content } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = deceitful } }
					mult_modifier = { factor = 1.3 event_target:smith = { trait = envious } }
					mult_modifier = { factor = 1.5 event_target:smith = { trait = ambitious } }

					set_character_flag = smith_steal
				}
			}

			character_event = {
				id = MNM.9111
				days = 50
				random = 100
			}

			character_event = { # tombola for random events
				id = MNM.9133
				days = 20
				random = 5
			}
		}

		ai_chance = {
			factor = 33

			trigger = {
				trigger_if = {
					limit = { is_allowed_to_loot = no }
					wealth >= 75
					yearly_income >= 7.5
				}
			}

			mult_modifier = {
				real_tier = DUKE
				factor = 10
			}
			mult_modifier = {
				real_tier = KING
				factor = 3
			}
		}
	}

	# Actually, no
	option = {
		name = EVTOPTD_MNM_9120

		custom_tooltip = { text = EVTOPTD_MNM_9120_TT }

		clr_character_flag = weaponsmith
		clr_character_flag = armorsmith

		event_target:smith = {
			character_event = { id = MNM.9110 days = 5 }
		}

		ai_chance = {
			factor = 15

			# CleanSlate: Why in the world would you go all this way before checking this? Now checked earlier when choosing item type.
			# mult_modifier = {
			#	factor = 20
			#	NOR = {
			#		has_education_martial_trigger = yes
			#		has_lifestyle_martial_trigger = yes
			#	}
			# }
		}
	}
}

### Your own smiths have a go

# Don't have an armory
character_event = {
	id = MNM.9999
	picture = GFX_evt_weaponsmith
	border = GFX_event_normal_frame_economy

	desc = {
		text = EVTDESC_MNM_9999
		trigger = { has_character_flag = got_terrible_sword }
	}
	desc = {
		text = EVTDESC_MNM_9999_armor
		trigger = { has_character_flag = got_terrible_armor }
	}

	# hide_from = yes
	hide_new = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	option = {
		name = EVTOPTA_MNM_9999

		trigger_switch = {
			on_trigger = has_character_flag

			got_terrible_sword = { add_artifact = terrible_sword }
			got_terrible_armor = { add_artifact = terrible_armor }
		}
	}
}

# What kind of weapon would you like? Your armory (Equivalent to MNM.9118)
character_event = {
	id = MNM.9102
	# id = LT.20201
	desc = EVTDESC_LT_20201
	picture = GFX_evt_weaponsmith
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	is_triggered_only = yes
	show_root = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	# Sword
	option = {
		name = EVTOPTA_MNM_9118

		trigger = {
			has_character_flag = weaponsmith

			NOR = {
				religion_group = muslim
				has_dharmic_religion_trigger = yes
				has_artifact = sword_tier_2_new
			}
		}

		custom_tooltip = {
			text = EVTOPTA_MNM_9118_TT
			event_target:smith = { set_character_flag = weapon_sword }
		}

		scaled_wealth = { value = -1.5 min = -75 max = -150 }

		ai_chance = { factor = 2 }
	}

	# Zweihander Sword
	option = {
		name = EVTOPTA_zweihanded_LT_20201

		trigger = {
			has_character_flag = weaponsmith

			NOR = {
				religion_group = muslim
				has_dharmic_religion_trigger = yes
				has_artifact = zweihander_sword
			}

			OR = {
				likes_germanics = yes
				likes_latino_iberians = yes
				culture_group = celtic
			}
		}

		custom_tooltip = {
			text = EVTOPTA_MNM_LT_20201_TT
			event_target:smith = { set_character_flag = zweihanded_sword }
		}

		scaled_wealth = { value = -2 min = -100 max = -200 }

		ai_chance = { factor = 2 }
	}

	# Scimitar
	option = {
		name = EVTOPTB_MNM_9118

		trigger = {
			has_character_flag = weaponsmith

			OR = {
				religion_group = muslim
				has_dharmic_religion_trigger = yes
			}

			NOT = { has_artifact = scimitar_tier_2_new }
		}

		custom_tooltip = {
			text = EVTOPTB_MNM_9118_TT
			event_target:smith = { set_character_flag = weapon_scimitar }
		}

		scaled_wealth = { value = -1.5 min = -75 max = -150 }

		ai_chance = { factor = 2 }
	}

	# Lance
	option = {
		name = EVTOPTC_MNM_9118

		trigger = {
			has_character_flag = weaponsmith
			NOT = { has_artifact = lance_tier_2_new }
		}

		custom_tooltip = {
			text = EVTOPTC_MNM_9118_TT
			event_target:smith = { set_character_flag = weapon_lance }
		}

		scaled_wealth = { value = -1.5 min = -75 max = -150 }

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 2
				is_nomadic = yes
			}
		}
	}

	# Axe
	option = {
		name = EVTOPTD_MNM_9118

		trigger = {
			has_character_flag = weaponsmith
			NOT = { has_artifact = axe_tier_2_new }
		}

		custom_tooltip = {
			text = EVTOPTD_MNM_9118_TT
			event_target:smith = { set_character_flag = weapon_axe }
		}

		scaled_wealth = { value = -1.5 min = -75 max = -150 }

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 3
				is_tribal = yes
			}
		}
	}

	# Mace
	option = {
		name = EVTOPTE_MNM_9118

		trigger = {
			has_character_flag = weaponsmith
			is_nomadic = no
			NOT = { has_artifact = mace_tier_2_new }
		}

		custom_tooltip = {
			text = EVTOPTE_MNM_9118_TT
			event_target:smith = { set_character_flag = weapon_mace }
		}

		scaled_wealth = { value = -1.5 min = -75 max = -150 }

		ai_chance = {
			factor = 1

			mult_modifier = {
				factor = 5
				religion_openly_norse_or_reformed_trigger = yes
			}
		}
	}

	# Bow
	option = {
		name = EVTOPTF_MNM_9118

		trigger = {
			has_character_flag = weaponsmith
			is_nomadic = yes
			NOT = { has_artifact = bow_tier_2_new }
		}

		custom_tooltip = {
			text = EVTOPTF_MNM_9118_TT
			event_target:smith = { set_character_flag = weapon_bow }
		}

		scaled_wealth = { value = -1.5 min = -75 max = -150 }

		ai_chance = { factor = 5 }
	}

	# Armor
	option = {
		name = EVTOPTG_MNM_9118

		trigger = {
			has_character_flag = armorsmith
			NOT = { has_artifact = armor_tier_2 }
		}

		custom_tooltip = {
			text = EVTOPTG_MNM_9118_TT
			event_target:smith = { set_character_flag = armor_set }
		}

		scaled_wealth = { value = -1.5 min = -75 max = -150 }
	}

	after = {
		event_target:smith = {
			character_event = {
				id = MNM.9104
				days = 50
				random = 10
			}
		}
	}
}

### Common Events ###

# Completion tombola and ping event for checking if smith died. Merged with MNM.9125
character_event = {
	id = MNM.9111

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}

		event_target:smith = { is_alive = yes }
	}

	fail_trigger_effect = {
		character_event = { id = MNM.9112 }
	}

	immediate = {
		trigger_switch = {
			on_trigger = has_character_flag

			smith_upgrade = {
				clr_character_flag = smith_upgrade
				character_event = { id = MNM.9109 }
			}

			smith_complete = {
				clr_character_flag = smith_complete

				event_target:smith = {
					character_event = { id = MNM.9104 }
				}
			}

			smith_steal = {
				clr_character_flag = smith_steal

				event_target:smith = {
					character_event = { id = MNM.9131 }
				}
			}
		}
	}
}

# Potentially better
# Merged with MNM.9129
character_event = {
	id = MNM.9109
	picture = GFX_evt_merchant_caravan
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	desc = {
		text = EVTDESC_MNM_9109_NEW
		trigger = { has_character_flag = goldsmith }
	}
	desc = {
		text = EVTDESC_MNM_9129_NEW
		trigger = {
			OR = {
				has_character_flag = weaponsmith
				has_character_flag = armorsmith
			}
		}
	}

	is_triggered_only = yes
	show_root = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	# I want better expensive stuff
	option = {
		name = EVTOPTA_MNM_9109

		trigger = {
			check_variable = { which = local_smithed_item_tier value == 3 }
		}

		if = {
			limit = { has_character_flag = goldsmith }
			custom_tooltip = { text = EVTOPTA_MNM_9109_TT_NEW }
			scaled_wealth = { value = -3 min = -150 max = -1000 }
		}
		else = {
			custom_tooltip = { text = EVTOPTA_MNM_9129_TT_NEW }
			scaled_wealth = { value = -2 min = -300 max = -1000 }
		}

		hidden_effect = {
			change_variable = { which = local_smithed_item_tier value = 1 }
		}

		ai_chance = {
			factor = 1

			trigger = {
				trigger_if = {
					limit = { has_character_flag = goldsmith }
					scaled_wealth = { value = 3 min = 150 max = 1000 }
				}
				trigger_else = {
					scaled_wealth = { value = 2 min = 300 max = 1000 }
				}
			}
		}
	}

	# Settle for less expensive stuff
	option = {
		name = EVTOPTB_MNM_9109

		trigger = {
			check_variable = { which = local_smithed_item_tier value == 3 }
		}

		if = {
			limit = { has_character_flag = goldsmith }
			custom_tooltip = { text = EVTOPTB_MNM_9109_TT_NEW }
		}
		else = {
			custom_tooltip = { text = EVTOPTB_MNM_9129_TT_NEW }
		}
	}

	# I want better good stuff
	option = {
		name = EVTOPTC_MNM_9109

		trigger = {
			check_variable = { which = local_smithed_item_tier value == 2 }
		}

		if = {
			limit = { has_character_flag = goldsmith }
			custom_tooltip = { text = EVTOPTC_MNM_9109_TT_NEW }
			scaled_wealth = { value = -1.5 min = -100 max = -500 }
		}
		else = {
			custom_tooltip = { text = EVTOPTC_MNM_9129_TT_NEW }
			scaled_wealth = { value = -1.25 min = -100 max = -500 }
		}

		hidden_effect = {
			change_variable = { which = local_smithed_item_tier value = 1 }
		}

		ai_chance = {
			factor = 1

			trigger = {
				trigger_if = {
					limit = { has_character_flag = goldsmith }
					scaled_wealth = { value = 1.5 min = 100 max = 500 }
				}
				trigger_else = {
					scaled_wealth = { value = 1.25 min = 100 max = 500 }
				}
			}
		}
	}

	# Settle for less good stuff
	option = {
		name = EVTOPTD_MNM_9109

		trigger = {
			check_variable = { which = local_smithed_item_tier value == 2 }
		}

		if = {
			limit = { has_character_flag = goldsmith }
			custom_tooltip = { text = EVTOPTD_MNM_9109_TT_NEW }
		}
		else = {
			custom_tooltip = { text = EVTOPTD_MNM_9129_TT_NEW }
		}
	}

	after = {
		character_event = { id = MNM.9111 days = 100 } # Check to make sure smith is still alive

		event_target:smith = {
			character_event = { id = MNM.9104 days = 100 } # CleanSlate: No longer random to ensure it occurs on the same day as the other event
		}

		# event_target:smith = { character_event = { id = MNM.9104 days = 50 random = 100 } }
	}
}

# Completed item tombola and ping event for checking if liege died
# Merged with MNM.9121
character_event = {
	id = MNM.9104

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	immediate = {
		if = {
			limit = { event_target:smith_employer = { is_alive = no } }
			liege = { save_event_target_as = smith_employer }
		}

		if = {
			limit = { has_character_flag = goldsmith }

			if = {
				limit = {
					check_variable = { which = local_smithed_item_tier value == 4 }
				}
				event_target:smith_employer = { character_event = { id = MNM.40001 } }
			}
			else_if = {
				limit = {
					check_variable = { which = local_smithed_item_tier value == 3 }
				}
				event_target:smith_employer = { character_event = { id = MNM.9105 } }
			}
			else_if = {
				limit = {
					check_variable = { which = local_smithed_item_tier value == 2 }
				}
				event_target:smith_employer = { character_event = { id = MNM.9106 } }
			}
			else_if = {
				limit = {
					check_variable = { which = local_smithed_item_tier value == 1 }
				}
				event_target:smith_employer = { character_event = { id = MNM.9107 } }
			}
		}
		else = {
			if = {
				limit = {
					check_variable = { which = local_smithed_item_tier value == 4 }
				}
				event_target:smith_employer = { character_event = { id = MNM.40000 } }
			}
			else_if = {
				limit = {
					check_variable = { which = local_smithed_item_tier value == 3 }
				}
				event_target:smith_employer = { character_event = { id = MNM.9122 } }
			}
			else_if = {
				limit = {
					check_variable = { which = local_smithed_item_tier value == 2 }
				}
				event_target:smith_employer = { character_event = { id = MNM.9123 } }
			}
			else_if = {
				limit = {
					check_variable = { which = local_smithed_item_tier value == 1 }
				}
				event_target:smith_employer = { character_event = { id = MNM.9124 } }
			}
		}
	}
}

# Smith died
# Merged with MNM.9126
character_event = {
	id = MNM.9112
	desc = EVTDESC_MNM_9112
	picture = GFX_evt_weaponsmith
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	is_triggered_only = yes
	show_root = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	# Returned leftover money
	option = {
		name = EVTOPTA_MNM_9112

		trigger = { check_variable = { which = local_smithed_item_tier value == 4 } }

		if = {
			limit = { has_character_flag = goldsmith }
			scaled_wealth = { value = 5 min = 270 max = 2400 }
		}
		else = {
			scaled_wealth = { value = 4.5 min = 420 max = 2400 }
		}
	}

	# Returned leftover money
	option = {
		name = EVTOPTA_MNM_9112

		trigger = { check_variable = { which = local_smithed_item_tier value == 3 } }

		if = {
			limit = { has_character_flag = goldsmith }
			scaled_wealth = { value = 3 min = 180 max = 1600 }
		}
		else = {
			scaled_wealth = { value = 3.5 min = 230 max = 1600 }
		}
	}

	# Returned leftover money
	option = {
		name = EVTOPTB_MNM_9112

		trigger = { check_variable = { which = local_smithed_item_tier value == 2 } }

		if = {
			limit = { has_character_flag = goldsmith }
			scaled_wealth = { value = 1.5 min = 90 max = 400 }
		}
		else = {
			scaled_wealth = { value = 1.8 min = 100 max = 400 }
		}
	}

	# Returned leftover money
	option = {
		name = EVTOPTC_MNM_9112

		trigger = { check_variable = { which = local_smithed_item_tier value == 1 } }

		if = {
			limit = { has_character_flag = goldsmith }
			scaled_wealth = { value = 0.5 min = 25 max = 80 }
		}
		else = {
			scaled_wealth = { value = 0.8 min = 40 max = 80 }
		}
	}

	after = {
		clear_smith_employer_flags_effect = yes
	}
}

# Remove smith
# Merged with MNM.9127
character_event = {
	id = MNM.9110

	is_triggered_only = yes
	hide_window = yes

	trigger = { is_ruler = no }

	fail_trigger_effect = {
		clear_smith_flags_effect = yes
	}

	immediate = {
		any_spouse = {
			limit = { is_lowborn = yes }
			leave_court_and_die_effect = yes
		}

		leave_court_and_die_effect = yes
	}
}

# Smith steals item and decides who to give it to
character_event = {
	id = MNM.9131

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	immediate = {
		if = {
			limit = { has_character_flag = goldsmith }

			if = {
				limit = {
					check_variable = { which = local_smithed_item_tier value == 3 }
				}

				if = {
					limit = {
						event_target:smith_employer = {
							OR = {
								religion_group = christian
								religion_group = jewish_group
							}
						}
					}

					add_artifact = crown_of_majesty
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = emerald_scepter
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = sword_of_heroes
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
				else_if = {
					limit = {
						event_target:smith_employer = {
							OR = {
								religion_group = muslim
								religion_openly_west_african_or_reformed_trigger = yes
							}
						}
					}

					add_artifact = dagger_of_glory
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = ruby_bracelets
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
				else_if = {
					limit = {
						event_target:smith_employer = {
							OR = {
								religion_group = indian_group
								religion_openly_bon_or_reformed_trigger = yes
							}
						}
					}

					add_artifact = dagger_of_glory
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = celestial_necklace
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
				else_if = {
					limit = {
						event_target:smith_employer = {
							OR = {
								religion_group = zoroastrian_group
								religion_openly_zun_or_reformed_trigger = yes
							}
						}
					}

					add_artifact = circlet_of_the_heavens
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = staff_of_majesty
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
				else_if = {
					limit = {
						event_target:smith_employer = {
							religion_openly_germanic_or_reformed_trigger = yes
						}
					}

					add_artifact = crown_of_crows
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = sword_of_heroes
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
				else = {
					add_artifact = heros_crown
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = axe_of_the_ancestors
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
			}
			else_if = {
				limit = {
					check_variable = { which = local_smithed_item_tier value == 2 }
				}

				if = {
					limit = {
						event_target:smith_employer = {
							OR = {
								religion_group = christian
								religion_group = jewish_group
							}
						}
					}

					add_artifact = crown_of_pearls
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = ruby_scepter
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = golden_sword
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
				else_if = {
					limit = {
						event_target:smith_employer = {
							OR = {
								religion_group = muslim
								religion_openly_west_african_or_reformed_trigger = yes
							}
						}
					}

					add_artifact = bejeweled_dagger
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = golden_bracelets
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
				else_if = {
					limit = {
						event_target:smith_employer = {
							OR = {
								religion_group = indian_group
								religion_openly_bon_or_reformed_trigger = yes
							}
						}
					}

					add_artifact = bejeweled_dagger
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = necklace_of_radiance
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
				else_if = {
					limit = {
						event_target:smith_employer = {
							OR = {
								religion_group = zoroastrian_group
								religion_openly_zun_or_reformed_trigger = yes
							}
						}
					}

					add_artifact = circlet_of_the_heavens
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = golden_staff
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
				else_if = {
					limit = {
						event_target:smith_employer = {
							religion_openly_germanic_or_reformed_trigger = yes
						}
					}

					add_artifact = crown_of_the_sea
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = golden_sword
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
				else = {
					add_artifact = amber_crown
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = obsidian_axe
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
			}
			else_if = {
				limit = {
					check_variable = { which = local_smithed_item_tier value == 1 }
				}

				if = {
					limit = {
						event_target:smith_employer = {
							OR = {
								religion_group = christian
								religion_group = jewish_group
							}
						}
					}

					add_artifact = the_lily_crown
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = noble_scepter
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = engraved_sword
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
				else_if = {
					limit = {
						event_target:smith_employer = {
							OR = {
								religion_group = muslim
								religion_openly_west_african_or_reformed_trigger = yes
							}
						}
					}

					add_artifact = engraved_dagger
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = silver_bracelets
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
				else_if = {
					limit = {
						event_target:smith_employer = {
							OR = {
								religion_group = indian_group
								religion_openly_bon_or_reformed_trigger = yes
							}
						}
					}

					add_artifact = engraved_dagger
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = collar_of_pearls
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
				else_if = {
					limit = {
						event_target:smith_employer = {
							OR = {
								religion_group = zoroastrian_group
								religion_openly_zun_or_reformed_trigger = yes
							}
						}
					}

					add_artifact = circlet_of_twilight
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = silver_staff
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
				else_if = {
					limit = {
						event_target:smith_employer = {
							religion_openly_germanic_or_reformed_trigger = yes
						}
					}

					add_artifact = iron_crown
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = engraved_sword
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
				else = {
					add_artifact = engraved_crown
					new_artifact = { set_artifact_flag = stolen_by_smith }
					add_artifact = ceremonial_axe
					new_artifact = { set_artifact_flag = stolen_by_smith }
				}
			}
		}
		else = {
			if = {
				limit = {
					check_variable = { which = local_smithed_item_tier value == 3 }
				}

				trigger_switch = {
					on_trigger = has_character_flag

					weapon_sword = {
						random_list = {
							1 = { add_artifact = sword_tier_3_heartseeker }
							1 = { add_artifact = sword_tier_3_vengeance }
							1 = { add_artifact = sword_tier_3_fury }
						}

						new_artifact = { set_artifact_flag = stolen_by_smith }
					}

					weapon_scimitar = {
						random_list = {
							1 = { add_artifact = scimitar_tier_3_golden }
							1 = { add_artifact = scimitar_tier_3_fortune }
							1 = { add_artifact = scimitar_tier_3_conquest }
						}

						new_artifact = { set_artifact_flag = stolen_by_smith }
					}

					weapon_lance = {
						random_list = {
							1 = { add_artifact = lance_tier_3_impaler }
							1 = { add_artifact = lance_tier_3_trident }
							1 = { add_artifact = lance_tier_3_piercer }
						}

						new_artifact = { set_artifact_flag = stolen_by_smith }
					}

					weapon_axe = {
						random_list = {
							1 = { add_artifact = axe_tier_3_cleaver }
							1 = { add_artifact = axe_tier_3_ravager }
							1 = { add_artifact = axe_tier_3_marauder }
						}

						new_artifact = { set_artifact_flag = stolen_by_smith }
					}

					weapon_mace = {
						random_list = {
							1 = { add_artifact = mace_tier_3_foe_hammer }
							1 = { add_artifact = mace_tier_3_bone_breaker }
							1 = { add_artifact = mace_tier_3_shatterer }
						}

						new_artifact = { set_artifact_flag = stolen_by_smith }
					}

					weapon_bow = {
						random_list = {
							1 = { add_artifact = bow_tier_3_silent_wind }
							1 = { add_artifact = bow_tier_3_lightning }
							1 = { add_artifact = bow_tier_3_eagle }
						}

						new_artifact = { set_artifact_flag = stolen_by_smith }
					}

					armor_set = {
						random_list = {
							1 = { add_artifact = armor_tier_3_guardian }
							1 = { add_artifact = armor_tier_3_champion }
							1 = { add_artifact = armor_tier_3_warden }
						}

						new_artifact = { set_artifact_flag = stolen_by_smith }
					}
				}
			}
			else_if = {
				limit = {
					check_variable = { which = local_smithed_item_tier value == 2 }
				}

				trigger_switch = {
					on_trigger = has_character_flag

					weapon_sword    = { add_artifact = sword_tier_2_new    new_artifact = { set_artifact_flag = stolen_by_smith } }
					weapon_scimitar = { add_artifact = scimitar_tier_2_new new_artifact = { set_artifact_flag = stolen_by_smith } }
					weapon_lance    = { add_artifact = lance_tier_2_new    new_artifact = { set_artifact_flag = stolen_by_smith } }
					weapon_axe      = { add_artifact = axe_tier_2_new      new_artifact = { set_artifact_flag = stolen_by_smith } }
					weapon_mace     = { add_artifact = mace_tier_2_new     new_artifact = { set_artifact_flag = stolen_by_smith } }
					weapon_bow      = { add_artifact = bow_tier_2_new      new_artifact = { set_artifact_flag = stolen_by_smith } }
					armor_set       = { add_artifact = armor_tier_2        new_artifact = { set_artifact_flag = stolen_by_smith } }
				}
			}
			else_if = {
				limit = {
					check_variable = { which = local_smithed_item_tier value == 1 }
				}

				trigger_switch = {
					on_trigger = has_character_flag

					weapon_sword    = { add_artifact = sword_tier_1_new    new_artifact = { set_artifact_flag = stolen_by_smith } }
					weapon_scimitar = { add_artifact = scimitar_tier_1_new new_artifact = { set_artifact_flag = stolen_by_smith } }
					weapon_lance    = { add_artifact = lance_tier_1_new    new_artifact = { set_artifact_flag = stolen_by_smith } }
					weapon_axe      = { add_artifact = axe_tier_1_new      new_artifact = { set_artifact_flag = stolen_by_smith } }
					weapon_mace     = { add_artifact = mace_tier_1_new     new_artifact = { set_artifact_flag = stolen_by_smith } }
					weapon_bow      = { add_artifact = bow_tier_1_new      new_artifact = { set_artifact_flag = stolen_by_smith } }
					armor_set       = { add_artifact = armor_tier_1        new_artifact = { set_artifact_flag = stolen_by_smith } }
				}
			}
		}

		# Give to landed rivals first, then nearby rulers who dislike the employer, else keep for self and run away.
		event_target:smith_employer = {
			if = {
				limit = {
					any_rival = {
						is_landed = yes
						is_within_diplo_range = ROOT
					}
				}

				random_rival = {
					limit = {
						is_landed = yes
						is_within_diplo_range = ROOT
					}

					save_event_target_as = smith_steal_target
				}
			}
			else_if = {
				limit = {
					any_neighbor_independent_ruler = {
						is_landed = yes
						opinion = {
							who = event_target:smith_employer
							value < 0
						}
					}
				}

				random_neighbor_independent_ruler = {
					limit = {
						is_landed = yes
						opinion = {
							who = event_target:smith_employer
							value < 0
						}
					}

					preferred_limit = {
						opinion = {
							who = event_target:smith_employer
							value < -30
						}
					}

					save_event_target_as = smith_steal_target
				}
			}
			else = {
				event_target:smith = {
					save_event_target_as = smith_steal_target
				}
			}
		}

		any_artifact = {
			limit = { has_artifact_flag = stolen_by_smith }

			set_original_owner = event_target:smith_employer

			transfer_artifact = {
				to = event_target:smith_steal_target
				from = ROOT
			}
		}

		if = {
			limit = {
				event_target:smith_steal_target = { is_landed = yes }
				is_landed = no
			}

			move_character = event_target:smith_steal_target

			opinion = {
				name = opinion_grateful
				who = event_target:smith_steal_target
				years = 10
			}

			reverse_opinion = {
				name = opinion_grateful
				who = event_target:smith_steal_target
				years = 10
			}
		}
		else = {
			banish = yes
		}

		event_target:smith_employer = {
			character_event = { id = MNM.9132 }
			clear_smith_employer_flags_effect = yes
		}
	}
}

# Smith stole item and fled
character_event = {
	id = MNM.9132
	desc = EVTDESC_MNM_9132
	picture = GFX_evt_merchant_caravan
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	is_triggered_only = yes
	show_root = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	option = {
		name = EVTOPTA_MNM_9132

		opinion = {
			name = opinion_thief
			who = event_target:smith_steal_target
			years = 10
		}

		opinion = {
			name = opinion_thief
			who = event_target:smith
			years = 10
		}

		hidden_effect = {
			event_target:smith_steal_target = {
				any_artifact = {
					limit = { has_artifact_flag = stolen_by_smith }
					clr_artifact_flag = stolen_by_smith
				}
			}

			event_target:smith = {
				remove_nickname = yes
				clear_smith_flags_effect = yes
			}
		}

		ai_chance = {
			factor = 1

			trigger = { intrigue < 15 }
		}
	}

	option = {
		name = EVTOPTB_MNM_9132
		tooltip_info = intrigue

		trigger = { intrigue >= 15 }

		custom_tooltip = { text = EVTOPTB_MNM_9132_TT }

		hidden_effect = {
			event_target:smith_steal_target = {
				any_artifact = {
					limit = { has_artifact_flag = stolen_by_smith }

					clr_artifact_flag = stolen_by_smith
					transfer_artifact = {
						from = event_target:smith_steal_target
						to = ROOT
					}
				}
			}
		}

		event_target:smith = {
			show_scope_change = no

			death = {
				death_reason = death_execution
				killer = ROOT
			}
		}

	}
}

# Tombola for events mid-smithing
character_event = {
	id = MNM.9133

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}

		event_target:smith = { is_alive = yes }
	}

	fail_trigger_effect = {
		character_event = { id = MNM.9112 }
		clear_delayed_event = { id = MNM.9111 }
	}

	immediate = {
		random_list = {
			20 = { # Smith teaches someone stewardship
				trigger = {
					any_courtier_or_vassal = {
						is_inaccessible_or_incapable_trigger = no
						age > 12
						stewardship < 14
						NOT = { character = event_target:smith }
					}
				}

				mult_modifier = {
					factor = 1.5
					has_character_flag = goldsmith
				}

				character_event = { id = MNM.9135 }
			}

			20 = { # Smith makes child/ward stronger
				trigger = {
					OR = {
						any_child = {
							is_inaccessible_or_incapable_trigger = no
							vassal_of = ROOT
							is_adult = no
							age > 8
							is_strong_trigger = no
							NOT = { trait = weak }
						}

						any_pupil = {
							is_inaccessible_or_incapable_trigger = no
							age > 8
							is_strong_trigger = no
							NOT = { trait = weak }
						}
					}
				}

				mult_modifier = {
					factor = 1.5
					OR = {
						has_character_flag = weaponsmith
						has_character_flag = armorsmith
					}
				}

				character_event = { id = MNM.9136 }
			}

			15 = { # Smith sleeps with courtier
				trigger = {
					event_target:smith = {
						NOR = {
							trait = chaste
							trait = celibate
						}
					}

					any_courtier = {
						block_general_event_trigger = no

						NOR = {
							trait = chaste
							trait = celibate
							trait = eunuch
						}

						trigger_if = {
							limit = {
								event_target:smith = { is_female = yes }
							}
							prefers_men_trigger = no
						}
						trigger_else = {
							prefers_men_trigger = yes
						}
					}

					NOT = {
						any_owned_bloodline = {
							has_bloodline_flag = bloodline_artisan_craftsmen # A Legendary Bloodline
							bloodline_is_active_for = PREV
						}
					}
				}

				mult_modifier = {
					factor = 2
					event_target:smith = { trait = lustful }
				}
				mult_modifier = {
					factor = 2
					event_target:smith = { trait = hedonist }
				}
				mult_modifier = {
					factor = 2
					event_target:smith = {
						OR = {
							trait = master_seducer
							trait = master_seductress
						}
					}
				}

				character_event = { id = MNM.9137 }
			}

			15 = { # Smith has an accident

				mult_modifier = {
					factor = 5
					event_target:smith = { is_dumb_trigger = yes }
				}

				character_event = { id = MNM.9138 }
			}

			30 = { }
		}
	}
}

# Smith teaches someone stewardship
character_event = {
	id = MNM.9135
	desc = EVTDESC_MNM_9135
	picture = GFX_evt_weaponsmith
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	is_triggered_only = yes
	show_root = yes

	immediate = {
		random_courtier_or_vassal = {
			limit = {
				is_inaccessible_or_incapable_trigger = no
				age > 12
				stewardship < 14
				NOT = { character = event_target:smith }
			}

			preferred_limit = { is_child_of = ROOT }
			preferred_limit = { is_friend = ROOT }

			save_event_target_as = smith_event_target
		}
	}

	option = {
		name = EVTOPTA_MNM_9135

		prestige = -50

		event_target:smith_event_target = {
			show_scope_change = no

			change_stewardship = 1

			opinion = {
				name = opinion_happy
				who = ROOT
				years = 1
			}

			opinion = {
				name = opinion_grateful
				who = event_target:smith
				years = 1
			}
		}

		opinion = {
			name = opinion_grateful
			who = event_target:smith
			years = 1
		}
	}

	option = {
		name = EVTOPTB_MNM_9135

		reverse_opinion = {
			name = opinion_disappointed
			who = event_target:smith_event_target
			years = 1
		}
		reverse_opinion = {
			name = opinion_upset
			who = event_target:smith
			years = 1
		}

		if = {
			limit = {
				check_variable = { which = local_smithed_item_tier value < 3 }
			}

			prestige = 50

			random = {
				chance = 10

				mult_modifier = {
					factor = 0.5
					check_variable = { which = local_smithed_item_tier value == 2 }
				}

				custom_tooltip = {
					text = smith_improves_quality_tt
					change_variable = { which = local_smithed_item_tier value = 1 }
				}
			}
		}
		else = {
			prestige = 75
		}
	}
}

# Smith makes ward stronger
character_event = {
	id = MNM.9136
	desc = EVTDESC_MNM_9136
	picture = GFX_evt_weaponsmith
	border = GFX_event_normal_frame_war
	portrait = event_target:smith

	is_triggered_only = yes
	show_root = yes

	immediate = {
		random_pupil = {
			limit = {
				age > 8
				is_strong_trigger = no
				NOT = { trait = weak }
				is_inaccessible_or_incapable_trigger = no
			}

			save_event_target_as = smith_event_target
		}

		if = {
			limit = {
				NOT = { event_target:smith_event_target = { always = yes } }
			}

			random_child = {
				limit = {
					vassal_of = ROOT
					is_adult = no
					age > 8
					is_strong_trigger = no
					NOT = { trait = weak }
					is_inaccessible_or_incapable_trigger = no
				}

				save_event_target_as = smith_event_target
			}
		}
	}

	option = {
		name = EVTOPTA_MNM_9136

		prestige = -50

		event_target:smith_event_target = {
			show_scope_change = no

			if = {
				limit = { trait = frail }
				remove_trait = frail
			}
			else = {
				add_trait = brawny
			}

			opinion = {
				name = opinion_happy
				who = ROOT
				years = 1
			}
		}

		event_target:smith = {
			show_scope_change = no

			reverse_opinion = {
				name = opinion_grateful
				who = event_target:smith_event_target
				years = 1
			}

			reverse_opinion = {
				name = opinion_grateful
				who = ROOT
				years = 1
			}
		}
	}

	option = {
		name = EVTOPTB_MNM_9136

		reverse_opinion = {
			name = opinion_disappointed
			who = event_target:smith_event_target
			years = 1
		}

		reverse_opinion = {
			name = opinion_upset
			who = event_target:smith
			years = 1
		}

		if = {
			limit = {
				check_variable = { which = local_smithed_item_tier value < 3 }
			}

			prestige = 50

			random = {
				chance = 10

				mult_modifier = {
					factor = 0.5
					check_variable = { which = local_smithed_item_tier value == 2 }
				}

				custom_tooltip = {
					text = smith_improves_quality_tt
					change_variable = { which = local_smithed_item_tier value = 1 }
				}
			}
		}
		else = {
			prestige = 75
		}
	}
}

# Smith sleeps with courtier
character_event = {
	id = MNM.9137
	desc = EVTDESC_MNM_9137
	picture = GFX_evt_weaponsmith
	border = GFX_event_normal_frame_war
	portrait = event_target:smith

	is_triggered_only = yes
	show_root = yes

	immediate = {
		random_courtier = {
			limit = {
				block_general_event_trigger = no

				NOR = {
					trait = chaste
					trait = celibate
					trait = eunuch
				}

				trigger_if = {
					limit = {
						event_target:smith = { is_female = yes }
					}

					prefers_men_trigger = no
				}
				trigger_else = {
					prefers_men_trigger = yes
				}
			}

			save_event_target_as = smith_event_target
			save_event_target_as = sex_partner
		}

		event_target:smith = { unprotected_sex_effect_event_target = yes }
	}

	option = { # Not my business
		name = EVTOPTA_MNM_9137

		prestige = -75
	}

	option = { # Helll no
		name = EVTOPTB_MNM_9137

		prestige = 25

		reverse_opinion = {
			name = opinion_upset
			who = event_target:smith_event_target
			years = 1
		}

		opinion = {
			name = opinion_angry
			who = event_target:smith
			years = 1
		}

		reverse_opinion = {
			name = opinion_worried
			who = event_target:smith
			years = 1
		}
	}

	option = { # Get out of my court
		name = EVTOPTC_MNM_9137

		hidden_effect = {
			clear_delayed_event = { id = MNM.9111 }
			clear_smith_employer_flags_effect = yes

			event_target:smith = {
				remove_nickname = yes
				clear_smith_flags_effect = yes
			}
		}

		prestige = 100

		event_target:smith = {
			show_scope_change = no

			banish = yes

			opinion = {
				name = opinion_angry
				who = ROOT
				years = 1
			}
		}

		reverse_opinion = {
			name = opinion_angry
			who = event_target:smith_event_target
			years = 1
		}

		if = {
			limit = {
				NOT = {
					event_target:smith_event_target = {
						any_spouse = { ai = no }
					}
				}
			}

			random = {
				chance = 30

				custom_tooltip = {
					text = smith_lover_elopes_tt

					event_target:smith = {
						liege = {
							event_target:smith_event_target = {
								if = {
									limit = { is_landed = no }
									move_character = PREV
								}

								remove_spouse = spouse
								add_spouse = event_target:smith
							}
						}
					}
				}
			}
		}
	}

	option = { # Off with his head
		name = EVTOPTD_MNM_9137

		hidden_effect = {
			clear_delayed_event = { id = MNM.9111 }
			clear_smith_employer_flags_effect = yes
			event_target:smith = { remove_nickname = yes }
		}

		prestige = 100

		event_target:smith = {
			show_scope_change = no

			death = {
				death_reason = death_execution
				killer = ROOT
			}
		}

		reverse_opinion = {
			name = opinion_angry
			who = event_target:smith_event_target
			years = 1
		}
	}
}

# Smith injured in accident
character_event = {
	id = MNM.9138
	desc = EVTDESC_MNM_9138
	picture = GFX_evt_weaponsmith
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	is_triggered_only = yes
	show_root = yes

	option = {
		name = EVTOPTA_MNM_9138

		scaled_wealth = { value = -0.2 min = -30 max = -100 }

		event_target:smith = {
			show_scope_change = no

			random_list = {
				1 = { add_maimed_trait_effect = yes }

				2 = {
					trigger = { NOT = { trait = wounded } }
					add_trait = wounded
				}
			}

			add_character_modifier = {
				name = good_care
				years = 1
			}
		}
	}
	option = {
		name = EVTOPTB_MNM_9138

		hidden_effect = {
			clear_delayed_event = { id = MNM.9111 }
			clear_smith_employer_flags_effect = yes

			event_target:smith = {
				remove_nickname = yes
				clear_smith_flags_effect = yes
			}
		}

		event_target:smith = {
			show_scope_change = no

			random_list = {
				1 = { add_maimed_trait_effect = yes }

				2 = {
					trigger = { NOT = { trait = wounded } }
					add_trait = wounded
				}
			}

			banish = yes
		}
	}
}

### Outcome Events ###

# Tier 4 Crown Jewels
character_event = {
	id = MNM.40001
	desc = EVTDESC_MNM_40001
	picture = GFX_evt_treasure_chamber
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	picture = {
		picture = GFX_evt_holy_emperor
		trigger = { religion_group = christian }
	}
	picture = {
		picture = GFX_evt_treasure_chamber
		trigger = { NOT = { religion_group = christian } }
	}

	is_triggered_only = yes
	show_root = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	option = {
		name = EVTOPTA_MNM_9105

		if = {
			limit = { have_duplicate_goldsmith_artifacts_tier_4_trigger = no } # If player doesn't already have all items in the given set, then give items
			give_goldsmith_artifacts_tier_4_effect = yes
		}
		else = {
			scaled_wealth = { value = 4.5 min = 340 max = 3000 } # Get some money back if duplicate
			custom_tooltip = { text = EVTTT_MNM_9105_NO_DUPLICATES }
		}

		event_target:smith = {
			character_event = { id = MNM.9110 days = 5 }
		}

		clr_character_flag = goldsmith
	}
}

# Tier 3 Crown Jewels
character_event = {
	id = MNM.9105
	desc = EVTDESC_MNM_9105
	picture = GFX_evt_treasure_chamber
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	picture = {
		picture = GFX_evt_holy_emperor
		trigger = { religion_group = christian }
	}
	picture = {
		picture = GFX_evt_treasure_chamber
		trigger = { NOT = { religion_group = christian } }
	}

	is_triggered_only = yes
	show_root = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	option = {
		name = EVTOPTA_MNM_9105

		if = {
			limit = { have_duplicate_goldsmith_artifacts_tier_3_trigger = no } # If player doesn't already have all items in the given set, then give items
			give_goldsmith_artifacts_tier_3_effect = yes
		}
		else = {
			scaled_wealth = { value = 3.5 min = 230 max = 2000 } # Get some money back if duplicate
			custom_tooltip = { text = EVTTT_MNM_9105_NO_DUPLICATES }
		}

		event_target:smith = {
			character_event = { id = MNM.9110 days = 5 }
		}

		clr_character_flag = goldsmith
	}
}

# Tier 2 Crown Jewels
character_event = {
	id = MNM.9106
	desc = EVTDESC_MNM_9106
	picture = GFX_evt_treasure_chamber
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	picture = {
		picture = GFX_evt_holy_emperor
		trigger = { religion_group = christian }
	}
	picture = {
		picture = GFX_evt_treasure_chamber
		trigger = { NOT = { religion_group = christian } }
	}

	is_triggered_only = yes
	show_root = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	option = {
		name = EVTOPTA_MNM_9106

		if = {
			limit = { have_duplicate_goldsmith_artifacts_tier_2_trigger = no }
			# If player doesn't already have all items in the given set, then give items
			give_goldsmith_artifacts_tier_2_effect = yes
		}
		else = {
			scaled_wealth = { value = 1.8 min = 100 max = 500 } # Get some money back if duplicate
			custom_tooltip = { text = EVTTT_MNM_9105_NO_DUPLICATES }
		}

		event_target:smith = {
			character_event = { id = MNM.9110 days = 5 }
		}

		clr_character_flag = goldsmith
	}
}

# Tier 1 Crown Jewels
character_event = {
	id = MNM.9107
	picture = GFX_evt_weaponsmith
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	desc = {
		text = EVTDESC_MNM_9107
		trigger = { real_tier = EMPEROR }
	}
	desc = {
		text = EVTDESC_MNM_9107_KING
		trigger = { real_tier = KING }
	}
	desc = {
		text = EVTDESC_MNM_9107_GENERIC
		trigger = { lower_real_tier_than = KING }
	}

	is_triggered_only = yes
	show_root = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	option = {
		name = EVTOPTA_MNM_9107

		if = {
			limit = { have_duplicate_goldsmith_artifacts_tier_1_trigger = no }
			# If player doesn't already have all items in the given set, then give items
			give_goldsmith_artifacts_tier_1_effect = yes
		}
		else = {
			scaled_wealth = { value = 0.8 min = 40 max = 100 } # Get some money back if duplicate
			custom_tooltip = { text = EVTTT_MNM_9105_NO_DUPLICATES }
		}

		event_target:smith = {
			character_event = { id = MNM.9110 days = 5 }
		}

		clr_character_flag = goldsmith
	}
}

# Tier 4 Weapon
character_event = {
	id = MNM.40000
	picture = GFX_evt_weaponsmith
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	desc = {
		text = EVTDESC_MNM_40000
		trigger = { event_target:smith = { NOT = { has_character_flag = armor_set } } }
	}
	desc = {
		text = EVTDESC_MNM_40000_B
		trigger = { event_target:smith = { has_character_flag = armor_set } }
	}

	is_triggered_only = yes
	show_root = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	option = {
		name = {
			text = EVTOPTA_MNM_40000_SWORD
			trigger = { event_target:smith = { has_character_flag = weapon_sword } }
		}
		name = {
			text = EVTOPTA_MNM_40000_SCIMITAR
			trigger = { event_target:smith = { has_character_flag = weapon_scimitar } }
		}
		name = {
			text = EVTOPTA_MNM_40000_LANCE
			trigger = { event_target:smith = { has_character_flag = weapon_lance } }
		}
		name = {
			text = EVTOPTA_MNM_40000_AXE
			trigger = { event_target:smith = { has_character_flag = weapon_axe } }
		}
		name = {
			text = EVTOPTA_MNM_40000_MACE
			trigger = { event_target:smith = { has_character_flag = weapon_mace } }
		}
		name = {
			text = EVTOPTA_MNM_40000_BOW
			trigger = { event_target:smith = { has_character_flag = weapon_bow } }
		}
		name = {
			text = EVTOPTA_MNM_40000_ARMOR
			trigger = { event_target:smith = { has_character_flag = armor_set } }
		}

		if = {
			limit = { have_duplicate_smith_artifacts_tier_4_optionA_trigger = no } # If player doesn't already have all items in the given set, then give items
			give_smith_artifacts_tier_4_optionA_effect = yes
		}
		else = {
			scaled_wealth = { value = 4.5 min = 420 max = 3000 } # Get some money back if duplicate
			custom_tooltip = { text = EVTTT_MNM_9105_NO_DUPLICATES }
		}
	}

	option = {
		name = {
			text = EVTOPTB_MNM_40000_SWORD
			trigger = { event_target:smith = { has_character_flag = weapon_sword } }
		}
		name = {
			text = EVTOPTB_MNM_40000_SCIMITAR
			trigger = { event_target:smith = { has_character_flag = weapon_scimitar } }
		}
		name = {
			text = EVTOPTB_MNM_40000_LANCE
			trigger = { event_target:smith = { has_character_flag = weapon_lance } }
		}
		name = {
			text = EVTOPTB_MNM_40000_AXE
			trigger = { event_target:smith = { has_character_flag = weapon_axe } }
		}
		name = {
			text = EVTOPTB_MNM_40000_MACE
			trigger = { event_target:smith = { has_character_flag = weapon_mace } }
		}
		name = {
			text = EVTOPTB_MNM_40000_BOW
			trigger = { event_target:smith = { has_character_flag = weapon_bow } }
		}
		name = {
			text = EVTOPTB_MNM_40000_ARMOR
			trigger = { event_target:smith = { has_character_flag = armor_set } }
		}

		if = {
			limit = { have_duplicate_smith_artifacts_tier_4_optionB_trigger = no } # If player doesn't already have all items in the given set, then give items
			give_smith_artifacts_tier_4_optionB_effect = yes
		}
		else = {
			scaled_wealth = { value = 4.5 min = 420 max = 3000 } # Get some money back if duplicate
			custom_tooltip = { text = EVTTT_MNM_9105_NO_DUPLICATES }
		}
	}

	option = {
		name = {
			text = EVTOPTC_MNM_40000_SWORD
			trigger = { event_target:smith = { has_character_flag = weapon_sword } }
		}
		name = {
			text = EVTOPTC_MNM_40000_SCIMITAR
			trigger = { event_target:smith = { has_character_flag = weapon_scimitar } }
		}
		name = {
			text = EVTOPTC_MNM_40000_LANCE
			trigger = { event_target:smith = { has_character_flag = weapon_lance } }
		}
		name = {
			text = EVTOPTC_MNM_40000_AXE
			trigger = { event_target:smith = { has_character_flag = weapon_axe } }
		}
		name = {
			text = EVTOPTC_MNM_40000_MACE
			trigger = { event_target:smith = { has_character_flag = weapon_mace } }
		}
		name = {
			text = EVTOPTC_MNM_40000_BOW
			trigger = { event_target:smith = { has_character_flag = weapon_bow } }
		}
		name = {
			text = EVTOPTC_MNM_40000_ARMOR
			trigger = { event_target:smith = { has_character_flag = armor_set } }
		}

		if = {
			limit = { have_duplicate_smith_artifacts_tier_4_optionC_trigger = no } # If player doesn't already have all items in the given set, then give items
			give_smith_artifacts_tier_4_optionC_effect = yes
		}
		else = {
			scaled_wealth = { value = 4.5 min = 420 max = 3000 } # Get some money back if duplicate
			custom_tooltip = { text = EVTTT_MNM_9105_NO_DUPLICATES }
		}
	}

	after = {
		event_target:smith = {
			character_event = { id = MNM.9110 days = 5 }
		}

		clr_character_flag = weaponsmith
		clr_character_flag = armorsmith
	}
}

# Tier 3 Weapon
character_event = {
	id = MNM.9122
	picture = GFX_evt_weaponsmith
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	desc = {
		text = EVTDESC_MNM_9122
		trigger = { event_target:smith = { NOT = { has_character_flag = armor_set } } }
	}
	desc = {
		text = EVTDESC_MNM_9122_B
		trigger = { event_target:smith = { has_character_flag = armor_set } }
	}

	is_triggered_only = yes
	show_root = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	option = {
		name = {
			text = EVTOPTA_MNM_9122_SWORD
			trigger = { event_target:smith = { has_character_flag = weapon_sword } }
		}
		name = {
			text = EVTOPTA_MNM_9122_SCIMITAR
			trigger = { event_target:smith = { has_character_flag = weapon_scimitar } }
		}
		name = {
			text = EVTOPTA_MNM_9122_LANCE
			trigger = { event_target:smith = { has_character_flag = weapon_lance } }
		}
		name = {
			text = EVTOPTA_MNM_9122_AXE
			trigger = { event_target:smith = { has_character_flag = weapon_axe } }
		}
		name = {
			text = EVTOPTA_MNM_9122_MACE
			trigger = { event_target:smith = { has_character_flag = weapon_mace } }
		}
		name = {
			text = EVTOPTA_MNM_9122_BOW
			trigger = { event_target:smith = { has_character_flag = weapon_bow } }
		}
		name = {
			text = EVTOPTA_MNM_9122_ARMOR
			trigger = { event_target:smith = { has_character_flag = armor_set } }
		}

		if = {
			limit = { have_duplicate_smith_artifacts_tier_3_optionA_trigger = no } # If player doesn't already have all items in the given set, then give items
			give_smith_artifacts_tier_3_optionA_effect = yes
		}
		else = {
			scaled_wealth = { value = 3.5 min = 230 max = 2000 } # Get some money back if duplicate
			custom_tooltip = { text = EVTTT_MNM_9105_NO_DUPLICATES }
		}
	}

	option = {
		name = {
			text = EVTOPTB_MNM_9122_SWORD
			trigger = { event_target:smith = { has_character_flag = weapon_sword } }
		}
		name = {
			text = EVTOPTB_MNM_9122_SCIMITAR
			trigger = { event_target:smith = { has_character_flag = weapon_scimitar } }
		}
		name = {
			text = EVTOPTB_MNM_9122_LANCE
			trigger = { event_target:smith = { has_character_flag = weapon_lance } }
		}
		name = {
			text = EVTOPTB_MNM_9122_AXE
			trigger = { event_target:smith = { has_character_flag = weapon_axe } }
		}
		name = {
			text = EVTOPTB_MNM_9122_MACE
			trigger = { event_target:smith = { has_character_flag = weapon_mace } }
		}
		name = {
			text = EVTOPTB_MNM_9122_BOW
			trigger = { event_target:smith = { has_character_flag = weapon_bow } }
		}
		name = {
			text = EVTOPTB_MNM_9122_ARMOR
			trigger = { event_target:smith = { has_character_flag = armor_set } }
		}

		if = {
			limit = { have_duplicate_smith_artifacts_tier_3_optionB_trigger = no } # If player doesn't already have all items in the given set, then give items
			give_smith_artifacts_tier_3_optionB_effect = yes
		}
		else = {
			scaled_wealth = { value = 3.5 min = 230 max = 2000 } # Get some money back if duplicate
			custom_tooltip = { text = EVTTT_MNM_9105_NO_DUPLICATES }
		}
	}

	option = {
		name = {
			text = EVTOPTC_MNM_9122_SWORD
			trigger = { event_target:smith = { has_character_flag = weapon_sword } }
		}
		name = {
			text = EVTOPTC_MNM_9122_SCIMITAR
			trigger = { event_target:smith = { has_character_flag = weapon_scimitar } }
		}
		name = {
			text = EVTOPTC_MNM_9122_LANCE
			trigger = { event_target:smith = { has_character_flag = weapon_lance } }
		}
		name = {
			text = EVTOPTC_MNM_9122_AXE
			trigger = { event_target:smith = { has_character_flag = weapon_axe } }
		}
		name = {
			text = EVTOPTC_MNM_9122_MACE
			trigger = { event_target:smith = { has_character_flag = weapon_mace } }
		}
		name = {
			text = EVTOPTC_MNM_9122_BOW
			trigger = { event_target:smith = { has_character_flag = weapon_bow } }
		}
		name = {
			text = EVTOPTC_MNM_9122_ARMOR
			trigger = { event_target:smith = { has_character_flag = armor_set } }
		}

		if = {
			limit = { have_duplicate_smith_artifacts_tier_3_optionC_trigger = no } # If player doesn't already have all items in the given set, then give items
			give_smith_artifacts_tier_3_optionC_effect = yes
		}
		else = {
			scaled_wealth = { value = 3.5 min = 230 max = 2000 } # Get some money back if duplicate
			custom_tooltip = { text = EVTTT_MNM_9105_NO_DUPLICATES }
		}
	}

	after = {
		event_target:smith = {
			character_event = { id = MNM.9110 days = 5 }
		}

		clr_character_flag = weaponsmith
		clr_character_flag = armorsmith
	}
}

# Tier 2 Weapon
character_event = {
	id = MNM.9123
	desc = EVTDESC_MNM_9123
	picture = GFX_evt_weaponsmith
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	is_triggered_only = yes
	show_root = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	option = {
		name = EVTOPTA_MNM_9123

		if = {
			limit = { have_duplicate_smith_artifacts_tier_2_trigger = no } # If player doesn't already have all items in the given set, then give items
			give_smith_artifacts_tier_2_effect = yes
		}
		else = {
			scaled_wealth = { value = 1.8 min = 100 max = 500 } # Get some money back if duplicate
			custom_tooltip = { text = EVTTT_MNM_9105_NO_DUPLICATES }
		}
	}

	after = {
		event_target:smith = {
			character_event = { id = MNM.9110 days = 5 }
		}

		clr_character_flag = weaponsmith
		clr_character_flag = armorsmith
		clr_character_flag = sword_tier_2
		clr_character_flag = zweihanded_sword
		clr_character_flag = scimitar_tier_2
		clr_character_flag = lance_tier_2
		clr_character_flag = axe_tier_2
		clr_character_flag = mace_tier_2
		clr_character_flag = bow_tier_2
	}
}

# Tier 1 Weapon
character_event = {
	id = MNM.9124
	picture = GFX_evt_weaponsmith
	border = GFX_event_normal_frame_economy
	portrait = event_target:smith

	desc = {
		text = EVTDESC_MNM_9124
		trigger = { real_tier = EMPEROR }
	}
	desc = {
		text = EVTDESC_MNM_9124_KING
		trigger = { real_tier = KING }
	}
	desc = {
		text = EVTDESC_MNM_9124_GENERIC
		trigger = { lower_real_tier_than = KING }
	}

	is_triggered_only = yes
	show_root = yes

	trigger = {
		OR = {
			has_dlc = "Mystics"
			has_dlc = "Jade Dragon"
		}
	}

	option = {
		name = EVTOPTA_MNM_9124

		if = {
			limit = { have_duplicate_smith_artifacts_tier_1_trigger = no } # If player doesn't already have all items in the given set, then give items
			give_smith_artifacts_tier_1_effect = yes
		}
		else = {
			scaled_wealth = { value = 0.8 min = 40 max = 100 } # Get some money back if duplicate
			custom_tooltip = { text = EVTTT_MNM_9105_NO_DUPLICATES }
		}
	}

	after = {
		event_target:smith = {
			character_event = { id = MNM.9110 days = 5 }
		}

		clr_character_flag = weaponsmith
		clr_character_flag = armorsmith
		clr_character_flag = sword_tier_1
		clr_character_flag = scimitar_tier_1
		clr_character_flag = lance_tier_1
		clr_character_flag = axe_tier_1
		clr_character_flag = mace_tier_1
		clr_character_flag = bow_tier_1
	}
}